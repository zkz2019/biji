<!-- 添加指纹 -->
<template>
  <el-dialog
    :title="title"
    :visible.sync="dialogVisible"
    :before-close="beforeClose"
    v-loading="loading2"
    append-to-body
    :element-loading-text="loadingtext"
    element-loading-spinner="el-icon-loading"
    element-loading-background="rgba(0, 0, 0, 0.8)"
    width="730px"
  >
    <el-form :model="form">
      <template v-if="!is_add">
        <el-form-item label="指纹机器" :label-width="formLabelWidth">
          <el-select v-model="form.thisfingerprint" placeholder="请选择指纹机器" class="selectbox1">
            <el-option
              v-for="item of fingerprint"
              :key="item.fpcode"
              :label="item.fpname"
              :value="item.fpcode"
            ></el-option>
          </el-select>
        </el-form-item>
      </template>
      <template v-else>
        <el-form-item label="人员归属" :label-width="formLabelWidth">
          <el-input
            :disabled="disabled"
            v-model="namecard"
            autocomplete="off"
            @focus="Chooseaperson"
          ></el-input>
        </el-form-item>
        <el-form-item label="指纹序号" :label-width="formLabelWidth">
          <template v-if="disabled">
            <el-input :disabled="disabled" v-model="fgseqName"></el-input>
          </template>
          <template v-else>
            <el-select v-model="thisfingers">
              <el-option v-for="val of yourfingers" :key="val.id" :label="val.name" :value="val.id"></el-option>
            </el-select>
          </template>
        </el-form-item>
      </template>
    </el-form>
    <div slot="footer" class="dialog-footer">
      <el-button v-if="!is_add" type="primary" @click="Entryto" :disabled="loading2">录入准备</el-button>
      <el-button v-else type="primary" @click="Begantoenter">开始录入</el-button>
    </div>
    <personnel
      @onSelect="openDetails"
      interface="/auth/fingercenter/finger/savefinger/6/getfingerperson"
      @beforeClose="personDialog=false"
      :dialogVisible="personDialog"
    ></personnel>
  </el-dialog>
</template>

<script>
import personnel from "../kwgl/personnel";
export default {
  components: {
    personnel
  },
  props: {
    interfaceUrl: {
      type: String,
      default: "/auth/fingercenter/finger/savefinger/8/savefinger"
    },
    param: Object,
    dialogVisible: Boolean
  },
  data() {
    return {
      personDialog: false,
      title: "添加指纹",
      disabled: false,
      fgseqName: "",
      is_zw: "0", //判断是指纹机读取还是指纹录入  0 指纹机读取  1第一次指纹录入   2第二次指纹录入
      thisfingers: 1, //选中的手指id
      yourfingers: [], //手指列表
      loading2: false,
      is_add: false,
      namecard: "", //选中的人名字与ID
      personcode: "", //选中的人ID
      formLabelWidth: "100",
      fingerprint: [], //指纹机列表
      isfirst: 1, //指纹机读取指纹
      form: {
        thisfingerprint: "" //指纹机编号
      },
      setvals: null, //获取指纹机定时器
      count: 60 //倒计时
    };
  },
  mounted() {
    this.getfingerprint();
    this.getyourfingers("");
  },
  methods: {
    Entryto() {
      if (this.form.thisfingerprint == "") {
        this.$message({
          showClose: true,
          message: "数据有误，必须选择指纹录入机器！",
          type: "error"
        });
        return;
      }
      this.$ajax(
        "/auth/fingercenter/finger/savefinger/2/savefingerprintready",
        {
          fpcode: this.form.thisfingerprint
        },
        "1"
      )
        .then(res => {
          let readyid = res.result;
          this.loading2 = true;
          this.count = 60;
          this.setvals = setInterval(() => {
            if (this.count > 0) {
              this.count--;
            } else {
              clearInterval(this.setvals);
              this.loading2 = false;
              this.count = 60;
              this.$message({
                showClose: true,
                message: "连接超时！",
                type: "error"
              });
            }
          }, 1000);
          this.getfingerprintreadyresult(readyid);
        })
        .catch(err => {
          this.count = 60;
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] `+err.resultMsg  || "连接失败！",
            type: "error"
          });
        });
    },
    //获取读卡/指纹机状态结果 每2秒调用一次   60秒超时
    getfingerprintreadyresult(readyid) {
      this.$ajax(
        "/auth/fingercenter/finger/savefinger/3/getfingerprintreadyresult",
        {
          readyid: readyid
        },
        "1"
      )
        .then(res => {
          if (res.result.resultstate == 0) {
            if (this.loading2) {
              window.setTimeout(() => {
                this.getfingerprintreadyresult(readyid);
              }, 3000);
            }
          } else if (res.result.resultstate == 1) {
            this.is_add = true;
            this.loading2 = false;
            clearInterval(this.setvals);
            this.count = 60;
            this.$message({
              message: res.result.resultmsg || "连接成功！",
              type: "success"
            });
          } else {
            clearInterval(this.setvals);
            this.count = 60;
            this.loading2 = false;
          }
        })
        .catch(err => {
          clearInterval(this.setvals);
          this.count = 60;
          this.loading2 = false;
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] `+err.resultMsg  || "连接失败！",
            type: "error"
          });
        });
    },
    //开始录入指纹信息
    Begantoenter() {
      if (!this.personcode) {
        this.$message({
          showClose: true,
          message: "请选择人员!",
          type: "error"
        });
      } else {
        this.count = 120;
        this.is_zw = "1";
        this.loading2 = true;
        this.emptyfingerprint();
      }
    },
    //清空历史指纹
    emptyfingerprint() {
      this.$ajax(
        "/auth/fingercenter/finger/savefinger/4/deletefingercode",
        {
          fpcode: this.form.thisfingerprint
        },
        "1"
      )
        .then(res => {
          this.setvals = setInterval(() => {
            if (this.count > 0) {
              this.count--;
            } else {
              clearInterval(this.setvals);
              this.loading2 = false;
              this.count = 120;
              this.$message({
                showClose: true,
                message: "连接超时!",
                type: "error"
              });
            }
          }, 1000);
          this.Readfingerprints();
          this.$message("请录入第一次指纹");
        })
        .catch(err => {
              this.$message({
                showClose: true,
                message: `[${err.resultCode}] `+err.resultMsg ,
                type: "error"
              });
            });
    },
    //读取指纹
    Readfingerprints() {
      this.$ajax(
        "/auth/fingercenter/finger/savefinger/5/getfingercode",
        {
          fpcode: this.form.thisfingerprint
        },
        "1"
      )
        .then(res => {
          if (res.resultCode == "0") {
            if (res.result) {
              this.loading2 = false;
              clearInterval(this.setvals);
              if (this.isfirst == 1) {
                this.fingercontent = res.result; //第一次指纹存储
                this.$message({
                  showClose: true,
                  message: "第一次指纹读取成功！请继续录入第二次指纹",
                  type: "success"
                });
                this.is_zw = "2";
                this.isfirst++;
                this.count = 120;
                this.loading2 = true;
                this.setvals = setInterval(() => {
                  if (this.count > 0) {
                    this.count--;
                  } else {
                    clearInterval(this.setvals);
                    this.loading2 = false;
                    this.$message({
                      showClose: true,
                      message: "连接超时！",
                      type: "error"
                    });
                  }
                }, 1000);
                this.Readfingerprints();
              } else {
                this.fingercontent2 = res.result; //第二次指纹存储
                this.$message({
                  showClose: true,
                  message: "第二次指纹读取成功！",
                  type: "success"
                });
                clearInterval(this.setvals);
                this.is_zw = "3";
                this.setsavefinger();
              }
            } else {
              if (this.loading2) {
                window.setTimeout(() => {
                  this.Readfingerprints();
                }, 3000);
              }
            }
          }
        })
        .catch(err => {
          if (this.loading2) {
            window.setTimeout(() => {
              this.Readfingerprints();
            }, 3000);
          }
        });
    },
    //添加指纹
    setsavefinger() {
      this.isfirst = 1;
      this.$ajax(
        this.interfaceUrl,
        {
          fgseq: this.thisfingers, //手指ID
          fingercontent: this.fingercontent, //第一次录入的指纹特征码
          fingercontent2: this.fingercontent2, //第二次录入的指纹特征码
          personcode: this.personcode
        },
        "1"
      )
        .then(res => {
          this.loading2 = false;
          this.$message({
            showClose: true,
            message: "添加成功!",
            type: "success"
          });
          this.$emit("success");
        })
        .catch(err => {
          this.loading2 = false;
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] `+err.resultMsg ,
            type: "error"
          });
        });
    },
    //获取指纹机器列表
    getfingerprint() {
      this.$ajax(
        "/auth/fingercenter/finger/savefinger/1/getfingerprint",
        {},
        "1"
      )
        .then(res => {
          this.fingerprint = res.result;
        })
        .catch(err => {
              this.$message({
                showClose: true,
                message: `[${err.resultCode}] `+err.resultMsg ,
                type: "error"
              });
            });
    },
    beforeClose() {
      //关闭弹出框
      clearInterval(this.setvals);
      this.$emit("beforeClose");
    },
    //获取手指列表
    getyourfingers(personcode) {
      this.$ajax(
        "/auth/fingercenter/finger/savefinger/7/getfingerperson",
        { personcode: personcode },
        "1"
      )
        .then(res => {
          this.yourfingers = res.result;
          let arr = this.yourfingers.map(o => o.id);
          if (!arr.includes(this.thisfingers)) {
            this.thisfingers = this.yourfingers[0].id;
          }
        })
        .catch(err => {
              this.$message({
                showClose: true,
                message: `[${err.resultCode}] `+err.resultMsg ,
                type: "error"
              });
            });
    },

    //确定使用人
    openDetails(val) {
      this.namecard = `${val.personname}(${val.personcode})`;
      this.personcode = val.personcode;
      this.getyourfingers(this.personcode);
      this.personDialog = false;
    },
    //选择使用人弹框开关
    Chooseaperson() {
      this.personDialog = true;
    }
  },
  watch: {
    dialogVisible() {
      if (this.dialogVisible) {
        if (this.param && this.param.personcode) {
          this.disabled = true;
          this.namecard = `${this.param.personname}(${this.param.personcode})`;
          this.personcode = this.param.personcode;
          this.thisfingers = this.param.fgseq;
          this.fgseqName = this.param.fingerseq;
          this.title = "重新录入指纹";
        } else {
          this.disabled = false;
          this.thisfingers = 1;
          this.title = "添加指纹";
          this.namecard = "";
        }
      }
    }
  },
  computed: {
    loadingtext() {
      if (this.is_zw == "0") {
        return `指令正在发送，预计${this.count}秒后返回结果 `;
      } else if (this.is_zw == "1") {
        return `正在获取第一次指纹特征码，倒计时${this.count}秒...`;
      } else if (this.is_zw == "2") {
        return `正在获取第二次指纹特征码，倒计时${this.count}秒...`;
      } else if (this.is_zw == "3") {
        return `正在发送指纹，请稍后`;
      }
    }
  },
  beforeDestroy() {
    clearInterval(this.setvals);
    this.count = 60;
    this.loading2 = false;
  }
};
</script>