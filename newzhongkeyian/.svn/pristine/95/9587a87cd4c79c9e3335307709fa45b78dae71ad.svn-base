<template>
  <el-dialog
    title="导入列表详情"
    width="70%"
    class="importHistory"
    append-to-body
    :close-on-click-modal="false"
    :before-close="beforeDetailed"
    :visible.sync="dialogDetailed"
  >
    <el-container class="dialog-table6 wh100">
      <el-header class="query_headbox">
        <retrieval class="query_head">
          <inpbox :inpb="true">
            <el-input
              clearable
              class="qh_w270 qh_inp maR24"
              v-model="param.search"
              placeholder="输入账号进行查询"
            ></el-input>
          </inpbox>
          <inpbox>
            <fel-button class="qh_btn" type="primary" @click="search()">查询</fel-button>
            <fel-button class="qh_btn" @click="onReset()">重置</fel-button>
          </inpbox>
        </retrieval>
      </el-header>
      <paging-table
        :interface="interface1"
        :list="listInfo"
        :param="param"
        :refresh="detailedRefresh"
      ></paging-table>
    </el-container>
  </el-dialog>
</template>

<script>
import { download } from "@/utils/utils.js";
import { mapGetters } from "vuex";
export default {
  props: {
    dialogDetailed: Boolean,
    listObj: Object,
    uploadid: String | Number
  },
  data() {
    let $this = this;
    return {
      param: { uploadid: "", search: "" },
      listInfo: [],
      detailedRefresh: 0,
      interface1: "/lock/upload/f/getuploadauth",
      sqList: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "账号",
          prop: "userlogin"
        },
        {
          name: "权限详情",
          prop: "uuacontent"
        },
        {
          name: "权限类型",
          prop: "uuatype"
        },
        {
          name: "时间",
          prop: "uuadate"
        },
        {
          name: "状态",
          template: {
            props: ["scope"],
            computed: {
              name() {
                if (this.scope.row.uuastatus == "0") {
                  return "正在导入";
                } else if (this.scope.row.uuastatus == "-1") {
                  return "失败";
                } else {
                  return "成功";
                }
              }
            },
            methods: {
              getClass() {
                let value = this.scope.row.uuastatus;
                if (value == "1") {
                  return "puc-pg";
                } else if (value == "-1") {
                  return "puc-px";
                } else {
                  return "";
                }
              }
            },
            template: `<span :class='getClass()'>{{name}}</span>`
          }
        },
        {
          name: "失败原因",
          prop: "uuaremark"
        }
      ],

      sxList: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "账号",
          prop: "userlogin"
        },
        {
          name: "角色",
          prop: "uutcontent"
        },
        {
          name: "时间",
          prop: "uutdate"
        },
        {
          name: "账号类型",
          prop: "uuttype"
        },
        {
          name: "状态",
          template: {
            props: ["scope"],
            computed: {
              name() {
                if (this.scope.row.uutstatus == "0") {
                  return "正在导入";
                } else if (this.scope.row.uutstatus == "-1") {
                  return "失败";
                } else {
                  return "成功";
                }
              }
            },
            methods: {
              getClass() {
                let value = this.scope.row.uutstatus;
                if (value == "1") {
                  return "puc-pg";
                } else if (value == "-1") {
                  return "puc-px";
                } else {
                  return "";
                }
              }
            },
            template: `<span :class='getClass()'>{{name}}</span>`
          }
        },
        {
          name: "失败原因",
          prop: "uutremark"
        }
      ]
    };
  },
  computed: {},
  watch: {
    dialogDetailed(val) {
      this.onRefresh1();
    },
    uploadid(val) {
      if (val) {
        this.param.uploadid = val;
      } else {
        this.param.puloadid = "";
      }
    },
    listObj(obj) {
      console.log("listObj", obj);
      if (obj.type == "5") {
        this.listInfo = this.sqList;
        this.interface1 = "/system/user/uploadauth/4/getuploaduserauth";
      } else if (obj.type == "6") {
        this.listInfo = this.sxList;
        this.interface1 = "/system/user/uploadtype/4/getuploadusertype";
      }
    }
  },
  methods: {
    ...mapGetters(["getNumber"]),
    beforeDetailed() {
      this.$emit("beforeDetailed");
    },
    search() {
      this.onRefresh1();
    },
    onReset() {
      this.param.search = "";
      this.onRefresh1();
    },
    onRefresh1() {
      this.detailedRefresh = new Date().getTime();
    }
  }
};
</script>