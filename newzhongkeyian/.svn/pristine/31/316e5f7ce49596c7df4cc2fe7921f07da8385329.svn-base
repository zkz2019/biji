<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="MSUI: Build mobile apps with simple HTML, CSS, and JS components.">
    <meta name="author" content="XXXX前端">
    <meta name="viewport"
        content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, initial-scale=1, maximum-scale=1">
    <meta name="format-detection" content="telephone=no">
    <meta name="msapplication-tap-highlight" content="no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <link rel="icon" href="favicon.ico">
    <title>物联智锁</title>
    <style>
        body {
            text-align: center;
            padding-top: 20px;
        }

        button {
            margin: 10px;
            height: 40px;
            line-height: 30px;
            width: 200px;
            font-size: 18px;
            color: #fff;
            background-color: rgb(95, 151, 255);
        }

        .form div {
            height: 40px;
            line-height: 40px;
            margin: 10px;
        }

        .form div input {
            text-indent: 10px;
            font-size: 16px;
            height: 40px;
            line-height: 40px;
        }

        .reveal span {
            padding-left: 10px;
            font-size: 16px;
            height: 40px;
            line-height: 40px;
        }
    </style>


</head>

<body>
    <script>
        function ajax(options) {
            options = options || {}; //调用函数时如果options没有指定，就给它赋值{},一个空的Object
            options.type = (options.type || "GET").toUpperCase(); /// 请求格式GET、POST，默认为GET
            options.dataType = options.dataType || "json"; //响应数据格式，默认json
            var params = formatParams(options.data); //options.data请求的数据
            var xhr;
            //考虑兼容性
            if (window.XMLHttpRequest) {
                xhr = new XMLHttpRequest();
            } else if (window.ActiveObject) { //兼容IE6以下版本
                xhr = new ActiveXobject('Microsoft.XMLHTTP');
            }
            //启动并发送一个请求
            if (options.type == "GET") {
                xhr.open("GET", options.url + "?" + params, true);
                xhr.send(null);
            } else if (options.type == "POST") {
                xhr.open("post", options.url, true);
                //设置表单提交时的内容类型
                //Content-type数据请求的格式
                xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                xhr.send(params);
            }
            //    设置有效时间
            setTimeout(function () {
                if (xhr.readySate != 4) {
                    xhr.abort();
                }
            }, options.timeout)

            //    接收
            //     options.success成功之后的回调函数  options.error失败后的回调函数
            //xhr.responseText,xhr.responseXML  获得字符串形式的响应数据或者XML形式的响应数据
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    var status = xhr.status;
                    if (status >= 200 && status < 300 || status == 304) {
                        options.success && options.success(xhr.responseText, xhr.responseXML);
                    } else {
                        options.error && options.error(status);
                    }
                }
            }
        }

        //格式化请求参数
        function formatParams(data) {
            var arr = [];
            for (var name in data) {
                arr.push(encodeURIComponent(name) + "=" + encodeURIComponent(data[name]));
            }
            arr.push(("v=" + Math.random()).replace(".", ""));
            return arr.join("&");

        }


        function getUrlParam(name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) {
                return unescape(r[2]);
            }
            return null;
        }


        function getCodo() {
            // appid	是	公众号的唯一标识
            // redirect_uri	是	授权后重定向的回调链接地址， 请使用 urlEncode 对链接进行处理
            // response_type	是	返回类型，请填写code
            // scope	是	应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）
            // state	否	重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节
            // #wechat_redirect	是	无论直接打开还是做页面302重定向时候，必须带此参数
            var redirect_uri = "https%3a%2f%2flock.keenzy.cn%2fwx.html";
            var response_type = "code";
            var scope = "snsapi_base";
            var state = "";
            var url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx9eb5520dffa0bbb7&redirect_uri=" +
                redirect_uri + "&response_type=code&scope=snsapi_base";
            window.location.href = url;
        }

        var WX_CODE = getUrlParam("code") || "";


        function onClickBinding() {
            var name = document.getElementById("name").value;
            var password = document.getElementById("pwd").value;

            ajax({
                url: "https://test.keenzy.cn/api/wx/login/1/getopenid",
                type: 'post',
                data: {
                    code: WX_CODE,
                    password: password,
                    userlogin: name
                },
                dataType: 'json',
                timeout: 10000,
                contentType: "application/json",
                success: function (data) {
                    if (typeof data == "string") {
                        data = JSON.parse(data);
                    }
                    if (data.resultCode == 0) {
                        alert("绑定成功");
                    } else {
                        alert(data.resultMsg || "绑定失败");
                    }
                },
                //异常处理
                error: function (e) {
                    console.log(e);
                }
            })
        }

        function onClickUntying() {
            var name = document.getElementById("name").value;
            var password = document.getElementById("pwd").value;

            // ajax({
            //     url: "",
            //     type: 'get',
            //     data: {},
            //     dataType: 'json',
            //     timeout: 10000,
            //     contentType: "application/json",
            //     success: function (data) {
            //         console.log("data", );
            //     },
            //     //异常处理
            //     error: function (e) {
            //         console.log(e);
            //     }
            // })
        }

        let openid = localStorage.getItem("wx.code.binding");
        if (openid || WX_CODE) {

        } else {
            getCodo();
        }
    </script>
    <div class="page">
        <h3>智慧物联管理平台消息推送</h3>
        <p>请先绑定智慧物联管理平台的账号</p>
        <div class="form">
            <div>
                <label>账号：</label><input id="name" type="text" />
            </div>
            <div>
                <label>密码：</label><input id="pwd" type="password" />
            </div>
            <div>
                <button onclick="onClickBinding(this)">绑定</button>
            </div>
        </div>

    </div>
    <div class="reveal" style="display: none;">
        <h3>智慧物联管理平台消息推送</h3>
        <p>你已经绑定了智慧物联管理平台的账号</p>
        <div class="form">
            <div>
                <label>账号：</label><span id="text"></span>
            </div>
            <div>
                <button onclick="onClickUntying(this)">解绑</button>
            </div>
        </div>
    </div>

</body>

</html>