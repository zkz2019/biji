<!-- 登录登出 -->
<template>
  <el-container>
    <el-header class="query_headbox">
      <com-title>{{title}}</com-title>
      <retrieval class="query_head">
        <inpbox :inpb="true">
          <!-- @change="logChange" -->
          <el-select class="con-select qh_inp" v-model="value" filterable placeholder="请选择">
            <el-option
              v-for="item in options1"
              :key="item.functionid"
              :label="item.logtype"
              :value="item.functionid"
            ></el-option>
          </el-select>
        </inpbox>
        <inpbox :inptext="'请选择时间'">
          <dateSelect ref="dates" class="qh_date" v-model="dates"></dateSelect>
          <!-- <fel-date class="qh_date" v-model="dates"></fel-date> -->
        </inpbox>

        <inpbox :inptext="'请输入'">
          <el-input
            clearable
            class="con-search qh_inp"
            v-model="param.search"
            placeholder="输入操作人/操作人账号进行查询"
          ></el-input>
        </inpbox>
        <inpbox :inptext="''">
          <fel-button class="qh_btn" type="primary" @click="search">查询</fel-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="padt0 query_main">
      <paging-table
        class="tobleList wh100"
        height="100%"
        :interface="tburl"
        :list="list"
        :refresh="refresh"
        :param="param"
        @onEjectChange="onEjectChange"
      >
        <!-- 日志导出 -->
        <journalExport :param="param" fatherid="447" :url="importurl"></journalExport>
      </paging-table>
    </el-main>
    <el-dialog
      title="日志详情列表"
      width="70%"
      class="grantDialog"
      :close-on-click-modal="false"
      :before-close="beforeClose"
      :visible.sync="dialogVisible"
    >
      <el-container class="dialog-table query_main">
        <paging-table
          :interface="detailsurl"
          :param="grantParam"
          :refresh="grantRefresh"
          :list="grantList"
        />
      </el-container>
    </el-dialog>
  </el-container>
</template>

<script>
// import dateSelect from "./../query/date-select";
import Storages from "../../utils/Storage.js"; //缓存工具
import { mapGetters } from "vuex";
import journalExport from "./../common/journalExport";
import { format, download } from "@/utils/utils.js";
import { setTimeout } from "timers";
export default {
  props: {
    // options: Array
    // toParam: null
  },
  components: {
    journalExport
    // dateSelect
  },
  data() {
    let $this = this;
    return {
      fatherid: "459",
      grantList: [],
      dialogVisible: false,
      grantParam: {},
      grantRefresh: 0,
      detailsurl: "/system/log/2/getlogdetails",
      importurl: "/system/log/upload/2/downlogs",
      tburl: "/system/log/1/getlog",
      title: "全部日志",
      options1: [],
      value: "",
      dates: [],
      param: {
        sdate: this.getparam(true),
        edate: this.getparam(),
        search: "",
        functionid: ""
      },
      grantList448: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "卡号/指纹号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          //   prop: "issend"
          template: {
            props: ["scope"],
            template: `<span :class="scope.row.issend=='下发成功'?'puc-pg':'puc-px'">{{scope.row.issend}}</span>`
          }
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      grantList450: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "卡号/指纹号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          //   prop: "issend"
          template: {
            props: ["scope"],
            template: `<span :class="scope.row.issend=='下发成功'?'puc-pg':'puc-px'">{{scope.row.issend}}</span>`
          }
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      grantList451: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "卡号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          template: {
            props: ["scope"],
            template: `<span :class="scope.row.issend=='下发成功'?'puc-pg':'puc-px'">{{scope.row.issend}}</span>`
          }
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      grantList452: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "指纹号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          //   prop: "issend"
          template: {
            props: ["scope"],
            template: `<span :class="scope.row.issend=='下发成功'?'puc-pg':'puc-px'">{{scope.row.issend}}</span>`
          }
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      grantList495: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "卡号/指纹号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          //   prop: "issend"
          template: {
            props: ["scope"],
            template: `<span :class="scope.row.issend=='下发成功'?'puc-pg':'puc-px'">{{scope.row.issend}}</span>`
          }
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      grantListxcx: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "卡号/指纹号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          //   prop: "issend"
          template: {
            props: ["scope"],
            template: `<span :class="scope.row.issend=='下发成功'?'puc-pg':'puc-px'">{{scope.row.issend}}</span>`
          }
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "操作时间",
          width: "160px",
          prop: "logdate"
        },
        {
          name: "操作人",
          width: "120px",
          prop: "username"
        },
        {
          name: "操作人账号",
          width: "120px",
          prop: "userlogin"
        },
        {
          name: "日志标题",
          width: "120px",
          prop: "logtitle"
        },
        {
          name: "日志类型",
          width: "220px",
          prop: "logtype"
        },
        {
          tooltip: false,
          name: "日志内容",
          prop: "logcontent"
        },
        {
          show: true,
          name: "详情",
          prop: "logdetailscount",
          template: {
            props: ["scope"],
            computed: {
              row() {
                return this.scope.row;
              }
            },
            methods: {
              isNumber(num) {
                if (num) {
                  return /^[0-9]*$/.test(num);
                }
                return false;
              },
              onClick() {
                $this.grantParam.logid = this.row.logid;
                if (this.row.logtype.search(/房间管理/) > -1) {
                  $this.grantList = $this.grantList448;
                } else if (this.row.logtype.search(/人员管理/) > -1) {
                  $this.grantList = $this.grantList450;
                } else if (this.row.logtype.search(/卡务中心/) > -1) {
                  $this.grantList = $this.grantList451;
                } else if (this.row.logtype.search(/app接口/i) > -1) {
                  $this.grantList = $this.grantListxcx;
                } else if (this.row.logtype.search(/快捷操作/) > -1) {
                  $this.grantList = $this.grantList495;
                }
                $this.grantRefresh = new Date().getTime();
                $this.dialogVisible = true;
              }
            },
            template: `<div>
              <span v-if="isNumber(scope.row.logdetailscount)"><a class="a-click" @click.stop="onClick">{{scope.row.logdetailscount}}</a></span>
              <span v-else>{{scope.row.logdetailscount}}</span>
            </div>`
          }
        }
      ],
      refresh: 0
    };
  },
  watch: {
    // dates(val) {
    //   if (val && val.length == 2) {
    //     this.param.sdate = format(val[0], "yyyy-MM-dd HH:mm:ss");
    //     this.param.edate = format(val[1], "yyyy-MM-dd HH:mm:ss");
    //   } else {
    //     let T = new Date();
    //     let YM = format(T, "yyyy-MM");
    //     let time = format(T, "dd HH:mm:ss");
    //     let tValue = [`${YM}-01 00:00:00`, `${YM}-${time}`];
    //     this.param.sdate = tValue[0];
    //     this.param.edate = tValue[1];
    //   }
    // }
  },
  created() {
    this.getOptions();
    // this.$ajax("/login/home/2/getsonmenu", { fatherid: "459" }, "1")
    //   .then(res => {
    //     res.result.forEach(value => {
    //       let id = value.entity.id;
    //       let alias = value.entity.alias;
    //       if (id == "528") {
    //         this.exportButs.push({
    //           name: alias,
    //           url: "/system/log/upload/1/downlog",
    //           data: this.param
    //         });
    //       }
    //     });
    //   })
    //   .catch(err => {});
  },
  mounted() {
    this.getEject();
  },
  methods: {
    getparam(val = false) {
      let T = new Date();
      let YM = format(T, "yyyy-MM");
      let time = format(T, "dd HH:mm:ss");
      let tValue = [`${YM}-01 00:00:00`, `${YM}-${time}`];
      if (val) {
        return tValue[0];
      } else {
        return tValue[1];
      }
    },
    ...mapGetters(["getNumber"]),
    logChange() {
      let arr = this.value;
      //下拉框选择事件
      if (arr == "459") {
        this.title = "登录登出";
        this.param.functionid = "459";
        this.list[5].show = true;
        // this.importurl = "/system/log/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "448") {
        this.title = "房间管理";
        this.param.functionid = "448";
        this.grantList = this.grantList448;
        this.list[5].show = false;
        // this.importurl = "/system/log/room/upload*/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "449") {
        this.title = "组织管理";
        this.param.functionid = "449";
        this.list[5].show = true;
        // this.importurl = "/system/log/group/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "450") {
        this.title = "人员管理";
        this.param.functionid = "450";
        this.grantList = this.grantList450;
        this.list[5].show = false;
        // this.importurl = "/system/log/person/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "451") {
        this.title = "卡务中心";
        this.param.functionid = "451";
        this.grantList = this.grantList451;
        this.list[5].show = false;
        // this.importurl = "/system/log/card/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "452") {
        this.title = "指纹管理";
        this.param.functionid = "452";
        this.grantList = this.grantList452;
        this.list[5].show = false;
        // this.importurl = "/system/log/finger/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "453") {
        this.title = "建筑管理";
        this.param.functionid = "453";
        this.list[5].show = true;
        // this.importurl = "/system/log/build/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "454") {
        this.title = "设备管理";
        this.param.functionid = "454";
        this.list[5].show = true;
        // this.importurl = "/system/log/device/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "455") {
        this.title = "角色管理";
        this.param.functionid = "455";
        this.list[5].show = true;
        // this.importurl = "/system/log/role/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "456") {
        this.title = "账户管理";
        this.param.functionid = "456";
        this.list[5].show = true;
        // this.importurl = "/system/log/user/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "457") {
        this.title = "设备监控";
        this.param.functionid = "457";
        this.list[5].show = true;
        // this.importurl = "/system/log/monitor/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "458") {
        this.title = "系统参数";
        this.param.functionid = "458";
        this.list[5].show = true;
        // this.importurl = "/system/log/param/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "475") {
        this.title = "小程序或APP";
        this.param.functionid = "475";
        this.list[5].show = false;
        this.grantList = this.grantListxcx;
        // this.importurl = "/system/log/app/upload/1/downlog";
        // this.refresh = new Date().getTime();
      } else if (arr == "495") {
        this.title = "快捷操作";
        this.param.functionid = "495";
        this.list[5].show = false;
        this.grantList = this.grantList495;
        // this.importurl = "/system/log/quick/upload*/1/downlog";
        // this.refresh = new Date().getTime();
      } else {
        this.title = "全部类型";
        this.param.functionid = "";
        this.list[5].show = false;
        // this.importurl = "/system/log/quick/upload*/1/downlog";
        // this.refresh = new Date().getTime();
      }
    },
    beforeClose() {
      this.dialogVisible = false;
    },
    getOptions() {
      //获取下拉框选项
      this.$ajax("/system/log/3/getlogtype", {}, "1").then(res => {
        let opt = res.result;
        res.result.forEach((item, key) => {
          if (item.functionid == "517") {
            opt.splice(key, 1);
          }
        });
        this.options1 = [{ functionid: "", logtype: "全部类型" }, ...opt];
      });

      // if (this.options.length === 0) {
      //   setTimeout(() => {
      //     this.getOptions();
      //   }, 100);
      // } else {
      //   this.options.forEach((value, key) => {
      //     this.options[key] = value.obj;
      //   });
      //   this.options1 = this.options;
      // }
    },
    //重置事件
    onReset() {
      this.dates = [];
      this.value = "";
      this.$refs.dates.value2 = new Date();
      Object.keys(this.param).forEach(key => {
        this.param[key] = "";
      });
      this.search();
    },
    search() {
      if (this.dates && this.dates.length == 2) {
        console.log("1,this.dates", 1, this.dates);
        this.param.sdate = format(this.dates[0], "yyyy-MM-dd HH:mm:ss"); // + " 00:00:00";
        this.param.edate = format(this.dates[1], "yyyy-MM-dd HH:mm:ss"); // + " 23:59:59";
      } else {
        let T = new Date();
        let YM = format(T, "yyyy-MM");
        let time = format(T, "dd HH:mm:ss");
        let tValue = [`${YM}-01 00:00:00`, `${YM}-${time}`];
        this.param.sdate = tValue[0];
        this.param.edate = tValue[1];
      }
      this.refresh = new Date().getTime();
      this.logChange();
    },
    onEjectChange() {
      this.$common.onEjectChange(this.list, "xtrz447");
    },
    getEject() {
      this.$common.getEject(this, "list", "xtrz447");
    }
  }
};
</script>