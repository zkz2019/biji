<template>
  <el-dialog
    :title="title"
    width="70%"
    top="10vh"
    :close-on-click-modal="false"
    :before-close="beforeClose"
    :visible.sync="dialogVisible"
  >
    <el-container>
      <fel-left-tree class="building-copy">
        <div slot="left" class="left-tree">
          <fel-tree1
            slot="top"
            :showCheckbox="false"
            class="tree1 co_tree"
            :idArr="[0]"
            :refresh="refresh"
            interface="/system/build/1/getbuild"
            @handleNodeClick="handleNodeClick"
          ></fel-tree1>
        </div>
        <fel-form
          class="single-row"
          ref="felForm"
          @submitForm="submitForm"
          @closeForm="beforeClose"
          width="140px"
          dynamic
          :button="[]"
          :defaultData="defaultData"
          :formData="formData"
        ></fel-form>
      </fel-left-tree>
    </el-container>
    <div slot="footer" class="dialog-button">
      <el-button @click="beforeClose">取消</el-button>
      <el-button type="primary" @click="dialogSubmitForm">确定</el-button>
    </div>
  </el-dialog>
</template>

<script>
export default {
  props: {
    dialogVisible: Boolean,
    defaultData: {
      type: Object,
      default() {
        return {};
      }
    },
    title: String,
    param: Object
  },
  data() {
    return {
      refresh: 0,
      fatheragid: {},
      pgidObj: {},
      formData: [
        {
          noShow: true,
          value: "sjname",
          name: "上级建筑名称",
          type: "text",
          disabled: true
        },
        {
          value: "buildcode",
          name: "建筑编号",
          type: "text",
          maxlength: 4,
          disabled: false,
          rules: [
            {
              required: true,
              message: "请输入建筑编号",
              trigger: "blur"
            },
            {
              validator: (rule, value, callback) => {
                if (!/^[A-Fa-f0-9]+$/.test(value)) {
                  callback(new Error("建筑编号格式错误!"));
                } else {
                  callback();
                }
              },
              trigger: "blur"
            }
          ]
        },
        {
          value: "buildname",
          name: "建筑名称",
          type: "text",
          rules: [
            {
              required: true,
              message: "请输入建筑名称",
              trigger: "blur"
            }
          ]
        },
        {
          value: "isroom",
          name: "是否包含设备",
          type: "select",
          select: [
            {
              label: "是",
              value: "1"
            },
            {
              label: "否",
              value: "0"
            }
          ],
          rules: [
            {
              required: true,
              message: "请选择是否包含设备",
              trigger: "change"
            }
          ]
        }
      ],
      button: [
        {
          type: "2",
          name: "确认"
        },
        {
          type: "1",
          name: "取消"
        }
      ]
    };
  },
  watch: {
    dialogVisible(val) {
      if (val) {
        this.inGetareacode();
        this.refresh = new Date().getTime();
        this.formData[0].noShow = false;
        let sjname = this.param.buildlocation + "--" + this.param.buildname;
        if (this.param.buildtype == 0) {
          this.formData[0].noShow = true;
        }
        this.defaultData.sjname = sjname;
        if (this.$refs["felForm"]) {
          this.$refs["felForm"].ruleForm.sjname = sjname;
        }
      }
    }
  },
  created() {},
  methods: {
    dialogSubmitForm() {
      if (this.$refs["felForm"]) {
        this.$refs["felForm"].submitForm();
      }
    },
    handleNodeClick(data) {
      this.fatheragid = data;
      if (this.param.buildtype == "1") {
        this.inGetareacode(data.buildtype);
      }
    },
    inGetareacode(buildtype) {
      let url = "/system/build/save/1/getareacode";
      this.$ajax(
        url,
        {
          buildtype
        },
        "1",
        this.param
      )
        .then(res => {
          let result = res.result;
          if (this.$refs["felForm"]) {
            this.$refs["felForm"].ruleForm.buildcode = result.agcode;
            this.$refs["felForm"].ruleForm.buildname = result.agname;
          }
          // this.selects.buildtype = result.buildtypes;
          // this.selects.areatype = result.areatypes;
        })
        .catch(err => {});
    },
    inSavecopyfloor(data) {
      data.buildid = this.param.buildid;
      this.$ajax(
        "/system/build/copy/3/savecopyfloor",
        data,
        "1",
        this.fatheragid,
        true
      )
        .then(res => {
          this.$emit("onRefresh");
          this.beforeClose();
          this.$message({
            message: "复制添加建筑成功",
            type: "success"
          });
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    inSavecopybuild(data) {
      data.buildid = this.param.buildid;
      this.$ajax(
        "/system/build/copy/2/savecopybuild",
        data,
        "1",
        this.fatheragid,
        true
      )
        .then(res => {
          this.$emit("onRefresh");
          this.beforeClose();
          this.$message({
            message: "复制添加建筑成功",
            type: "success"
          });
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },

    inSavecopytopbuild(data) {
      this.$ajax(
        "/system/build/copy/1/savecopytopbuild",
        data,
        "1",
        this.fatheragid,
        true
      )
        .then(res => {
          this.$emit("onRefresh");
          this.beforeClose();
          this.$message({
            message: "复制添加建筑成功",
            type: "success"
          });
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },

    submitForm(data) {
      if (this.fatheragid && this.fatheragid.buildtype) {
        if (this.param.buildtype == 0) {
          if (this.fatheragid.buildtype == 1) {
            this.inSavecopytopbuild(data);
          } else {
            this.$message({
              message: "只能选择复制园区",
              type: "error"
            });
          }
        } else if (this.param.buildtype == 1) {
          if (
            this.fatheragid.buildtype == 1 ||
            this.fatheragid.buildtype == 2
          ) {
            delete data.sjname;
            this.inSavecopybuild(data);
          } else {
            this.$message({
              message: "只能选择复制园区或楼栋",
              type: "error"
            });
          }
        } else if (this.param.buildtype == 2) {
          if (this.fatheragid.buildtype == 3) {
            this.inSavecopyfloor(data);
          } else {
            this.$message({
              message: "只能选择复制楼层",
              type: "error"
            });
          }
        }
      } else {
        this.$message({
          showClose: true,
          message: "请先选中左侧区域",
          type: "warning"
        });
      }
    },
    beforeClose() {
      this.fatheragid = {};
      if (this.$refs["felForm"]) {
        this.$refs["felForm"].resetForm();
      }
      this.$emit("beforeClose");
    }
  }
};
</script>
