<template>
  <el-main class="roomBox" v-loading="loading">
    <div class="roomBox_maxbox" ref="scroll">
      <!-- <el-input v-model="value3"></el-input> -->
      <el-collapse v-model="activeNames" @change="handleChange">
        <el-collapse-item v-for="(obj, key) of list" :key="key" :name="key+''">
          <template slot="title">
            <div class="roomBox_title">
              <div>
                <!-- <span
                  v-if="getTextObj(obj).Show"
                >已入住: {{obj.roomrzcount||0}} | 床位数: {{obj.roommaxcount||0}} | 寝室数: {{obj.roomcount||0}}</span>-->
                <span>{{getTextObj(obj).text}}</span>
              </div>
              <div>
                <h3>{{obj.roomlocation}}</h3>
                <img
                  :src="activeNames.includes(key+'')?require('../../assets/image/open-right.png'):require('../../assets/image/open-bottom.png')"
                  alt
                >
              </div>
              <div>
                <!-- <el-popover
                  :open-delay="200"
                  class="roomBox_title_list"
                  placement="bottom-end"
                  trigger="hover"
                >-->
                <!-- <span title="楼层操作" slot="reference"> -->
                <img src="../../assets/image/list-fjgl.png" alt>
                <!-- </span> -->
                <!-- <ul class="roomBox_title_ul">
                    <li class="roomBox_title_item">未下发成功名单</li>
                    <li class="roomBox_title_item">使用者名单</li>
                    <li class="roomBox_title_item">导出使用者名单</li>
                </ul>-->
                <!-- </el-popover> -->
              </div>
            </div>
          </template>
          <div class="roomBox_scroll">
            <div class="cHeight">
              <div class="roomBox-div">
                <div class="roomBox_box">
                  <div v-if="obj.roomllist.length<=0?true:false" class="listNull">暂无房间</div>
                  <template v-for="(item,k) of obj.roomllist">
                    <div
                      v-if="item.roomtype2=='1'"
                      @click="getfjlist(item, k, key,'|t', obj)"
                      @dblclick="dbgetfjlist(item, k, key,'|t', obj)"
                      :key="k"
                      class="roomBox_box_subbox"
                    >
                      <article v-if="item.roomtype==4" class="iconBox">
                        <span
                          v-if="item.iswx=='1'"
                          :class="getClass(item)"
                          class="ficon-banshou pbanS"
                        ></span>
                        <span v-if="item.isyd> 0" :class="getClass(item)" class="ficon-suo psuo"></span>
                      </article>
                      <span
                        :class=" 'type-'+item.roomnetquality + ' ' + (selection==key+'|t'+k ?'selection':'')"
                      ></span>
                      <!-- 房间 'type-'+item.roomnetquality-->
                      <!-- <el-tooltip :content="item.roomname"  effect="light" placement="top" offset="0"> -->
                      <div>
                        <img
                          :class="getCl(item)"
                          v-if="true"
                          :src="getUrl(item)"
                          :title="item.roomname"
                        >
                        <div
                          :title="item.roomname"
                          class="roomtext"
                        >{{item.roomtype2!=2?/[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi.test(item.roomname)?item.roomname.substring(0,3):item.roomname:""}}</div>
                        <!-- :class="getCl2(item.roomname)"  :class=" reg.test(item.roomname)?'chineseStyle':''" /[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi.test(item.roomname)?'chineseStyle':''+' '+-->
                      </div>
                      <!-- </el-tooltip> -->
                      <div
                        :class="{Danger:item.roomtype==4 && item.roomrzperson!=0}"
                        v-if="item.roomtype2==1&&item.roomnetquality!='0'&&item.roomnetquality!='-2'&&(item.roomtype=='1'||item.roomtype=='4')"
                      >{{item.roomtype==1||item.roomtype==4?item.roomrzperson:item.roombdcard}}/{{item.roomtype==1||item.roomtype==4?item.roommaxperson:item.roommaxcard}}</div>
                      <!-- <span v-if="item.ischeck=='1'?true:false" class="roomchecked"></span> -->
                    </div>
                  </template>
                </div>
              </div>
              <div v-if="obj.roomrlist.length>0?true:false" class="roomBox_center">
                <div>走廊</div>
              </div>
              <div class="roomBox-div">
                <div v-if="obj.roomrlist.length>0?true:false" class="roomBox_box">
                  <template v-for="(item,z) of obj.roomrlist">
                    <div
                      v-if="item.roomtype2=='1'"
                      @click="getfjlist(item, z, key,'|b', obj)"
                      @dblclick="dbgetfjlist(item, z, key,'|b', obj)"
                      :key="z"
                      class="roomBox_box_subbox"
                    >
                      <article v-if="item.roomtype==4" class="iconBox">
                        <span
                          v-if="item.iswx=='1'"
                          :class="getClass(item)"
                          class="ficon-banshou pbanS"
                        ></span>
                        <span v-if="item.isyd> 0" :class="getClass(item)" class="ficon-suo psuo"></span>
                      </article>
                      <span
                        :class="'type-'+item.roomnetquality + ' ' + (selection==key+'|b'+z ?'selection':'')"
                      ></span>
                      <!-- 房间 -->
                      <div>
                        <img
                          :class="getCl(item)"
                          v-if="true"
                          :src="getUrl(item)"
                          :title="item.roomname"
                        >
                        <div
                          :title="item.roomname"
                          class="roomtext"
                        >{{item.roomtype2!=2?/[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi.test(item.roomname)?item.roomname.substring(0,3):item.roomname:""}}</div>
                        <!--  :class=" reg.test(item.roomname)?'chineseStyle':''" -->
                      </div>
                      <div
                        :class="{Danger:item.roomtype==4 && item.roomrzperson!=0}"
                        v-if="item.roomtype2==1&&item.roomnetquality!='0'&&item.roomnetquality!='-2'&&(item.roomtype=='1'||item.roomtype=='4')"
                      >{{item.roomtype==1 || item.roomtype==4?item.roomrzperson:item.roombdcard}}/{{item.roomtype==1||item.roomtype==4?item.roommaxperson:item.roommaxcard}}</div>
                      <!-- <span v-if="item.ischeck=='1'?true:false" class="roomchecked"></span> -->
                    </div>
                  </template>
                </div>
              </div>
            </div>
          </div>
        </el-collapse-item>
        <div v-if="list.length == 0 && isLoad && !serverText" class="listNull">暂无数据</div>
        <div v-if="serverText&&list.length == 0 " class="listNull">{{serverText}}</div>
      </el-collapse>
    </div>
  </el-main>
</template>

<script>
import { mapState, mapMutations } from "vuex";
export default {
  props: {
    param: Object,
    refresh: Number,
    paramObj: Object,
    zlRefresh: Number
  },
  data() {
    return {
      selection: "",
      activeNames: ["0"],
      list: [],
      timing: null,
      loading: false,
      bcjssj: [],
      serverText: "",
      isLoad: false,
      // reg: new RegExp("[\\u4E00-\\u9FFF]+", "g")/[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi,
      reg: new RegExp("[\u4E00-\u9FA5]|[\uFE30-\uFFA0]", "gi"),
      value3: ""
    };
  },
  created() {
    this.inGetlockstate();
  },
  watch: {
    value3(val) {
      console.log(/[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi.test(val), val);
    },
    refresh() {
      this.inGetlockstate();
    },
    zlRefresh() {
      // this.inGetlockstate();
      this.setRefresh(true);
    }
  },
  activated() {
    if (this.paramObj.agid) {
      this.setRefresh(true);
    }
  },
  deactivated() {
    if (this.timing) {
      clearTimeout(this.timing);
      this.timing = null;
    }
  },
  beforeDestroy() {
    if (this.timing) {
      clearTimeout(this.timing);
      this.timing = null;
    }
  },
  computed: {
    ...mapState({
      isAdmin: state => state.fj38.isAdmin,
      adminInfo: state => state.fj38.adminInfo
    })
  },
  methods: {
    ...mapMutations(["fj38setAdminInfo"]),
    getTextObj(obj) {
      console.log("obj", obj);
      let Proom = 0;
      let Sroom = 0;
      let Jroom = 0;
      let Show = true; //没用到了
      let text = "";
      obj.roomllist.forEach((item, ind) => {
        if (item.roomtype == "1") {
          Sroom += 1;
        } else if (item.roomtype == "2") {
          Proom += 1;
          Show = false;
        } else if (item.roomtype == "4") {
          Jroom += 1;
        }
      });
      obj.roomrlist.forEach((item, ind) => {
        if (item.roomtype == "1") {
          Sroom += 1;
        } else if (item.roomtype == "2") {
          Proom += 1;
          Show = false;
        } else if (item.roomtype == "4") {
          Jroom += 1;
        }
      });
      if (Proom > 0) {
        text = `公共房间数: ${Proom}`;
      }
      if (Sroom > 0) {
        if (Proom > 0) {
          text += ` | `;
        }
        text += `宿舍房间数: ${Sroom}`;
      }
      if (Jroom > 0) {
        if (Proom > 0 || Sroom > 0) {
          text += ` | `;
        }
        text += `酒店房间数: ${Jroom}`;
      }
      if (Sroom > 0 || Jroom > 0) {
        text += ` | `;
        text += `床位数: ${obj.roommaxcount || 0} | 已入住: ${obj.roomrzcount ||
          0}`;
      }
      return { Show, text };
    },
    getClass(item) {
      if (item.roomnetquality > 0) {
        return "Blue";
      } else if (item.roomnetquality == -1 || item.roomnetquality == -3) {
        return "Danger";
      } else {
        return "C333";
      }
    },
    setAdminInfo() {
      let roomid = "";
      if (this.adminInfo) {
        roomid = this.adminInfo.roomid;
      }
      if (this.isAdmin && roomid) {
        let data = {};
        let is = false;
        for (let val of this.list) {
          let roomllist = val.roomllist;
          if (roomllist && roomllist.length > 0) {
            for (let li of roomllist) {
              if (li.roomid == roomid) {
                data = li;
                is = true;
                break;
              }
            }
            if (is) {
              break;
            }
          }
          let roomrlist = val.roomllist;
          if (roomrlist && roomrlist.length > 0) {
            for (let li of roomllist) {
              if (li.roomid == roomid) {
                data = li;
                is = true;
                break;
              }
            }
            if (is) {
              break;
            }
          }
        }
        this.fj38setAdminInfo(data);
      }
    },
    // 定时刷新页面数据
    setRefresh(is) {
      if (this.timing) {
        clearTimeout(this.timing);
        this.timing = null;
      }
      if (is) {
        this.timing = 123;
        this.$ajax("/lock/3/getbuildroom", this.param, "1", this.paramObj)
          .then(res => {
            if (this.timing) {
              res.result.reverse();
              this.list = res.result;
              this.setAdminInfo();
              this.setRefresh();
            }
          })
          .catch(err => {
            if (this.timing) {
              this.setRefresh();
            }
          });
      } else {
        this.timing = setTimeout(() => {
          this.$ajax("/lock/3/getbuildroom", this.param, "1", this.paramObj)
            .then(res => {
              if (this.timing) {
                res.result.reverse();
                this.list = res.result;
                this.setRefresh();
              }
            })
            .catch(err => {
              if (this.timing) {
                this.setRefresh();
              }
            });
        }, 60000);
      }
    },
    getCl2(data) {
      if (/[\u4E00-\u9FA5]|[\uFE30-\uFFA0]/gi.test(data)) {
        if (data.length == 2) {
          return "chineseStyle";
        } else if (data.length == 1) {
          return "chineseStyle pt27";
        } else {
          return "chineseStyle pt12";
        }
      } else {
        return "";
      }
      // ?'chineseStyle':''
    },
    // 全部打开
    allOpen() {
      let r = this.list.length;
      let arr = [];
      for (let i = 0; i < r; i++) {
        arr.push(i + "");
      }
      this.activeNames = arr;
    },
    // 全部关闭
    allClose() {
      this.activeNames = [];
    },
    inGetlockstate() {
      this.isLoad = false;
      this.loading = true;
      this.list = [];
      this.activeNames = [];
      this.selection = "";
      this.serverText = "";
      this.$ajax(
        "/lock/3/getbuildroom",
        this.param,
        "1",
        this.paramObj,
        false,
        30000,
        response => {
          let config = JSON.parse(response.config.data);
          if (config.agid == this.paramObj.agid) {
            let res = response.data;
            res.result = res.result || [];
            res.result.reverse();
            this.list = res.result;
            this.setAdminInfo();
            this.activeNames = [res.result.length - 1 + ""];
            // this.bcjssj = [res.result.length - 1 + ""];
            this.loading = false;
            setTimeout(() => {
              let scrollDom = this.$refs["scroll"];
              if (scrollDom) {
                scrollDom.scrollTop = scrollDom.scrollHeight;
              }
            }, 0);
            this.isLoad = true;
            this.setRefresh();
          }
        }
      ).catch(err => {
        this.loading = false;
        this.serverText = `[${err.resultCode}] ` + err.resultMsg;
      });
    },
    handleChange(arr) {
      // if (this.bcjssj.length < this.activeNames.length) {
      //   setTimeout(() => {
      //     let scrollDom = this.$el;
      //     if (scrollDom) {
      //       scrollDom.scrollTop = scrollDom.scrollTop + 50;
      //     }
      //   }, 0);
      // }
      // this.bcjssj = arr;
    },
    getfjlist(data, key, t, p, obj) {
      if (data.roomnetquality == 0) {
        return;
      }
      if (data.roomtype2 == "1") {
        this.selection = t + p + key;
        data.roomlocation = obj.roomlocation;
        this.fj38setAdminInfo(data);
        this.$emit("onSelection", data);
      }
    },
    dbgetfjlist(data, key, t, p, obj) {
      if (data.roomnetquality == 0) {
        return;
      }
      if (data.roomtype2 == "1") {
        this.selection = t + p + key;
        data.roomlocation = obj.roomlocation;
        this.fj38setAdminInfo(data);
        this.$emit("onSelection", data, true);
      }
    },
    getUrl(data) {
      //动态添加src的url
      // if(data==undefined){
      //     return;
      // }
      // openorclose    开关门
      // roomnetquality 通讯状态
      // roomcharge     电量
      // roomtype       房间类型
      // roomtype2      建筑类型
      let img = "";
      if (data.roomtype2 == 1) {
        // 判断是否为房间
        if (data.openorclose == 1) {
          //判断开关门状态
          if (data.roomnetquality > 0) {
            //判断通讯状态
            if (data.roomcharge >= 90) {
              //判断电量
              img = require("../../assets/image/km11.png");
            } else if (data.roomcharge < 90 && data.roomcharge >= 60) {
              img = require("../../assets/image/km21.png");
            } else if (data.roomcharge < 60 && data.roomcharge >= 20) {
              img = require("../../assets/image/km31.png");
            } else {
              img = require("../../assets/image/km41.png");
            }
          } else if (data.roomnetquality == -1 || data.roomnetquality == -3) {
            //判断通讯状态
            if (data.roomcharge >= 90) {
              //判断电量
              img = require("../../assets/image/km10.png");
            } else if (data.roomcharge < 90 && data.roomcharge >= 60) {
              img = require("../../assets/image/km20.png");
            } else if (data.roomcharge < 60 && data.roomcharge >= 20) {
              img = require("../../assets/image/km30.png");
            } else {
              img = require("../../assets/image/km40.png");
            }
          } else {
            img = require("../../assets/image/weianzhuang.png");
          }
        } else {
          //判断开关门状态
          if (data.roomnetquality > 0) {
            //判断通讯状态
            if (data.roomcharge >= 90) {
              //判断电量
              img = require("../../assets/image/gm11.png");
            } else if (data.roomcharge < 90 && data.roomcharge >= 60) {
              img = require("../../assets/image/gm21.png");
            } else if (data.roomcharge < 60 && data.roomcharge >= 20) {
              img = require("../../assets/image/gm31.png");
            } else {
              img = require("../../assets/image/gm41.png");
            }
          } else if (data.roomnetquality == -1 || data.roomnetquality == -3) {
            //判断通讯状态
            if (data.roomcharge >= 90) {
              //判断电量
              img = require("../../assets/image/gm10.png");
            } else if (data.roomcharge < 90 && data.roomcharge >= 60) {
              img = require("../../assets/image/gm20.png");
            } else if (data.roomcharge < 60 && data.roomcharge >= 20) {
              img = require("../../assets/image/gm30.png");
            } else {
              img = require("../../assets/image/gm40.png");
            }
          } else {
            img = require("../../assets/image/weianzhuang.png");
          }
        }
      } else if (data.roomtype2 == 2) {
        // 判断是否为楼梯
        img = require("../../assets/image/stairs.png"); //楼梯
      } else {
        if (data.openorclose == 1) {
          img = require("../../assets/image/shebeijian.png");
        } else {
          img = require("../../assets/image/shebeijian.png");
        }
      }

      return img;
    },
    getCl(data) {
      //楼梯样式
      let cl = "";
      if (data.roomtype2 == 2) {
        // 判断是否为楼梯
        cl = "louti"; //楼梯
      } else {
        cl = "";
      }
      return cl;
    }
  }
};
</script>

<style lang="scss">
</style>
