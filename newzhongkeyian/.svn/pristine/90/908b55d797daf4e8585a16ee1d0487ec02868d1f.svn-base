<template>
  <div class="content import min_h">
    <fel-upload
      class="disIB"
      ref="felUpload"
      listType="text"
      @onChange="onChange"
      @onRemove="onRemove"
      @uploadFile="uploadFile"
      @uploadError="uploadError"
      showFileList
      :timeout="120000"
      :accept="wjType"
      :intercept="intercept"
      :fileList="fileList"
      noAuto
    >
      <div class="text">
        点击此处,或将文件拖到此处
        <div slot="tip" class="el-upload__tip gui_text">只支持后缀名为{{wjType}}的文件，且文件大小不超过100MB</div>
      </div>
    </fel-upload>
    <progressDetails
      :uploadTitle="uploadTitle"
      :uploadText="uploadText"
      :prcolor="prcolor"
      :textShow="textShow"
      :uploadtotal="uploadtotal"
      :errorText="errorText"
      :filepath="filepath"
    ></progressDetails>
  </div>
</template>

<script>
import { mapState } from "vuex";
import { getuploadrate } from "./index.js";
import progressDetails from "./progressDetails";
export default {
  components: { progressDetails },
  props: {},
  data() {
    return {
      wjType: ".xls,.xlsx",
      //   uploadtotal: {},
      fileList: [],
      errorText: "",
      filepath: "",
      fileName: "",
      isFile: 0,
      prcolor: "",
      uploadText: "",
      uploadTitle: "",
      textShow: false,
      //   progressShow: false,
      times: null
    };
  },
  watch: {},
  methods: {
    ...mapState({
      uploadtotal: state => state.guideFile.uploadtotal
    }),
    onChange() {
      this.isFile = 1;
      this.$refs.felUpload.showUpload(false);
    },
    onRemove() {
      this.isFile = 0;
      this.errorText = "";
      this.filepath = "";
      if (this.$refs.felUpload) {
        setTimeout(() => {
          this.$refs.felUpload.showUpload(true);
        }, 600);
      }
    },
    uploadFile() {
      console.log("kkzz", file, data);
      this.fileName = file.name;
      if (data.resultfail) {
        this.errorText = data.resultmsg;
        this.filepath = data.resultfail;
      }
      if (this.type == 0) {
        this.$notify({
          title: "成功",
          message: this.fileName + "导入完成！",
          type: "success"
        });
      } else {
        Storages.setStorage("Auploadname", file.name);
        Storages.setStorage("Auploadid", data);
        this.isFile = 2;
        clearTimeout(this.times);
        this.prcolor = "";
        this.uploadText = "文件导入中...";
        Storages.setStorage("Auploadnum", 0);
        Storages.setStorage("Atimesnum", 0);
        this.uploadTitle = Storages.getStorage("Auploadname");
        // this.progressShow = false;
        this.$store.dispatch("setProgressShow", false);
        // this.textShow = false;
        this.$store.dispatch("setTextShow", false);

        getuploadrate(data, this, true, this.urls);
      }
    },
    uploadError() {
      this.$message.error("文件上传失败！失败原因：" + err.resultMsg);
    },
    intercept(file) {
      const isLt2M = file.size < 100 * 1024 * 1024;
      if (!isLt2M) {
        this.$message.error("上传文件大小不能超过 100MB!");
      }
      let name = file.name;
      name = name.substr(name.lastIndexOf("."));
      const isTy = this.wjType.includes(name);
      if (!isTy) {
        this.$message.error(`只支持后缀名为${this.wjType}的文件`);
      }
      return isLt2M && isTy;
    },
    clearFiles() {
      if (this.$refs.felUpload) {
        this.$refs.felUpload.clearFiles();
      }
    }
  }
};
</script>

