<template>
  <el-dialog
    title="授权日志查询"
    top="10vh"
    width="90%"
    class="instructDialog"
    :close-on-click-modal="false"
    :before-close="beforeClose"
    :visible.sync="dialogVisible"
  >
    <el-container class="dialog-table6 wh100">
      <paging-table
        height="100%"
        style="height:100%"
        interface="/quick/log/getquicklog"
        :list="list"
        :param="param"
        :refresh="refresh"
      >
        <span class="sli">
          <el-input
            clearable
            class="search con-search"
            v-model="param.search"
            :placeholder="'输入姓名/'+getNumber()+'/卡号/指纹编号/房间号进行检索'"
          ></el-input>
          <fel-button type="primary" @click="onRefresh">查询</fel-button>
        </span>
      </paging-table>
    </el-container>
  </el-dialog>
</template>

<script>
import { mapGetters } from "vuex";
export default {
  props: {
    dialogVisible: Boolean
  },
  data() {
    let $this = this;
    return {
      param: {
        search: ""
      },

      refresh: 0,
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "姓名",
          prop: "personname",
          width:"80px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "授权类型",
          prop: "sqtype"
        },
        {
          name: "卡号/指纹编号",
          prop: "cardcode"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "可用时间段",
          prop: "opentime"
        },
        {
          name: "可用次数",
          prop: "opencount",
          width:"90px"
        },
        {
          name: "同步指纹",
          prop: "issync",
          width:"90px"
        },
        {
          name: "下发状态",
          prop: "issend",
          width:"90px"
        },
        {
          name: "操作类型",
          prop: "qltype"
        },
        {
          name: "操作详细",
          prop: "qlcontent"
        },
        {
          name: "操作时间",
          prop: "qldate"
        },
        {
          name: "操作人",
          prop: "username"
        }
      ]
    };
  },
  watch: {
    dialogVisible(val) {
      if (val) {
        this.onRefresh();
      }
    }
  },
  methods: {
    ...mapGetters(["getNumber"]),
    onRefresh() {
      this.refresh = new Date().getTime();
    },
    beforeClose() {
      this.$emit("beforeClose");
    }
  }
};
</script>
