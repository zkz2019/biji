<!-- 添加卡片 修改卡片授权 -->
<template>
  <el-dialog
    title="添加授权"
    width="60%"
    :close-on-click-modal="false"
    append-to-body
    :before-close="beforeClose"
    :visible.sync="dialogVisible"
  >
    <fel-form
      class="grantAdd"
      ref="felForm"
      :selects="selects"
      @submitForm="submitForm"
      @closeForm="beforeClose"
      width="140px"
      dynamic
      :defaultData="defaultFormData"
      :formData="formData"
    >
      <div slot="top" class="form-header">
        <span>请输入</span>
        <el-input
          class="con-search qh_inp"
          clearable
          @clear="cardInput"
          v-model="search"
          :placeholder="'请输入身份证号/'+getNumber()+'/姓名搜索'"
        >
          <i slot="prefix" class="el-input__icon el-icon-search"></i>
        </el-input>
        <fel-button class="fh_btn com-but-small" type="primary" @click="cardInput">查询</fel-button>
        <div class="card-query">
          <fel-table
            v-show="cardShow"
            class="card-paging"
            :queryData="listData"
            @onSelect="onSelect"
            :list="cardList"
          />
        </div>
      </div>
    </fel-form>
    <cardReading :close="dialogVisible" @resultdata="resultdata" />
  </el-dialog>
</template>

<script>
import { mapGetters } from "vuex";
import { format } from "@/utils/utils.js";
import cardReading from "../../../kwgl/cardReading";
export default {
  components: {
    cardReading
  },

  props: {
    param: Object,
    defaultData: {
      type: Object,
      default() {
        return {};
      }
    },
    dialogVisible: Boolean
  },
  data() {
    let $this = this;
    return {
      selects: {
        cardcodes: []
      },
      value: "",
      search: "",
      cardRefresh: 0,
      cardShow: false,
      cardList: [
        {
          name: "序号",
          type: "index",
          width: "60px"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "身份证",
          prop: "personcard"
        }
      ],
      defaultFormData: {},
      listData: [],
      formData: [
        {
          width: "50%",
          value: "personname",
          name: "姓名",
          type: "text",
          disabled: true
        },
        {
          width: "50%",
          value: "personcode",
          name: this.getNumber(),
          type: "text",
          disabled: true
        },
        {
          width: "50%",
          value: "personlocation",
          name: "组织",
          type: "text",
          disabled: true
        },
        {
          width: "50%",
          value: "personmobile",
          name: "电话",
          type: "text",
          disabled: true
        },
        {
          class: "hide",
          noShow: true,
          width: "50%",
          value: "iscard",
          name: "卡片",
          type: "text",
          readonly: true,
          onChange: this.onChangeCard,
          select: [
            { value: 1, label: "下发" },
            { value: 0, label: "不下发" }
          ],
          placeholder: "",
          rules: []
        },
        {
          //5
          class: "hide",
          noShow: true,
          width: "50%",
          value: "cardcode",
          name: "卡号",
          type: "text",
          readonly: true,
          select: "cardcodes",
          onChange: this.onChangeCardcode,
          svalue: "id",
          slabel: "name",
          placeholder: "请选择",
          rules: [
            {
              required: true,
              message: "请选择卡号",
              trigger: "blur"
            }
          ]
        },

        {
          class: "hide",
          noShow: true,
          width: "50%",
          value: "isfinger",
          name: "指纹",
          type: "text",
          readonly: true,
          select: [
            { value: 1, label: "下发" },
            { value: 0, label: "不下发" }
          ],
          placeholder: "",
          rules: []
        },
        {
          class: "hide",
          noShow: true,
          width: "50%",
          value: "isapp",
          name: "蓝牙钥匙",
          type: "text",
          readonly: true,
          onChange: this.onChangeApp,
          select: [
            { value: 1, label: "下发" },
            { value: 0, label: "不下发" }
          ],
          placeholder: "",
          rules: []
        },
        {
          class: "hide",
          noShow: true,
          display: "block",
          width: "50%",
          value: "ispass",
          name: "密码",
          type: "text",
          readonly: true,
          onChange: this.onChangePwd,
          select: [
            { value: 1, label: "下发" },
            { value: 0, label: "不下发" }
          ],
          placeholder: "",
          rules: []
        },
        {
          class: "hide",
          noShow: true,
          value: "password", //值,
          name: "密码", //名称,
          placeholder: "请输入密码",
          type: "password", //input输入框的类型 或者 select,
          width: "50%",
          rules: [
            {
              validator: (rule, value, callback) => {
                let password = $this.$refs.felForm.ruleForm.password2;
                if (!value && value !== 0) {
                  if (password) {
                    callback(new Error("请输入密码"));
                  } else {
                    callback();
                    $this.$refs.felForm.validateField("password2");
                  }
                } else if (password) {
                  callback();
                  $this.$refs.felForm.validateField("password2");
                } else {
                  callback();
                  $this.$refs.felForm.validateField("password2");
                }
              },
              trigger: "blur"
            },
            {
              required: true,
              message: "请输入密码",
              trigger: "blur"
            }
          ] //表格校验 Array
        },
        {
          //10
          class: "hide",
          noShow: true,
          value: "password2", //值,
          name: "确认密码", //名称,
          placeholder: "请输入确认密码",
          type: "password", //input输入框的类型 或者 select,
          width: "50%",
          rules: [
            {
              validator: (rule, value, callback) => {
                let password = $this.$refs.felForm.ruleForm.password;
                if (!value && value !== 0) {
                  if (password) {
                    callback(new Error("请输入确认密码"));
                  } else {
                    callback();
                  }
                } else if (password && password != value) {
                  callback(new Error("与密码不一致!"));
                } else {
                  callback();
                }
              },
              trigger: "blur"
            },
            {
              required: true,
              message: "请输入确认密码",
              trigger: "blur"
            }
          ] //表格校验 Array
        },

        // {
        //   // class: "hide",
        //   noShow: false,
        //   width: "50%",
        //   value: "ismanager",
        //   name: "是否为管理权限",
        //   type: "select",
        //   readonly: false,
        //   select: [
        //     { value: 1, label: "是" },
        //     { value: 0, label: "否" }
        //   ],
        //   rules: []
        // },
        {
          // class: "hide",
          noShow: true,
          width: "50%",
          value: "isface",
          name: "人脸权限",
          type: "select",
          readonly: false,
          select: [
            { value: 1, label: "是" },
            { value: 0, label: "否" }
          ],
          rules: []
        },
        {
          // class: "hide",
          noShow: true,
          width: "50%",
          value: "isaddpass",
          name: "密码修改授权",
          type: "select",
          readonly: false,
          select: [
            { value: 1, label: "是" },
            { value: 0, label: "否" }
          ],
          rules: []
        },
        {
          // class: "hide",
          noShow: true,
          width: "50%",
          value: "isfingerentry",
          name: "门锁录入指纹权限",
          type: "select",
          readonly: false,
          select: [
            { value: 1, label: "是" },
            { value: 0, label: "否" }
          ],
          rules: []
        },
        {
          // class: "hide",
          noShow: true,
          width: "50%",
          value: "issweep",
          name: "主扫权限",
          type: "select",
          readonly: false,
          select: [
            { value: 1, label: "是" },
            { value: 0, label: "否" }
          ],
          rules: []
        },
        {
          //15
          width: "50%",
          value: "empsdate",
          name: "授权开始日期",
          type: "date",
          date: "datetime",
          placeholder: "长期",
          format: "yyyy-MM-dd HH:mm:ss",
          disabled: true
        },
        {
          width: "50%",
          value: "empedate",
          name: "授权结束日期",
          type: "date",
          date: "datetime",
          placeholder: "长期",
          format: "yyyy-MM-dd HH:mm:ss",
          disabled: true
        },
        {
          width: "50%",
          value: "openstime",
          name: "每日授权开始时间",
          type: "time",
          format: "HH:mm",
          disabled: true,
          rules: [
            {
              required: true,
              message: "请选择每日授权开始时间",
              trigger: "blur"
            }
          ]
        },
        {
          width: "50%",
          value: "openetime",
          name: "每日授权结束时间",
          type: "time",
          format: "HH:mm",
          disabled: true,
          rules: [
            {
              required: true,
              message: "请选择每日授权结束时间",
              trigger: "blur"
            }
          ]
        },
        {
          width: "50%",
          value: "opencount",
          name: "开门使用次数",
          maxlength: 4,
          placeholder: "不限",
          type: "text",
          disabled: true,
          rules: [
            {
              validator: (rule, value, callback) => {
                if (value) {
                  if (/^[0-9]+$/.test(value)) {
                    if (value < 0 || value > 254) {
                      callback(new Error("输入的值在1~254之间"));
                    } else {
                      callback();
                    }
                  } else {
                    callback(new Error("使用次数必须是正整数"));
                  }
                } else {
                  callback();
                }
              },
              trigger: "blur"
            }
          ]
        }
      ]
    };
  },
  watch: {
    dialogVisible(val) {
      if (val) {
        this.reset();
      }
    }
  },
  created() {},
  computed: {},
  methods: {
    ...mapGetters(["getNumber"]),
    onSelect(obj) {
      this.$ajax(
        "/access/v2.0/door/8/getPersonInfo",
        {
          adid: this.param.adid,
          personcode: obj.personcode
        },
        "9"
      )
        .then(res => {
          this.reset(true);
          let data = res.result;
          if (data.iscloseaddpass == "1") {
            // 隐藏修改密码
            this.formData[12].noShow = true;
          } else {
            this.formData[12].noShow = false;
          }
          if (data.iscloseapp == "1") {
            //  隐藏蓝牙
            this.formData[7].noShow = true;
          } else {
            this.formData[7].noShow = false;
          }
          if (data.isclosecard == "1") {
            //  隐藏卡片
            this.formData[4].noShow = true;
            this.formData[5].noShow = true;
          } else {
            this.formData[4].noShow = false;
            this.formData[5].noShow = false;
          }
          if (data.iscloseface == "1") {
            //  隐藏人脸
            this.formData[11].noShow = true;
          } else {
            this.formData[11].noShow = false;
          }
          if (data.isclosefinger == "1") {
            //  隐藏指纹
            this.formData[6].noShow = true;
          } else {
            this.formData[6].noShow = false;
          }
          if (data.isclosefingerentry == "1") {
            //  隐藏指纹录入
            this.formData[13].noShow = true;
          } else {
            this.formData[13].noShow = false;
          }
          if (data.isclosepass == "1") {
            //  隐藏密码
            this.formData[8].noShow = true;
            this.formData[9].noShow = true;
            this.formData[10].noShow = true;
          } else {
            this.formData[8].noShow = false;
            this.formData[9].noShow = false;
            this.formData[10].noShow = false;
          }
          if (data.isclosesweep == "1") {
            //  隐藏主扫
            this.formData[14].noShow = true;
          } else {
            this.formData[14].noShow = false;
          }

          if (data.isaddpass == "0") {
            //只读修改密码
            this.formData[12].readonly = true;
            this.formData[12].type = "text";
            data.isaddpass = "已授权";
          } else {
            this.formData[12].readonly = false;
            this.formData[12].type = "select";
          }
          if (data.isapp == "0") {
            //只读蓝牙
            this.formData[7].readonly = true;
            this.formData[7].type = "text";
            data.isapp = "已授权";
          } else {
            this.formData[7].readonly = false;
            this.formData[7].type = "select";
          }
          if (data.iscard == "0") {
            //只读卡片
            this.formData[4].readonly = true;
            this.formData[4].type = "text";
            this.formData[5].noShow = true;
            if (data.cardnum == "0") {
              data.iscard = "暂无数据";
            } else {
              data.iscard = "已授权";
            }
          } else {
            this.formData[4].readonly = false;
            this.formData[4].type = "select";
            this.formData[5].noShow = data.isclosecard == "1" ? true : false;
            this.formData[5].readonly = false;
            this.formData[5].type = "select";
          }
          if (data.isface == "0") {
            //只读人脸
            this.formData[11].readonly = true;
            this.formData[11].type = "text";
            if (data.facenum == "0") {
              data.isface = "暂无数据";
            } else {
              data.isface = "已授权";
            }
          } else {
            this.formData[11].readonly = false;
            this.formData[11].type = "select";
          }
          if (data.isfinger == "0") {
            //只读指纹
            this.formData[6].readonly = true;
            this.formData[6].type = "text";
            if (data.fingernum == "0") {
              data.isfinger = "暂无数据";
            } else {
              data.isfinger = "已授权";
            }
          } else {
            this.formData[6].readonly = false;
            this.formData[6].type = "select";
          }
          if (data.isfingerentry == "0") {
            //只读录入指纹
            this.formData[13].readonly = true;
            this.formData[13].type = "text";
            data.isfingerentry = "已授权";
          } else {
            this.formData[13].readonly = false;
            this.formData[13].type = "select";
          }
          if (data.ispass == "0") {
            //只读密码
            this.formData[8].readonly = true;
            this.formData[8].type = "text";
            this.formData[9].noShow = true;
            this.formData[10].noShow = true;
            data.ispass = "已授权";
          } else {
            this.formData[9].noShow = data.isclosepass == "1" ? true : false;
            this.formData[10].noShow = data.isclosepass == "1" ? true : false;
            this.formData[8].readonly = false;
            this.formData[8].type = "select";
          }
          if (data.issweep == "0") {
            //只读主扫
            this.formData[14].readonly = true;
            this.formData[14].type = "text";
            data.issweep = "已授权";
          } else {
            this.formData[14].readonly = false;
            this.formData[14].type = "select";
          }
          this.selects.cardcodes = res.result.cardcodes
            ? res.result.cardcodes.map(item => {
                return {
                  id: item,
                  name: item
                };
              })
            : [];
          this.defaultFormData = res.result;
          this.defaultFormData.openstime = this.defaultFormData.openstime
            ? this.defaultFormData.openstime
            : "00:00";
          this.defaultFormData.openetime = this.defaultFormData.openetime
            ? this.defaultFormData.openetime
            : "23:59";
          this.cardShow = false;
        })
        .catch(err => {
          console.log("err", err);
        });
    },
    onChangePwd(val, obj) {
      if (val[0] == 0) {
        this.formData[9].noShow = true;
        this.formData[10].noShow = true;
      } else {
        this.formData[9].noShow = false;
        this.formData[10].noShow = false;
      }
    },
    onChangeCard(val, obj) {
      if (val[0] == 0) {
        this.formData[5].noShow = true;
      } else {
        this.formData[5].noShow = false;
      }
    },
    onChangeCardcode(val, obj) {},
    click() {},
    clear() {},
    resultdata() {},
    closeForm() {},
    submitForm(obj) {
      if (!obj.personcode) {
        this.$message.error("请先选择人员!");
        return;
      }
      let data = {
        adid: this.param.adid,
        cardcodes: [obj.cardcode] || [],
        empedate: obj.empedate || null,
        empsdate: obj.empsdate || null,
        // isaddpass: obj.isaddpass == "已授权" ? "" : obj.isaddpass,
        isapp: obj.isapp == "已授权" ? "" : obj.isapp,
        iscard:
          obj.iscard == "已授权" || obj.iscard == "暂无数据" ? "" : obj.iscard,
        isface:
          obj.isface == "已授权" || obj.isface == "暂无数据" ? "" : obj.isface,
        isfinger:
          obj.isfinger == "已授权" || obj.isfinger == "暂无数据"
            ? ""
            : obj.isfinger,
        // isfingerentry: obj.isfingerentry == "已授权" ? "" : obj.isfingerentry,
        ispass: obj.ispass == "已授权" ? "" : obj.ispass,
        // issweep: obj.issweep == "已授权" ? "" : obj.issweep,
        opencount: obj.opencount,
        openetime: obj.openetime,
        openstime: obj.openstime,
        password: obj.password,
        personcode: obj.personcode
      };
      this.$ajax("/access/v2.0/door/9/saveAccessAuth", data, "9")
        .then(res => {
          this.$message({
            message: "授权成功!",
            type: "success"
          });
          this.beforeClose();
          this.$emit("onRefresh");
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
          console.log("err", err);
        });
    },
    cardInput() {
      this.$ajax("/access/v2.0/door/7/listPerson", { search: this.search }, "9")
        .then(res => {
          this.listData = res.result;
          this.cardShow = true;
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    reset(bool) {
      this.formData.forEach((item, ind) => {
        if (bool) {
          if (ind >= 15) {
            item.disabled = false;
          }
        } else {
          if (ind >= 4 && ind <= 14) {
            item.noShow = true;
          } else if (ind >= 15) {
            item.disabled = true;
          }
        }
      });
    },
    beforeClose() {
      if (this.$refs.felForm) {
        this.$refs.felForm.resetForm();
      }
      this.search = "";
      this.defaultFormData = {};
      this.$emit("beforeClose");
    }
  }
};
</script>
<style lang="scss">
.grantAdd {
  .form-header {
    text-align: center;
    margin: 0 10px 10px 10px;
    padding-bottom: 15px;
    border-bottom: 1px solid #ddd;
    span {
      margin-right: 10px;
    }
    .fh_btn {
      height: 32px;
      span {
        margin: 0;
      }
    }
    .btn-sure {
      margin-left: 10px;
      color: #fff;
      background-color: #409eff;
      border-color: #409eff;
      display: inline-block;
      line-height: 1;
      white-space: nowrap;
      cursor: pointer;
      border: 1px solid #dcdfe6;
      -webkit-appearance: none;
      text-align: center;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      outline: 0;
      -webkit-transition: 0.1s;
      transition: 0.1s;
      font-weight: 500;
      padding: 9px 20px;
      font-size: 14px;
      border-radius: 4px;
    }
    .card-query {
      position: relative;
      background: #fff;

      .card-paging {
        overflow: auto;
        width: 450px;
        position: absolute;
        top: 0;
        left: 205px;
        z-index: 1000;
        background: #fff;
        height: 300px;
        border: 1px solid #ccc;
      }
    }
  }
}
</style>
