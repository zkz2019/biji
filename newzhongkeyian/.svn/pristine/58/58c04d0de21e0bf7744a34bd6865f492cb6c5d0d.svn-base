<template>
  <div></div>
</template>

<script>
import { mapState, mapActions, mapMutations } from "vuex";
import Storages from "../../utils/Storage.js"; //缓存工具
import Logout from "../../utils/logout";
export default {
  data() {
    return {};
  },
  created() {
    let search = window.location.search;
    if (search) {
      let value = search.substr(1);
      // let userlogin = this.getUrlParam(value, "userlogin");
      // let timestamp = this.getUrlParam(value, "timestamp");
      // let sign = this.getUrlParam(value, "sign");
      // //参数分割线---------------------------------
      // let Name = this.getUrlParam(value, "Name");
      // let Datetime = this.getUrlParam(value, "Datetime");
      // let jsName = this.getUrlParam(value, "jsName");
      // let verify = this.getUrlParam(value, "verify");
      // let recordId = this.getUrlParam(value, "recordId");
      // let gndm = this.getUrlParam(value, "gndm");
      let param = this.getUrlParam(value);
      console.log("param", param);

      if (userlogin && timestamp && sign) {
        this.ssologin({
          userlogin: userlogin,
          timestamp: timestamp,
          sign: sign
        });
      } else if (Name && Datetime && jsName && verify) {
        this.ssologin(
          // {
          //   Name: Name,
          //   Datetime: Datetime,
          //   jsName: jsName,
          //   recordId: recordId,
          //   verify: verify,
          //   gndm: gndm
          // },
          param,
          "/login/login/cmssologin"
        );
      } else {
        this.$router.replace({ path: "/index" });
      }
    } else {
      this.$router.replace({ path: "/index" });
    }
  },
  methods: {
    ...mapMutations(["setCheckVisible", "setUserinfo"]),
    ...mapActions(["getDiction", "getmenu", "againGetInfo"]),
    // getUrlParam(value, name) {
    //   var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
    //   var r = value.match(reg);
    //   if (r != null) {
    //     return unescape(r[2]);
    //   }
    //   return null;
    // },
    getUrlParam(r) {
      var obj = {};
      // var r = window.location.search;
      // console.log("r", window.location, r);
      if (r) {
        r = r.substr(1);
        var arr = r.split("&"); //各个参数放到数组里
        for (var i = 0; i < arr.length; i++) {
          var num = arr[i].split("=");
          if (num.length > 0) {
            obj[num[0] + ""] = unescape(num[1]);
          }
        }
      }
      console.log("obj", obj);
      return obj;
    },
    ssologin(data, url = "/login/login/ssologin") {
      this.$ajax(url, data, "1")
        .then(response => {
          if (
            response.resultCode == 0 &&
            response.result &&
            response.result.token
          ) {
            let result = response.result;
            this.setUserinfo(result);
            this.setCheckVisible(false);
            Storages.setStorage("_codewarn", result.codewarn);
            Storages.setStorage("token", result.token);
            Storages.setStorage("refreshentoken", result.refreshentoken);
            Storages.setStorage("tokenNum", 0);
            this.againGetInfo();
            this.getDiction();
            this.getmenu()
              .then(data => {
                this.$router.replace({ path: "/index" });
                this.logining = false;
                this.loginIn = true;
                if (result.codewarn == 1) {
                  let codedate = result.codedate;
                  this.$confirm(
                    codedate + "系统即将到期，请输入序列号",
                    "提示",
                    {
                      confirmButtonText: "前往设置",
                      cancelButtonText: "取消",
                      type: "warning"
                    }
                  )
                    .then(() => {
                      this.$router.push({
                        name: "系统参数",
                        params: { name: "基础参数" }
                      });
                    })
                    .catch(() => {});
                }
              })
              .catch(err => {
                this.$router.replace({ path: "/index" });
                this.logining = false;
                this.loginIn = true;
                if (result.codewarn == 1) {
                  let codedate = result.codedate;
                  this.$confirm(
                    codedate + "系统即将到期，请输入序列号",
                    "提示",
                    {
                      confirmButtonText: "前往设置",
                      cancelButtonText: "取消",
                      type: "warning"
                    }
                  )
                    .then(() => {
                      this.$router.push({
                        name: "系统参数",
                        params: { name: "基础参数" }
                      });
                    })
                    .catch(() => {});
                }
              });
            Logout.times(0, this); //清除登录信息
          } else {
            this.$router.replace({ path: "/login" });
            this.$message({
              message: `[${response.resultCode}] ` + response.resultMsg,
              type: "error"
            });
          }
        })
        .catch(err => {
          this.$router.replace({ path: "/login" });
          this.$message({
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    }
  }
};
</script>

<style>
</style>