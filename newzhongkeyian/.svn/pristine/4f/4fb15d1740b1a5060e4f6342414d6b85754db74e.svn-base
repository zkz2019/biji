<!-- 办理入住  -->
<template>
  <el-container>
    <fel-left-tree :key="key2" class="checkIn">
      <div slot="left" class="left-tree">
        <adminLeft
          ref="adminLeft"
          :checkedroom="checkedroom"
          @checkp="checkp"
          url="/lock/operate/auth/1/getroomperson"
        />
      </div>
      <el-container :key="key1" v-loading="loading1" class="checkIn_right">
        <el-header class="checkIn_right_top query_head">
          <template v-if="btnRightShow.show725">
            <el-select
              class="wid300 qh_inp"
              ref="select"
              v-model="value"
              :loading-text="loadText"
              filterable
              remote
              reserve-keywords
              :placeholder="'输入'+getNumber()+'|卡号|姓名|身份证'"
              :remote-method="remoteMethod"
              :loading="loading"
              @change="onChange"
              @clear="onClear"
              no-data-text="点击查询进行检索"
              no-match-text="无数据"
            >
              <el-option
                v-for="item in options"
                :key="item.personcode"
                :label="item.personname"
                :value="item.personcode"
              >
                <span
                  style="display:inline-block;width:45%;overflow:hidden;margin-right:10px"
                >{{ item.personname }}</span>
                <span style="display:inline-block;width:45%;overflow:hidden">{{ item.personcode }}</span>
              </el-option>
            </el-select>
            <!-- <el-input  placeholder="输入学号|卡号|姓名|身份证" clearable class="wid300 qh_inp" v-model="value"></el-input> -->
            <fel-button class="qh_btn" type="primary" @click="search">查询</fel-button>
            <template v-if="isCardReader">
              <span class="is-card-reader" @click="onClickCardReader" title="读卡器软件下载">
                <i class="el-icon-download"></i>
              </span>
            </template>
          </template>
          <!-- <fel-button class="qh_btn" type="primary" @click="searchIDCard">读取身份证</fel-button>
          <template v-if="isCardReaderIDCard">
            <span class="is-card-reader" @click="onClickCardReaderIDCard" title="身份证读取下载">
              <i class="el-icon-download"></i>
            </span>
          </template>-->
        </el-header>
        <el-main class="checkIn_right_center">
          <div ref="checkIn_right_table" class="checkIn_right_table">
            <form-table width="140px" :column="1" :param="defaultData" :list="tableData"></form-table>
            <div class="table-img">
              <img :src="personnel.personimage" />
            </div>
          </div>
        </el-main>
        <el-footer class="checkIn_right_bottom">
          <fel-button
            v-if="btnRightShow.show737"
            class="qh_btn"
            type="primary"
            @click="Determine"
          >确定入住</fel-button>
        </el-footer>
      </el-container>
      <passIn
        :type="passType"
        :dialogVisible="dialogVisible"
        :roomid="checkedroom.roomid"
        :personcode="personnel.personcode"
        @beforeClose="beforeClose"
        @getinp="getinp"
        @refresh="checkp"
      />
    </fel-left-tree>
    <cardReading
      ref="cardReading"
      :close="dialogReading"
      @onInstall="onInstall"
      @resultdata="resultdata"
    />
  </el-container>
</template>

<script>
// import IDCard from "@/utils/IDCard.js";
import cardReading from "../../kwgl/cardReading";
import { mapGetters } from "vuex";
import { format } from "@/utils/utils.js";
import passIn from "./dialog/passIn";
import adminLeft from "./admin-left";
// import inpbox from "./../../common/inpbox";
export default {
  props: {
    checkedroom: Object,
    btnRight: {
      type: Array,
      default: () => {
        return [];
      }
    }
  },
  components: {
    cardReading,
    // inpbox,
    adminLeft,
    passIn
  },
  data() {
    var $this = this;
    return {
      inpDom: null,
      loadText: "加载中...",
      passType: "",
      isselect: {
        isselectapp: "",
        isselectcard: "",
        isselectfinger: ""
      },
      btnRightShow: {
        show725: false,
        show726: false,
        show727: false,
        show728: false,
        show729: false,
        show730: false,
        show731: false,
        show732: false,
        show733: false,
        show734: false,
        show735: false,
        show736: false,
        show737: false,
        show746: false
      },
      dialogVisible: false,
      dialogReading: false,
      rzdisabled: true,
      tzdisabled: false,
      cardHide: false,
      passHide: false,
      passDeleteHide: false,
      fingerHide: false,
      appHide: false,
      apptryHide: false,
      cardHide1: false,
      fingerHide1: false,
      appHide1: false,
      apptryHide1: false,
      tzHide: false,
      defaultData: {
        dates: [],
        passVal: "",
        cardVal: "",
        fingerVal: "",
        appVal: "",
        apptryVal: "",
        cardChecked: false,
        disabled: true,
        cwhdisabled: true,
        khdisabled: true,
        appdisabled: true,
        apptrydisabled: true,
        mmdisabled: true,
        zwdisabled: true,
        options: [
          {
            no: "",
            noname: "随机"
          }
        ],
        bednoVal: "",
        pStart: String(format(new Date(), "yyyy-MM-dd HH:mm:ss")),
        pEnd: "长期"
      },
      key1: 0,
      key2: 0,
      adminLeftKey: 0,
      tableData: [
        {
          name: "人员信息",
          text: "内容"
        },
        {
          name: "姓名",
          value: "personname"
        },

        {
          name: this.getNumber(),
          value: "personcode"
        },

        {
          name: "组织",
          value: "personlocation"
        },
        {
          name: "电话",
          value: "personmobile"
        },
        {
          name: "辅导员",
          value: "instructor"
        },
        {
          name: "辅导员电话",
          value: "instructormobile"
        },
        {
          name: "床位号",
          // value: "bedno"
          render(obj, add) {
            console.log("obj.roomseq", obj.roomseq);
            return add(
              "displayForm",
              {
                props: {
                  selPlaceholder: "请选择床位号",
                  selectShow: Boolean(!obj.tzdisabled || obj.tzdisabled),
                  tzShow: $this.tzHide && $this.btnRightShow.show726,
                  options: obj.options ? obj.options : [],
                  input: obj.roomseq ? obj.roomseq + "号床位" : "",
                  defaultVal: obj.roomseq
                },
                on: {
                  onClick(val) {
                    if (val == "0") {
                      $this.cwupdate(obj.personcode, obj.bednoVal);
                    }
                  },
                  onChangeSel(val) {
                    obj.bednoVal = val;
                  }
                }
              },
              []
            );
          }
        },

        {
          name: "卡号",
          // value: "cardcode"
          noShow: false,
          render(obj, add) {
            return add(
              "displayForm",
              {
                props: {
                  selectShow: Boolean(!obj.khdisabled),
                  // checkboxShow: $this.cardHide1 || !obj.khdisabled,
                  tjShow: Boolean($this.cardHide1 && obj.ishavecard),
                  addShow: $this.btnRightShow.show727,
                  delShow: $this.btnRightShow.show728,
                  scShow: $this.cardHide,
                  allShow:
                    Boolean($this.cardHide1 && obj.ishavecard) || $this.cardHide
                      ? true
                      : false,
                  issendText: obj.cardissend,
                  input:
                    obj.cardcode == "未授权"
                      ? obj.ishavecard
                        ? "未下发"
                        : "无卡片"
                      : obj.cardcode,
                  defaultVal: $this.isselect.isselectcard
                    ? String($this.isselect.isselectcard)
                    : "" //"1"
                },
                on: {
                  onClick(val) {
                    if (val == "1") {
                      $this.rightAdd("1", "卡号");
                    } else {
                      $this.rightDelete("1", "卡号");
                    }
                  },
                  onChangeChe(val) {
                    obj.cardChecked = val;
                  },
                  onChangeSel(val) {
                    obj.cardVal = val;
                  }
                }
              },
              []
            );
          }
        },
        {
          name: "密码",
          // value: "passcount",
          noShow: false,
          render(obj, add) {
            return add(
              "displayForm",
              {
                props: {
                  selectShow: Boolean(!obj.mmdisabled),
                  xgShow: $this.passDeleteHide || $this.passHide,
                  bjShow: !obj.mmdisabled,
                  scShow: $this.passDeleteHide,
                  issendText: obj.passissend,
                  addShow: $this.btnRightShow.show729,
                  delShow: $this.btnRightShow.show730,
                  xg: $this.btnRightShow.show729,
                  xgText: $this.passDeleteHide ? "修改" : "添加",
                  allShow:
                    Boolean($this.passDeleteHide || $this.passHide) ||
                    $this.passDeleteHide
                      ? true
                      : false,
                  input:
                    obj.passcount == "未授权"
                      ? "未下发"
                      : obj.passcount
                      ? "已授权"
                      : "" //obj.passcount
                },
                on: {
                  onClick(val) {
                    if (val == "4") {
                      $this.passType = "0";
                      $this.dialogVisible = true;
                    } else if (val == "2") {
                      $this.passType = "1";
                      $this.dialogVisible = true;
                    } else {
                      $this.rightDelete("3", "密码");
                    }
                  },
                  onChangeSel(val) {
                    obj.passVal = val;
                  }
                }
              },
              []
            );
          }
        },
        {
          name: "指纹",
          // value: "fingercount"
          noShow: false,
          render(obj, add) {
            return add(
              "displayForm",
              {
                props: {
                  selectShow: Boolean(!obj.zwdisabled),
                  tjShow: Boolean($this.fingerHide1 && obj.ishavefinger),
                  scShow: $this.fingerHide,
                  addShow: $this.btnRightShow.show731,
                  delShow: $this.btnRightShow.show732,
                  allShow:
                    Boolean($this.fingerHide1 && obj.ishavefinger) ||
                    $this.fingerHide
                      ? true
                      : false,
                  issendText: obj.fingerissend,
                  input:
                    obj.fingercount == "未授权"
                      ? obj.ishavefinger
                        ? "未下发"
                        : "无指纹"
                      : obj.fingercount
                      ? "已授权"
                      : "",
                  defaultVal: $this.isselect.isselectfinger
                    ? String($this.isselect.isselectfinger)
                    : ""
                },
                on: {
                  onClick(val) {
                    if (val == "1") {
                      $this.rightAdd("2", "指纹");
                    } else {
                      $this.rightDelete("2", "指纹");
                    }
                  },
                  onChangeSel(val) {
                    obj.fingerVal = val;
                  }
                }
              },
              []
            );
          }
        },
        {
          name: "蓝牙钥匙",
          noShow: false,
          render(obj, add) {
            return add(
              "displayForm",
              {
                props: {
                  selectShow: !obj.appdisabled, //!obj.appdisabled&&Boolean(obj.iscloseapp)
                  tjShow: $this.appHide1,
                  scShow: $this.appHide,
                  allShow: $this.appHide1 || $this.appHide ? true : false,
                  addShow: $this.btnRightShow.show733,
                  delShow: $this.btnRightShow.show734,
                  input:
                    obj.appcount == "未授权"
                      ? "未下发"
                      : obj.appcount
                      ? "已授权"
                      : "", // obj.appcount,
                  defaultVal: $this.isselect.isselectapp
                    ? String($this.isselect.isselectapp)
                    : "" //"1"
                },
                on: {
                  onClick(val) {
                    if (val == "1") {
                      $this.rightAdd("4", "蓝牙钥匙");
                    } else {
                      $this.rightDelete("4", "蓝牙钥匙");
                    }
                  },
                  onChangeSel(val) {
                    console.log("val", val);
                    obj.appVal = val;
                  }
                }
              },
              []
            );
          }
        },
        {
          name: "门锁录入指纹权限",
          noShow: false,
          render(obj, add) {
            return add(
              "displayForm",
              {
                props: {
                  selectShow: !obj.apptrydisabled,
                  tjShow: $this.apptryHide1,
                  scShow: $this.apptryHide,
                  allShow: $this.apptryHide1 || $this.apptryHide ? true : false,
                  addShow: $this.btnRightShow.show735,
                  delShow: $this.btnRightShow.show736,
                  input:
                    obj.isfingerentry == "0"
                      ? "未下发"
                      : obj.isfingerentry == "1"
                      ? "已授权"
                      : "",
                  defaultVal: $this.isselect.isselectfingerentry
                    ? String($this.isselect.isselectfingerentry)
                    : "" //"1"
                },
                on: {
                  onClick(val) {
                    if (val == "1") {
                      $this.apptryAdd();
                    } else {
                      $this.apptryDelete();
                    }
                  },
                  onChangeSel(val) {
                    console.log("val", val);
                    obj.apptryVal = val;
                  }
                }
              },
              []
            );
          }
        },

        {
          whole: true,
          name: "入住开始结束日期",
          render(obj, add) {
            if ($this.btnRightShow.show746 && !obj.disabled) {
              return add("div", {}, [
                add("fel-date", {
                  class: "tabel_sel",
                  props: {
                    value: obj.dates,
                    pStart: obj.pStart,
                    pEnd: obj.pEnd,
                    pickerShow: false,
                    arrowControl: true
                  },
                  on: {
                    input: function(event) {
                      let dates = [];
                      if (event && event.length) {
                        dates = [
                          String(format(event[0], "yyyy-MM-dd HH:mm:ss")),
                          String(format(event[1], "yyyy-MM-dd HH:mm:ss"))
                        ];
                      }
                      obj.dates = dates;
                    }
                  }
                }),
                add(
                  "span",
                  {
                    class: "checkIn_right_center_span",
                    on: {
                      click: function(/*event*/) {
                        $this.Udates(obj);
                      }
                    }
                  },
                  "修改"
                )
              ]);
            } else {
              console.log("obj", obj, obj.dates);
              return add("div", {}, [
                add("el-input", {
                  class: "maR15 wid300",

                  props: {
                    size: "mini",
                    readonly: true,
                    value:
                      obj.dates.length > 0
                        ? (obj.dates[0] != "" ? obj.dates[0] + " - " : "") +
                          (obj.dates.length >= 2 && obj.dates[1] != ""
                            ? ""
                            : "长期") +
                          obj.dates[1]
                        : ""
                  },
                  attrs: {
                    placeholder: ""
                  },
                  on: {}
                })
              ]);
            }
          }
        }
      ],
      options: [],
      personnel: {},
      value: "",
      list: [],
      loading: false,
      loading1: false,
      checked: [],
      param: {},
      input: "",
      isCardReader: false
      // isCardReaderIDCard: true
    };
  },
  computed: {
    roomid() {
      return this.$store.state.fj38.checkedroom.roomid + "";
    }
  },
  watch: {},
  beforeDestroy() {
    this.dialogReading = false;
  },
  created() {
    this.getmunu();
    this.dialogReading = true;
    this.$ajax("/lock/b/getdefaultauth", {}, "1")
      .then(res => {
        this.isselect = res.result;
      })
      .catch(err => {
        console.log("err", err);
      });
    // IDCard.inspect(
    //   () => {
    //     this.isCardReaderIDCard = false;
    //   },
    //   () => {
    //     this.isCardReaderIDCard = true;
    //   }
    // );
    // this.getbedno()
  },
  mounted() {
    this.inpDom = document.querySelector(".el-input__inner");
    if (this.inpDom) {
      this.inpDom.oninput = () => {
        this.value = this.inpDom.value;
      };
    }
    if (this.checkedroom.iscardlock == 0) {
      //判断房间是否支持指纹/密码/卡号,若不支持则隐藏
      this.tableData[8].noShow = true;
    } else {
      this.tableData[8].noShow = false;
    }
    if (this.checkedroom.ispasslock == 0) {
      this.tableData[9].noShow = true;
    } else {
      this.tableData[9].noShow = false;
    }
    if (this.checkedroom.isfingerlock == 0) {
      this.tableData[10].noShow = true;
    } else {
      this.tableData[10].noShow = false;
    }
    if (this.checkedroom.isfingerentry == 0) {
      this.tableData[12].noShow = true;
    } else {
      this.tableData[12].noShow = false;
    }
  },
  methods: {
    getmunu() {
      this.btnRight.forEach(item => {
        let id = item.entity.id;
        if (id == "725") {
          this.btnRightShow.show725 = true; //查询
        } else if (id == "726") {
          this.btnRightShow.show726 = true; //调整床位
        } else if (id == "727") {
          this.btnRightShow.show727 = true; //"添加卡片授权"
        } else if (id == "728") {
          this.btnRightShow.show728 = true; //"删除卡片授权"
        } else if (id == "729") {
          this.btnRightShow.show729 = true; //"添加密码授权"
        } else if (id == "730") {
          this.btnRightShow.show730 = true; //"删除密码授权"
        } else if (id == "731") {
          this.btnRightShow.show731 = true; //"添加指纹授权"
        } else if (id == "732") {
          this.btnRightShow.show732 = true; //"删除指纹授权"
        } else if (id == "733") {
          this.btnRightShow.show733 = true; //"添加APP授权"
        } else if (id == "734") {
          this.btnRightShow.show734 = true; //"删除APP授权"
        } else if (id == "735") {
          this.btnRightShow.show735 = true; //"添加指纹录入权限"
        } else if (id == "736") {
          this.btnRightShow.show736 = true; //"删除指纹录入权限"
        } else if (id == "737") {
          this.btnRightShow.show737 = true; //"确定入住"
        } else if (id == "746") {
          this.btnRightShow.show746 = true; //"修改日期"
        }
        console.log("item", this.btnRightShow, item);
      });
    },
    // searchIDCard() {
    //   IDCard.readIDCard(
    //     data => {
    //       this.defaultData = {
    //         personname: data.Name,
    //         personcode: data.IDNumber,
    //         personlocation: data.Address
    //       };
    //       this.personnel = {
    //         personimage: data.img
    //       };
    //       console.log("data", data);
    //     },
    //     err => {
    //       this.$message.error(err.retext || "读取身份证信息失败");
    //     }
    //   );
    // },
    // onClickCardReaderIDCard() {
    //   IDCard.download(() => {
    //     this.isCardReaderIDCard = false;
    //   });
    // },
    onInstall(is) {
      this.isCardReader = !is;
    },
    onClickCardReader() {
      this.$refs["cardReading"].download();
    },
    ...mapGetters(["getNumber"]),
    rightAdd(type, text) {
      let personcode = this.personnel.personcode;
      let roomid = this.checkedroom.roomid;
      let checked = "0";
      if (type == "1") {
        checked = this.defaultData.cardChecked;
      }
      this.$confirm("确定要添加" + text + "权限吗？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$ajax(
          "/lock/operate/auth/c/addauthbyperson",
          {
            personcode: personcode,
            roomid: roomid,
            authtype: type,
            ismanager: checked
          },
          "1",
          {},
          true
        )
          .then(() => {
            // this.key2++;
            this.checkp();
            this.$message({ type: "success", message: "添加指令已下发!" });
          })
          .catch(err => {
            this.$message.error(
              `[${err.resultCode}] ` + err.resultMsg || "添加失败!"
            );
          });
      });
    },
    apptryAdd() {
      let personcode = this.personnel.personcode;
      let roomid = this.checkedroom.roomid;
      this.$confirm("确定要添加APP录入指纹权限吗？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$ajax(
          "/lock/operate/auth/e/addfingerentry",
          {
            personcode: personcode,
            roomid: roomid
          },
          "1",
          {},
          true
        )
          .then(() => {
            // this.key2++;
            this.checkp();
            this.$message({ type: "success", message: "添加指令已下发!" });
          })
          .catch(err => {
            this.$message.error(
              `[${err.resultCode}] ` + err.resultMsg || "添加失败!"
            );
          });
      });
    },
    rightDelete(type, text) {
      let personcode = this.personnel.personcode;
      let roomid = this.checkedroom.roomid;
      this.$confirm("确定要删除" + text + "权限吗？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$ajax(
          "/lock/operate/auth/a/deleteauth",
          { personcode: personcode, roomid: roomid, authtype: type },
          "1",
          {},
          true
        )
          .then(() => {
            // this.key2++;
            this.checkp();
            this.$message({ type: "success", message: "删除指令已下发!" });
          })
          .catch(err => {
            this.$message.error(
              `[${err.resultCode}] ` + err.resultMsg || "删除失败!"
            );
          });
      });
    },
    apptryDelete() {
      let personcode = this.personnel.personcode;
      let roomid = this.checkedroom.roomid;
      this.$confirm("确定要删除app录入指纹权限吗？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$ajax(
          "/lock/operate/auth/d/deletefingerentry",
          { personcode: personcode, roomid: roomid },
          "1",
          {},
          true
        )
          .then(() => {
            // this.key2++;
            this.checkp();
            this.$message({ type: "success", message: "删除指令已下发!" });
          })
          .catch(err => {
            this.$message.error(
              `[${err.resultCode}] ` + err.resultMsg || "删除失败!"
            );
          });
      });
    },
    resultdata(data) {
      if (data.Result > 0 && data.FunctionID == 0) {
        this.loading = true;
        this.$ajax(
          "/lock/operate/auth/3/getauthperson",
          { roomid: this.checkedroom.roomid, search: data.CardNo },
          "1"
        )
          .then(res => {
            this.loading = false;
            if (res.result && res.result.length > 0) {
              this.value = res.result[0].personcode;
              this.options = res.result; //下拉框的全部人员
              this.search();
            }
          })
          .catch(err => {
            this.loading = false;
            console.log(err);
          });
      }
    },
    Udates(obj) {
      //修改入住日期
      if (!obj.personcode) {
        this.$message.error("请先选择人员!");
        return;
      }
      this.$confirm("确定要修改入住开始结束日期吗？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$ajax(
          "/lock/operate/auth/6/updateauth",
          {
            empedate: obj.dates[1],
            empsdate: obj.dates[0],
            personcode: obj.personcode,
            roomid: this.checkedroom.roomid
          },
          "1",
          {},
          true
        )
          .then(() => {
            this.$message({
              message: "修改成功",
              type: "success"
            });
          })
          .catch(err => {
            this.$message({
              message: `[${err.resultCode}] ` + err.resultMsg,
              type: "error"
            });
          });
      });
    },
    getbedno() {
      //获取床位号
      this.$ajax(
        "/lock/operate/auth/8/getbedno",
        {
          roomid: this.checkedroom.roomid,
          personcode: this.list.personcode
        },
        "1"
      )
        .then(res => {
          this.defaultData.options = [
            {
              no: "",
              noname: "随机"
            }
          ];
          this.defaultData.options = this.defaultData.options.concat(
            res.result
          );
          this.key1++;
        })
        .catch(err => {
          console.log(err);
          this.$message({
            message: `[${err.resultCode}] ` + err.resultMsg || "错误",
            type: "error"
          });
        });
    },
    judge(data) {
      let bool = true;
      if (data && data.result) {
        let obj = data.result;
        if (obj.ishavecard && obj.cardcode && obj.cardcode != "未授权") {
          bool = false;
        }
        if (obj.appcount && obj.appcount != "未授权") {
          bool = false;
        }
        if (
          obj.ishavefinger &&
          obj.fingercount &&
          obj.fingercount != "未授权"
        ) {
          bool = false;
        }
        if (obj.passcount && obj.passcount != "未授权") {
          bool = false;
        }
      }
      return bool;
    },
    checkp(data = this.personnel, key) {
      //选择已入住人员事件
      this.personnel = data;
      if (key != undefined) {
        this.adminLeftKey = key;
      } else {
        return this.$refs.adminLeft.inGetroomperson(this.personnel);
      }
      this.loading1 = true;
      this.$ajax(
        "/lock/operate/auth/2/getroompersoninfo",
        { personcode: data.personcode, roomid: this.checkedroom.roomid },
        "1"
      )
        .then(res => {
          this.$refs.checkIn_right_table.scrollTop = 0;
          if (this.judge(res)) {
            this.onEmpty();
            // this.key2++;
            return;
          }
          // if(res.result==""){
          //   judge
          //   return;
          // }
          let start = String(format(new Date(), "yyyy-MM-dd HH:mm:ss"));
          let end = "长期";
          let obj = {
            dates: [res.result.personcomedate, res.result.personedate],
            pStart: res.result.personcomedate || start,
            pEnd: res.result.personedate || end,
            personlocation: res.result.personlocation,
            personname: res.result.personname,
            cardissend: res.result.cardissend,
            fingerissend: res.result.fingerissend,
            passissend: res.result.passissend,
            instructormobile:
              res.result.instructormobile == "未设定"
                ? ""
                : res.result.instructormobile,
            instructor:
              res.result.instructor == "未设定" ? "" : res.result.instructor,
            personcode: res.result.personcode,
            personmobile: res.result.personmobile,
            cardcode: res.result.cardcode,
            ishavecard: res.result.ishavecard,
            ishavefinger: res.result.ishavefinger,
            fingercount: res.result.fingercount,
            passcount: res.result.passcount,
            appcount: res.result.appcount,
            isfingerentry: res.result.isfingerentry,
            roomseq: data.roomseq,
            cwhdisabled: true,
            khdisabled: true,
            appdisabled: true,
            apptrydisabled: true,
            mmdisabled: true,
            zwdisabled: true,
            tzdisabled: true,
            disabled: false
          };
          // obj.options = [
          //   {
          //     no: "",
          //     noname: "随机"
          //   }
          // ];
          obj.options = res.result.beds; // obj.options.concat(res.result.beds);
          let num = 0;
          obj.options.forEach(item => {
            if (item.isselect == 1) {
              obj.bednoVal = item.no;
              num = 1;
            }
          });
          if (num == 0) {
            obj.bednoVal = "";
          }
          // this.defaultData = obj;
          Object.assign(this.defaultData, obj); //表格默认数据
          this.rzdisabled = true;
          // this.tzdisabled = true;
          this.fingerHide = res.result.fingercount == "未授权" ? false : true;
          this.passHide = true;
          this.tzHide = true;
          this.passDeleteHide = res.result.passcount == "未授权" ? false : true;
          this.appHide = res.result.appcount == "未授权" ? false : true;
          this.apptryHide = res.result.isfingerentry == "1" ? true : false;
          this.cardHide = res.result.cardcode == "未授权" ? false : true;
          this.fingerHide1 = res.result.fingercount == "未授权" ? true : false;
          this.appHide1 = res.result.appcount == "未授权" ? true : false;
          this.apptryHide1 = res.result.isfingerentry == "1" ? false : true;
          this.cardHide1 = res.result.cardcode == "未授权" ? true : false;
          this.loading1 = false;
          this.key1++;
          // this.tableData[6].noShow = false;
          // this.tableData[7].noShow = false;
          // this.tableData[8].noShow = false;
          this.value = "";
          this.list = [];
        })
        .catch(err => {
          console.log("err", err);
          this.loading1 = false;
          this.$message({
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    beforeClose(/*data*/) {
      this.dialogVisible = false;
    },
    getinp(data) {
      this.input = data;
    },
    onClear() {
      this.value = "";
    },
    Determine() {
      //提交事件
      if (this.rzdisabled) {
        this.$message.error("请查询人员进行入住!");
        return;
      }
      console.log("kk", this.defaultData.appVal);
      if (
        this.defaultData.cardVal == "1" ||
        this.defaultData.fingerVal == "1" ||
        this.defaultData.passVal == "1" ||
        this.defaultData.appVal == "1"
        // ||this.defaultData.apptryVal == "1"
      ) {
        let obj = {
          cardcode: this.defaultData.cardcode,
          empedate: this.defaultData.dates[1],
          empsdate: this.defaultData.dates[0],
          issendcard: this.defaultData.cardVal,
          issendfinger: this.defaultData.fingerVal,
          issendpass: this.defaultData.passVal,
          issendapp: this.defaultData.appVal,
          isaddfingerentry: this.defaultData.apptryVal,
          opentime: "",
          password: this.input,
          personcode: this.defaultData.personcode,
          bedno: this.defaultData.bednoVal
        };
        this.$ajax(
          "/lock/operate/auth/5/saveauths",
          {
            roomid: this.checkedroom.roomid,
            ismanager: this.defaultData.cardChecked == true ? "1" : "0"
          },
          "1",
          [obj]
        )
          .then(() => {
            this.onEmpty();
            this.refresh();
            this.key2++;
            this.$message({
              message: "入住成功!",
              type: "success"
            });
          })
          .catch(err => {
            // this.input = "";
            console.log(err);
            this.$message({
              message: `[${err.resultCode}] ` + err.resultMsg,
              type: "error"
            });
          });
      } else {
        this.$message.error("请选择下发卡号|密码|指纹|app进行入住!");
      }
    },
    onEmpty() {
      this.defaultData = {
        dates: [],
        passVal: "",
        cardVal: "",
        fingerVal: "",
        appVal: "",
        apptryVal: "",
        roomseq: "",
        cardChecked: false,
        disabled: true,
        cwhdisabled: true,
        khdisabled: true,
        appdisabled: true,
        apptrydisabled: true,
        mmdisabled: true,
        zwdisabled: true,
        options: [
          {
            no: "",
            noname: "随机"
          }
        ],
        bednoVal: "",
        pStart: String(format(new Date(), "yyyy-MM-dd HH:mm:ss")),
        pEnd: "长期"
      };
      this.tzHide = false;
      this.cardHide = false;
      this.passHide = false;
      this.fingerHide = false;
      this.appHide = false;
      this.apptryHide = false;
      this.appHide1 = false;
      this.apptryHide1 = false;
      this.fingerHide1 = false;
      this.cardHide1 = false;
      this.passDeleteHide = false;
      this.options = [];
      this.value = "";
      this.input = "";
      this.loading1 = false;
    },
    refresh() {
      this.$emit("refresh");
    },
    cwupdate(code, bedno) {
      //调整床位号事件
      if (code == undefined) {
        this.$message.error("请先选择左侧人员!");
        return;
      }
      this.$confirm("确定要调整床位号吗？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        this.$ajax(
          "/lock/operate/auth/9/updatebedno",
          { roomid: this.checkedroom.roomid, bedno: bedno, personcode: code },
          "1"
        )
          .then(() => {
            // this.key2++;
            this.checkp();
            this.$message({
              message: "调整床位号已下发!",
              type: "success"
            });
          })
          .catch(err => {
            console.log("err", err);
            this.$message({
              message: `[${err.resultCode}] ` + err.resultMsg,
              type: "error"
            });
          });
      });
    },

    remoteMethod(query) {
      this.value = query;
      this.loading = false;
    },
    search() {
      this.loading = true;
      this.loadText = "加载中...";
      this.$refs.select.focus();
      //查询事件
      this.$ajax(
        "/lock/operate/auth/3/getauthperson",
        { roomid: this.checkedroom.roomid, search: this.value },
        "1"
      )
        .then(res => {
          this.loading = false;
          this.options = res.result; //下拉框的全部人员
          this.$refs.select.focus();
          if (this.options.length == 0) {
            this.loading = true;
            this.loadText = "无匹配数据";
          }
        })
        .catch(err => {
          this.loading = false;
          console.log(err);
        });
      this.value = "";
    },

    onChange(/*val*/) {
      //查询事件
      this.defaultData.passcount == "";
      this.defaultData.fingercount = "";
      this.defaultData.appcount = "";
      this.defaultData.isfingerentry = "";
      this.defaultData.cardcode = "";
      this.defaultData.passVal = "";
      this.defaultData.instructor = "";
      this.defaultData.instructormobile = "";
      this.defaultData.roomseq = "";
      this.defaultData.cardissend = "";
      this.defaultData.passissend = "";
      this.defaultData.fingerissend = "";
      // this.defaultData.cardVal = "";
      // this.defaultData.appVal = "";
      // this.defaultData.fingerVal = "";
      this.$set(this.defaultData, "cardVal", this.isselect.isselectcard);
      this.$set(this.defaultData, "appVal", this.isselect.isselectapp);
      this.$set(
        this.defaultData,
        "apptryVal",
        this.isselect.isselectfingerentry
      );
      this.$set(this.defaultData, "fingerVal", this.isselect.isselectfinger);
      if (this.value == "") {
        // this.$message.error("请先选择查询人员!")
        return;
      }
      this.list = this.options.filter(item => {
        return (
          item.personcode.toLowerCase().indexOf(this.value.toLowerCase()) > -1
        );
      });
      if (this.list[0].iscloseapp == 1) {
        this.tableData[11].noShow = true;
      } else {
        this.tableData[11].noShow = false;
      }
      //点击查询隐藏添加及删除按钮
      this.passDeleteHide = false;
      this.passHide = false;
      this.cardHide = false;
      this.tzHide = false;
      this.fingerHide = false;
      this.cardHide1 = false;
      this.fingerHide1 = false;
      this.appHide1 = false;
      (this.apptryHide1 = false), (this.appHide = false);
      this.apptryHide = false;
      // this.tzdisabled = false;
      this.getbedno();
      let obj = {
        cwhdisabled: false,
        khdisabled: false,
        mmdisabled: false,
        zwdisabled: false,
        tzdisabled: false,
        disabled: false,
        appdisabled: false,
        apptrydisabled: false,
        dates: [String(format(new Date(), "yyyy-MM-dd HH:mm:ss")), ""],
        bednoVal: ""
      };
      //判断人员是否有指纹/密码/卡号权限,若不支持则隐藏
      if (this.list[0] != undefined) {
        if (this.list[0].iscard == 0) {
          obj.khdisabled = true;
          this.defaultData.cardVal = "";
        } else {
          obj.khdisabled = false;
        }
        if (this.list[0].ispass == 0) {
          obj.mmdisabled = true;
        } else {
          obj.mmdisabled = false;
        }
        if (this.list[0].isfinger == 0) {
          this.defaultData.fingerVal = "";
          obj.zwdisabled = true;
        } else {
          obj.zwdisabled = false;
        }
        if (this.list[0].isapp == 0) {
          obj.appdisabled = false;
        } else {
          this.defaultData.appVal = "";
          obj.appdisabled = true;
        }
      }
      Object.assign(this.defaultData, this.list[0], obj); //表格默认数据
      this.key1++;
      this.rzdisabled = false;
    }
  }
};
</script>
