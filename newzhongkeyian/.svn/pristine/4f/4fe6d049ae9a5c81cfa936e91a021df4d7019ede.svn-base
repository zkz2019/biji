<!-- 常开/常闭统计 -->
<template>
  <el-container>
    <el-header class="query_headbox">
      <retrieval class="query_head">
        <inpbox :inpb="true">
          <queryPosition
            ref="queryPosition"
            class="con-popover qh_inp"
            @onChoice="onChoiceWZ"
            interface="/analysis/lockckanalysis/1/getbuildtree"
          ></queryPosition>
        </inpbox>
        <inpbox :inpb="true">
          <el-select class="con-select qh_inp" v-model="param.status">
            <el-option v-for="item in statuss" :key="item.id" :label="item.name" :value="item.id"></el-option>
          </el-select>
        </inpbox>
        <inpbox>
          <fel-button class="qh_btn" type="primary" @click="search">查询</fel-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="padt0 query_main">
      <paging-table
        class="tobleList wid100 heig100"
        height="100%"
        interface="/analysis/lockckanalysis/2/getlockckanalysis"
        :list="list"
        :refresh="refresh"
        :param="param"
        :paramObj="paramObj"
        @onEjectChange="onEjectChange"
      />
    </el-main>
  </el-container>
</template>

<script>
import Storages from "../../utils/Storage.js"; //缓存工具
import queryPosition from "./queryPosition";
export default {
  name: "ckcbtj254",
  components: {
    queryPosition
  },
  data() {
    return {
      paramObj: {
        type: "1",
        arearoom: [],
        build: []
      },
      statuss: [
        {
          id: "",
          name: "全部"
        },
        {
          id: "1",
          name: "常闭"
        },
        {
          id: "2",
          name: "常开"
        },
        {
          id: "3",
          name: "未知"
        }
      ],
      param: { search: "", status: "" },
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "房间类型",
          prop: "roomtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "常开/常闭",
          prop: "cktype"
        }
      ],
      refresh: 0
    };
  },
  mounted() {
    this.getEject();
  },
  methods: {
    //重置事件
    onReset() {
      this.dates = [];
      Object.keys(this.param).forEach(key => {
        this.param[key] = "";
      });
      this.$refs.queryPosition.onClear();
      this.search();
    },
    onChoiceWZ(data, type) {
      if (type == "1") {
        this.paramObj.type = 2;
        this.paramObj.arearoom = data;
        this.paramObj.build = [];
      } else {
        this.paramObj.type = 1;
        this.paramObj.arearoom = [];
        this.paramObj.build = data;
      }
      // this.paramObj = data;
    },
    search() {
      this.refresh = new Date().getTime();
    },
    onEjectChange() {
      this.$common.onEjectChange(this.list, "ckcbtj254");
    },
    getEject() {
      this.$common.getEject(this, "list", "ckcbtj254");
    }
  }
};
</script>