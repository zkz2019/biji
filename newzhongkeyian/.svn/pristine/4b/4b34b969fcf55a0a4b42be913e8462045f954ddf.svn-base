<!-- 网关连接统计 -->
<template>
  <el-container class="wgljjl314">
    <el-header class="elheader query_headbox">
      <com-title>{{toParam.alias}}</com-title>
      <retrieval class="query_head">
        <inpbox :inptext="'请选择时间'">
          <fel-date class="qh_date" v-model="dates"></fel-date>
        </inpbox>
        <inpbox :inptext="'断连次数'">
          <el-input-number
            :min="0"
            clearable
            class="numlineH wid150 qh_inp"
            v-model="param.discount"
          ></el-input-number>
        </inpbox>
        <inpbox :inptext="'更新次数'">
          <el-input-number
            :min="0"
            clearable
            class="numlineH wid150 qh_inp"
            v-model="param.updatecount"
          ></el-input-number>
        </inpbox>
        <inpbox :inptext="'请输入'">
          <el-input
            clearable
            class="wid300 qh_inp"
            v-model="param.search"
            placeholder="选择网关通讯/唯一ID进行查询"
          ></el-input>
        </inpbox>

        <inpbox>
          <el-button class="buta qh_btn" size="small" type="primary" @click="search">查询</el-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="pad0-10 query_main">
      <paging-table
        height="100%"
        interface="/system/control/gateconnect/1/getgateconnect"
        class="heig100"
        :param="param"
        :refresh="refresh"
        :list="list"
        @onEjectChange="onEjectChange"
      />
    </el-main>
  </el-container>
</template>

<script>
import Storages from "../../utils/Storage.js"; //缓存工具
import { format } from "@/utils/utils.js";
export default {
  props: ["toParam"],
  data() {
    return {
      dates: [],
      refresh: 0,
      param: {
        search: "",
        edate: "",
        sdate: "",
        updatecount: "",
        discount: ""
      },
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "网关",
          prop: "gatewaycode"
        },
        {
          name: "网关位置",
          prop: "gatewaylocation"
        },
        {
          name: "类型",
          prop: "gatewaytype",
          formatter(data) {
            // 1（连接类型）/2（断连次数）/3（更新次数）
            if (data.gatewaytype == 1) {
              return "连接类型";
            } else if (data.gatewaytype == 2) {
              return "断连次数";
            } else if (data.gatewaytype == 3) {
              return "更新次数";
            }
          },
          width: "100px"
        },
        {
          name: "唯一ID",
          prop: "gatewaycode2"
        },
        {
          name: "连接类型/断连次数/更新次数",
          prop: "gatewaycontent"
        },
        {
          name: "连接日期",
          prop: "gatewaydate",
          width: "200px"
        }
      ]
    };
  },
  mounted() {
    this.getEject();
  },
  methods: {
    //重置事件
    onReset() {
      this.dates = [];
      Object.keys(this.param).forEach(key => {
        this.param[key] = "";
      });
      this.search();
    },
    search() {
      if (this.dates && this.dates.length == 2) {
        this.param.sdate = format(this.dates[0], "yyyy-MM-dd HH:mm:ss");
        this.param.edate = format(this.dates[1], "yyyy-MM-dd HH:mm:ss");
      } else {
        this.param.sdate = "";
        this.param.edate = "";
      }
      this.refresh = new Date().getTime();
    },
    onEjectChange() {
      this.$common.onEjectChange(this.list, "wgljjl314");
    },
    getEject() {
      this.$common.getEject(this, "list", "wgljjl314");
    }
  }
};
</script>