<!-- 批量授权 -->
<template>
  <el-container
    class="rightBatchAdd"
    v-loading="reqLoading"
    :element-loading-text="`请求中...`"
    element-loading-spinner="el-icon-loading"
    element-loading-background="rgba(0, 0, 0, 0.8)"
  >
    <batchListMJ v-if="addBut" :toParam="toParam" :topButs="listButs" @onClick="onClick"></batchListMJ>
    <el-container v-else>
      <el-header class="query_headbox">
        <com-title>
          <span class="navig" type="text" @click="onReturn('0')">批量授权</span>
          <i class="arrow"></i>
          添加批量授权
        </com-title>
      </el-header>
      <el-container class="query_main batch">
        <adjust class="batch-authori">
          <adjust-div class="b-left">
            <div class="tsTop">步骤1：选择待授权人员</div>
            <div class="b-left_box">
              <div class="box_top">
                <el-select
                  size="mini"
                  class="box_top_sel"
                  @change="onChange"
                  v-model="cardParam.type"
                  placeholder="请选择"
                >
                  <el-option
                    v-for="item in options"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value"
                  ></el-option>
                </el-select>
                <template v-if="!ryOrzz">
                  <el-cascader
                    ref="cascader"
                    class="box_top_cas"
                    size="mini"
                    v-model="zzValue"
                    :options="zzoptions"
                    collapse-tags
                    :props="{ checkStrictly: true ,multiple:true,value:'pgid',label:'pgname' }"
                    @change="zzOnchange"
                    clearable
                  ></el-cascader>
                </template>
                <template v-else>
                  <pub-select
                    ref="felSelect"
                    class="box_top_cas"
                    @onChange="onRyChange"
                    @onShow="onShow"
                    @noNext="noNext"
                    :options="ryoptions"
                    :loadText="loadText"
                    :show="rySelectShow"
                    :next="next"
                  >
                    <el-input
                      ref="selInput"
                      class="fel-select_input"
                      size="mini"
                      :placeholder="'输入卡号|姓名|'+getNumber()+'搜索'"
                      v-model="ryvalue"
                      @focus="onRyFocus"
                      @input="onRyInput"
                      @clear="onRyClear"
                      clearable
                    ></el-input>
                  </pub-select>
                </template>
                <el-button
                  class="box_top_btn"
                  size="mini"
                  @click.stop="onReturn(['1',cardParam.type])"
                  type="primary"
                >查询</el-button>
              </div>
              <div class="b-left_box_bottom">
                <template v-if="ryOrzz">
                  <fel-table
                    class="tobleList b-left_box_bottom_table"
                    :loading="loading"
                    :queryData="queryData"
                    :list="list"
                    @selection-change="select"
                  >
                    <span type="text" class="b-left_box_bottom_title">待授权人员列表</span>
                    <el-button
                      :disabled="queryDataDel==0"
                      type="text"
                      class="mar0-10"
                      @click="onDelete('0')"
                    >
                      <i class="ficon-remove"></i>移除
                    </el-button>
                    <el-button
                      :disabled="queryData==0"
                      type="text"
                      class="mar0-10"
                      @click="onDelete('1')"
                    >
                      <i class="ficon-empty"></i>清空
                    </el-button>
                  </fel-table>
                </template>
                <template v-else>
                  <paging-table
                    ref="pagingStay"
                    class="tobleList wh100"
                    interface="/access/v2.0/auth/7/getCard"
                    layout=" prev, pager, next"
                    ajaxType="9"
                    noInit
                    @onSelection="onSelection"
                    :list="list"
                    :refresh="stayRefresh"
                    :param="cardParam"
                    :paramObj="{ pgids: paramObj }"
                  >
                    <span class="b-left_box_bottom_title">待授权人员列表</span>
                  </paging-table>
                </template>
              </div>
            </div>
          </adjust-div>
          <adjust-div class="b-centre" noadjust>
            <div class="tsTop">步骤2：选择位置</div>
            <div class="b-center_box">
              <div class="box_top">
                <el-button
                  class="box_top_rightBtn"
                  @click="onReturn(['2',cardParam.type])"
                  type="primary"
                >确认选择</el-button>
              </div>
              <div class="b-center_box_bottom">
                <fel-tree1
                  class="tree1"
                  ref="tree1"
                  interface="/access/v2.0/auth/1/listAccessMainTree"
                  @checkchange="checkchange"
                  ajaxType="9"
                  nodeKey="agid"
                  iconName="agtype"
                  :param="{agfatherid:'',agtype:0}"
                  paramKey="agfatherid"
                  :defaultProps="{
                    children: 'children',
                    label: 'agname',
                    isLeaf: 'isLeaf'
                  }"
                  :idArr="[0]"
                ></fel-tree1>
              </div>
            </div>
          </adjust-div>
          <adjust-div class="b-right" dragLeft>
            <div class="tsTop">步骤3：批量生成授权</div>
            <paging-table
              noInit
              height="100%"
              ref="paging-table"
              class="heig100 b-right_table"
              interface="/access/v2.0/auth/8/getAccessAuthCard"
              :list="generateList"
              ajaxType="9"
              :paramObj="generateObj"
              :refresh="refresh"
              @onAajx="onAajx"
            >
              <el-button
                type="text"
                v-for="(v,k) of topButs"
                :disabled="thridDisabled"
                :key="k"
                class="mar0-10"
                @click="onClick(v.id, v)"
              >
                <i v-if="v.icon" :class="'ficon-'+v.icon"></i>
                {{v.alias}}
              </el-button>
            </paging-table>
          </adjust-div>
        </adjust>
      </el-container>
    </el-container>
    <batchEdit
      :defaultData="defaultData"
      @confirm="confirm"
      :dialogVisible="dialogEdit"
      :isCardMj="true"
      @beforeClose="dialogEdit=false"
    ></batchEdit>
  </el-container>
</template>
 
<script>
import pubSelect from "./../common/pub-select";
import { mapGetters } from "vuex";
import batchEdit from "./batchEdit";
import batchListMJ from "./batchListMJ";
import { arrReduceRightObj } from "@/utils/utils";
export default {
  components: {
    batchEdit,
    batchListMJ,
    pubSelect
  },
  props: {
    toParam: null,
    toRoute: null
  },
  created() {
    this.inGetsonmenu();
    this.$ajax("/access/v2.0/auth/3/listGroupTree", {}, "9").then(res => {
      this.zzoptions = res.result;
    });
    this.toRoutes();
  },
  activated() {
    this.toRoutes();
  },
  deactivated() {
    this.toNum = 0;
  },
  beforeDestroy() {
    this.toNum = 0;
  },
  data() {
    let $this = this;
    return {
      // ismj: false,
      reqLoading: false,
      toNum: 0,
      copyRoutes: {},
      stayRefresh: 0,
      refresh: 0,
      zzValue: "",
      ryOrzz: true,
      loading: false,
      addBut: true,
      dialogEdit: false,
      rySelectShow: false,
      next: true,
      thridDisabled: true,
      loadText: "",
      ryvalue: "",
      cardParam: { type: "1", search: "" },
      defaultData: {
        aacldedate: "",
        aacldsdate: "",
        aacldopenstime: "00:00",
        aacldopenetime: "23:59",
        aacldusecount: "",
        aacldisapp: "0"
      },
      paramObj: [],
      options: [
        { value: "1", label: "人员" },
        { value: "2", label: "组织" }
      ],
      zzoptions: [],
      ryoptions: [],
      listButs: [],
      cardbuild: { areas: [], pgids: [], cards: [], type: "" },
      generateList: [
        {
          name: "序号",
          type: "index",
          width: "50px"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "位置",
          // prop: "aglocation",
          formatter(row, a, b) {
            return row.aglocation + " - " + row.amname;
          }
        }
      ],
      queryData: [],
      queryDataDel: [],
      list: [
        {
          show: false,
          type: "selection"
        },
        // {
        //   name: "卡片类型",
        //   prop: "cardtype"
        // },
        {
          name: "卡号",
          prop: "cardcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        }
      ],
      topButs: [
        {
          id: 0,
          alias: "清空",
          icon: "empty"
        },
        {
          id: 2,
          alias: "修改",
          icon: "image30"
        }
      ],
      sonmenu: 0
    };
  },
  computed: {
    generateObj() {
      let obj = { areas: [], cards: [], pgids: [], type: "1" };
      obj.areas = this.cardbuild.areas.map(item => {
        return { agid: item.agid, agtype: item.agtype };
      });
      obj.cards = this.queryDataDel.map(item => {
        return item.cardcode;
      });
      obj.pgids = this.paramObj;
      obj.type = this.cardParam.type;
      return obj;
    }
  },
  watch: {
    dialogEdit(val) {
      if (val) {
        this.defaultData = {
          aacldedate: "",
          aacldsdate: "",
          aacldopenstime: "00:00",
          aacldopenetime: "23:59",
          aacldusecount: "",
          aacldisapp: "0"
        };
      }
    }
  },
  methods: {
    toRoutes() {
      console.log("this.toRoute", this.toRoute);
      if (
        this.toRoute &&
        this.toRoute.in &&
        this.copyRoutes.keys != this.toRoute.keys
      ) {
        this.addBut = false;
        setTimeout(() => {
          this.copyRoutes = JSON.parse(JSON.stringify(this.toRoute));
          if (this.toRoute && this.toRoute.in && this.toRoute.in == "renyuan") {
            console.log("toRoutes", this.toRoute);
            this.ryvalue = this.toRoute.personcode;
            this.onReturn(["1", 1, false]);
          }
        }, 0);
      } else {
        this.toNum++;
        if (this.toNum < 5) {
          setTimeout(() => {
            this.toRoutes();
          }, 200);
        }
      }
    },
    onAajx(data) {
      this.thridDisabled = data.length == 0 ? true : false;
    },
    inGetsonmenu() {
      this.$ajax("/login/home/2/getsonmenu", { fatherid: this.toParam.id }, "1")
        .then(res => {
          res.result.forEach(value => {
            let id = value.entity.id;
            let alias = value.entity.alias;
            console.log("id,alias", id, alias);
            if (id == "859") {
              this.topButs.push({
                id: 3,
                alias: "生效授权",
                icon: "ficon-image397"
              });
            } else if (id == "860") {
              this.listButs.push(value.entity);
            }
          });
          this.sonmenu = 4;
        })
        .catch(err => {
          if (this.sonmenu < 3) {
            setTimeout(() => {
              this.sonmenu++;
              this.inGetsonmenu();
            }, 1000);
          }
        });
    },
    zzOnchange(val) {
      //选中组织
      this.paramObj = val.map(item => {
        return item[0];
      });
      this.$refs.cascader.toggleDropDownVisible(false);
    },
    onChange(val) {
      //选择人员或组织
      if (val == "2") {
        this.ryOrzz = false;
        this.cardParam.search = "";
        this.list[0].show = true;
        this.queryData = [];
      } else {
        this.paramObj = [];
        this.ryOrzz = true;
        this.zzValue = "";
        this.list[0].show = false;
      }
    },
    onRyChange(data) {
      let next = true;
      this.queryData.forEach(item => {
        if (item.personcode == data.personcode) {
          next = false;
        }
      });
      if (next) {
        this.queryData.push(data);
        this.rySelectShow = false;
      }
    },
    onRyInput(val) {
      this.loadText = "点击查询进行检索";
      this.rySelectShow = true;
    },
    onRyFocus(val) {
      this.next = false;
      this.loadText = "点击查询进行检索";
      this.rySelectShow = true;
    },
    onRyClear() {
      this.value = "";
      this.ryoptions = [];
      this.rySelectShow = false;
    },
    onShow(val) {
      this.rySelectShow = val;
    },
    noNext() {
      this.next = true;
    },
    onReturn([str, type, bool = true]) {
      //返回,查询,及确认选择事件
      if (str == "0") {
        this.addBut = true;
      } else if (str == "1") {
        if (type == "1") {
          if (this.ryvalue) {
            this.rySelectShow = true;
            this.loadText = "加载中...";
            this.$ajax(
              "/access/v2.0/auth/7/getCard",
              { type: 1, search: this.ryvalue, page: 1, rows: 20 },
              "9"
            )
              .then(res => {
                this.ryoptions = res.result.data;
                if (this.ryoptions.length == 0) {
                  this.loadText = "无数据";
                }
                if (!bool) {
                  this.ryoptions.forEach(item => {
                    if (
                      item.personcode == this.ryvalue ||
                      item.cardcode == this.ryvalue
                    ) {
                      this.onRyChange(item);
                    }
                  });
                }
              })
              .catch(err => {
                this.loadText = err.resultMsg;
              });
          } else {
            this.rySelectShow = true;
            this.loadText = "请输入内容进行查询";
            return;
          }
        } else {
          if (this.paramObj.length > 0) {
            this.stayRefresh = new Date().getTime();
          } else {
            this.$message({
              message: "请先选择查询组织!",
              type: "warning"
            });
          }
        }
      } else {
        if (this.cardbuild.areas.length == 0) {
          this.$message({
            message: "请先选择建筑",
            type: "warning"
          });
          return;
        }
        if (type == "1") {
          this.cardbuild.pgids = []; //[this.cardParam.pgids];
          this.cardbuild.cards = [...this.queryData];
          this.cardbuild.type = type;
        } else {
          this.cardbuild.cards = [];
          this.cardbuild.pgids = this.paramObj; //[this.cardParam.pgids];
          this.cardbuild.type = type;
        }
        if (
          (this.cardbuild.cards.length == 0 &&
            this.cardbuild.pgids.length == 0) ||
          (this.cardbuild.cards.length > 0 && this.queryDataDel.length == 0)
        ) {
          this.$message({
            message: "请先选择人员或组织",
            type: "warning"
          });
          return;
        }
        this.refresh = new Date().getTime();
      }
    },
    onRefresh() {
      this.onReturn(["2", this.cardParam.type, false]);
    },
    select(val) {
      this.queryDataDel = val;
    },
    onDelete(type) {
      if (type == "0") {
        this.queryDataDel.forEach(val => {
          let ind = this.queryData.indexOf(val);
          this.queryData.splice(ind, 1);
        });
      } else if (type == "2") {
      } else {
        this.queryData = [];
      }
    },
    onSelection() {},
    onClick(key, data) {
      if (key == "0") {
        this.thridDisabled = true;
        this.$refs["paging-table"].setQueryData([]);
      } else if (key == "2") {
        this.dialogEdit = true;
      } else if (key == "3") {
        if (this.$refs["paging-table"].queryData.length == 0) {
          this.$message({
            message: "列表数据为空!",
            type: "warning"
          });
          return;
        } else {
          this.$ajax(
            "/access/v2.0/auth/9/saveAccessAuthCard",
            this.defaultData,
            "9",
            this.generateObj,
            "请求中...",
            120000
          )
            .then(res => {
              this.reqLoading = false;
              this.onReturn(["2", this.cardParam.type]);
              this.$message({
                message: "授权已下发!",
                type: "success"
              });
              this.thridDisabled = true;
            })
            .catch(err => {
              this.reqLoading = false;
              this.$message({
                showClose: true,
                message: `[${err.resultCode}] ` + err.resultMsg,
                type: "error"
              });
            });
        }
      } else if (key == "d1") {
        this.addBut = false;
      }
    },
    confirm(val, data) {
      this.defaultData = val;
      this.dialogEdit = false;
    },
    onSelect(val) {
      let next = true;
      this.queryData.forEach(item => {
        if (item.personcode == val.personcode) {
          next = false;
        }
      });
      if (next) {
        this.queryData.push(val);
      }
    },
    checkchange(val, data) {
      this.cardbuild.areas = data.checkedNodes;
    },
    ...mapGetters(["getNumber"])
  }
};
</script>

<style lang="scss">
.rightBatchAdd {
  .box_top {
    background: #fff;
    padding: 5px 5px 0 5px;
    height: 40px;
    justify-content: flex-end;
    display: flex;
    // margin-bottom:5px;
    .b-left_box_top_card-query {
      position: absolute;
      width: 28%;
      height: 85%;
      z-index: 10;
      left: 12px;
      top: 75px;
      .maR180 {
        margin-right: 180px;
      }
    }
    .box_top_rightBtn {
      float: right;
      height: 27px;
      width: 95px;
      margin: 2px 15px;

      line-height: 0px;
    }
    .box_top_sel {
      width: 80px;
      margin-right: 10px;
    }
    .box_top_cas {
      flex: 1;
      line-height: 27px;
      margin-right: 10px;
      // overflow: hidden;
      .el-cascader__tags {
        top: 42%;
      }
      .el-cascader__tags .el-tag {
        max-width: 120px;
      }
    }
    .box_top_btn {
      width: 56px;
      height: 27px;
      margin: 1px 15px 2px 0;
    }
  }
  .b-left_box {
    // width: 100%;
    flex: 1;
    display: flex;
    flex-direction: column;
    .b-left_box_bottom {
      flex: 1;
      display: flex;
      flex-direction: column;
      .b-left_box_bottom_title {
        position: absolute;
        left: 15px;
        font-size: 16px;
      }
      .b-left_box_bottom_table {
        flex: 1;
      }
    }
    .b-left_box_pagin {
      height: 50px;
      text-align: right;
      background: #fff;
    }
  }
  .b-center_box {
    flex: 1;
    // height: 0;
    display: flex;
    flex-direction: column;
    background: #fff;
    .b-center_box_bottom {
      margin: 10px;
      flex: 1;
      overflow: auto;
      position: relative;
      .fel-tree {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
      }
    }
  }
  .b-right {
    .checkAdmin {
      position: absolute;
      left: 15px;
      padding-top: 4px;
      width: 170px;
    }
    .tobleList {
      padding-top: 2px;
    }
    .b-right_table {
      padding: 6px 14px 0;
    }
  }
}
</style>
