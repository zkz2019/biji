<!-- 快速入住 -->
<template>
  <el-dialog
    title="配卡入住"
    width="60%"
    append-to-body
    :close-on-click-modal="false"
    :before-close="beforeClose"
    :visible.sync="dialogVisible"
  >
    <fel-form
      ref="felForm"
      width="140px"
      :button="[]"
      dynamic
      :selects="selects"
      :defaultData="defaultData"
      @submitForm="submitForm"
      :formData="formData"
    >
      <div slot="bottom" class="footerButton">
        <fel-button @click="beforeClose">取消</fel-button>
        <fel-button @click="readIDCard">读取房卡</fel-button>
        <fel-button type="primary" @click="onSubmitForm">快速入住</fel-button>
      </div>
    </fel-form>
    <cardReading
      ref="cardReading"
      :close="dialogVisible"
      @onInstall="onInstall"
      @resultdata="resultdata"
    />
  </el-dialog>
</template>

<script>
import { format } from "@/utils/utils.js";
import judge from "@/utils/judge.js";
import cardReading from "../kwgl/cardReading";
export default {
  components: { cardReading },
  props: {
    param: {
      type: Object,
      default() {
        return {};
      }
    },
    choiceObj: {
      type: Object,
      default() {
        return {};
      }
    },
    dialogVisible: Boolean
  },
  data() {
    let $this = this;
    return {
      selects: {
        position: [{ agid: "", agname: "正在加载中...", isroom: true }]
      },
      roomidObj: {},
      defaultData: { dates: [], roomid: [], isteamrz: 0, isxbrz: 0 },
      formData: [
        {
          disabled: true,
          width: "50%",
          value: "personname",
          name: "姓名",
          type: "text"
        },
        {
          disabled: true,
          width: "50%",
          value: "personsex",
          name: "性别",
          type: "select",
          select: [
            {
              value: 1,
              label: "男"
            },
            {
              value: 0,
              label: "女"
            }
          ]
        },
        {
          width: "50%",
          disabled: true,
          value: "personcode",
          name: "身份证",
          maxlength: 18,
          type: "text"
        },
        {
          disabled: true,
          width: "50%",
          value: "personphone",
          name: "联系手机",
          maxlength: 11,
          type: "text"
        },
        {
          disabled: true,
          width: "50%",
          value: "personcompany",
          name: "单位",
          type: "text"
        },
        {
          width: "50%",
          value: "teamname",
          name: "团信息",
          type: "text",
          disabled: true
        },
        {
          value: "mainaccountroom",
          name: "主账房",
          type: "text",
          disabled: true
        },
        {
          value: "dates",
          name: "预约时间",
          type: "date",
          date: "datetimerange",
          disabled: true,
          format: "yyyy-MM-dd HH:mm:ss"
        },
        // {
        //   value: "teamsdate",
        //   width: "50%",
        //   name: "预约开始时间",
        //   type: "text",
        //   disabled: true
        // },
        // {
        //   value: "teamedate",
        //   width: "50%",
        //   name: "预约结束时间",
        //   type: "text",
        //   disabled: true
        // },
        {
          class: "roomid",
          value: "roomid",
          name: "预约房间",
          type: "cascader",
          options: "position",
          onChange: this.onChange,
          change: false,
          filterable: true,
          props: {
            label: "agname",
            value: "agid",
            disabled: "isroom",
            children: "children"
          },
          rules: [
            {
              required: true,
              message: "请选择预约房间",
              trigger: "change"
            }
          ]
        },
        {
          width: "50%",
          value: "rtname",
          name: "预约房型",
          type: "text",
          disabled: true
        },
        {
          width: "50%",
          value: "rtprice",
          name: "房费标准",
          type: "text",
          disabled: true
        },
        {
          width: "50%",
          value: "roommaxperson",
          name: "房间床位",
          type: "text",
          disabled: true
        },
        {
          width: "50%",
          value: "roomrzperson",
          name: "已住床位",
          type: "text",
          disabled: true
        },
        {
          value: "tpedate", //值,
          name: "入住结束时间", //名称,
          type: "date",
          placeholder: "请选择入住结束时间",
          date: "datetime",
          format: "yyyy-MM-dd HH:mm:ss",
          width: "50%",
          dTime: "[12:00:00]",
          rules: [
            {
              required: true,
              message: "请选择入住结束时间",
              trigger: "change"
            }
          ]
        },
        {
          width: "50%",
          value: "trcash",
          name: "预缴押金",
          type: "text",
          rules: [
            {
              validator: (rule, value, callback) => {
                if (isNaN(Number(value))) {
                  callback(new Error("格式错误"));
                } else {
                  callback();
                }
              },
              trigger: "blur"
            }
          ]
        },
        {
          width: "50%",
          value: "isxbrz",
          name: "是否男女混住",
          type: "select",
          select: [
            {
              value: 1,
              label: "是"
            },
            {
              value: 0,
              label: "否"
            }
          ],
          rules: [
            {
              required: true,
              message: "请选择是否忽略性别入住",
              trigger: "change"
            }
          ]
        },
        {
          width: "50%",
          value: "isteamrz",
          name: "是否不同团混住",
          type: "select",
          select: [
            {
              value: 1,
              label: "是"
            },
            {
              value: 0,
              label: "否"
            }
          ],
          rules: [
            {
              required: true,
              message: "请选择是否忽略团入住",
              trigger: "change"
            }
          ]
        },
        {
          width: "50%",
          value: "cardcode",
          name: "房卡",
          type: "text",
          rules: [
            {
              required: true,
              message: "请输入房卡",
              trigger: "bur"
            }
          ],
          buts: [
            {
              show: true,
              class: "but-connect",
              title: "读卡器软件下载",
              icon: "el-icon-download",
              onClick: this.onClickCardReader
            }
          ]
        }
      ]
    };
  },
  watch: {
    dialogVisible(val) {
      if (val) {
        this.ingetauthinfo(this.choiceObj.personcode);
        this.inPosition();
      }
    }
  },
  created() {},
  methods: {
    onClickCardReader() {
      this.$refs["cardReading"].download();
    },
    onSubmitForm() {
      this.$refs["felForm"].submitForm();
    },
    resultdata(data) {
      if (data.Result > 0 && (data.FunctionID == 0 || data.FunctionID == 3)) {
        this.$refs["felForm"].setData("cardcode", data.CardNo);
      }
    },
    onInstall(is) {
      if (is) {
        this.formData[17].buts[0].show = true;
      } else {
        this.formData[17].buts[0].show = false;
      }
    },
    readIDCard() {
      this.$refs["cardReading"].readIDCard();
    },
    onChange(arr, data) {
      if (arr && arr[0]) {
        let roomid = arr[0][arr[0].length - 1];
        this.ingetroomtype(roomid);
      }
    },
    ingetroomtype(roomid) {
      if (roomid) {
        this.$ajax(
          "/team/teampersoninto/5/getroomtype",
          { roomid: roomid },
          "1"
        )
          .then(res => {
            let result = res.result;
            this.$refs["felForm"].setData("rtprice", result.rtprice);
            this.$refs["felForm"].setData("rtname", result.rtname);
            this.$refs["felForm"].setData(
              "roommaxperson",
              result.roommaxperson
            );
            this.$refs["felForm"].setData("roomrzperson", result.roomrzperson);
          })
          .catch(err => {});
      }
    },
    inPosition(roomid = "") {
      this.$ajax("/team/teampersoninto/3/getroom", { roomid: roomid }, "1")
        .then(res => {
          this.setFJObjData(res.result);
          this.selects.position = res.result;
          let ids = this.defaultData.roomid;
          if (this.defaultData && ids && ids.length > 0) {
            let roomid = ids[ids.length - 1];
            if (this.$refs["felForm"]) {
              this.$refs["felForm"].setData("roomid", this.roomidObj[roomid]);
            }
          }
        })
        .catch(err => {});
    },
    setFJObjData(arr) {
      arr.forEach(obj => {
        this.roomidObj[obj.agfatherid] = this.roomidObj[obj.agfatherid] || [];
        this.roomidObj[obj.agid] = [
          ...this.roomidObj[obj.agfatherid],
          obj.agid
        ];
        if (obj.children) {
          this.setFJObjData(obj.children);
        } else {
          obj.isroom = !obj.isroom;
        }
      });
    },
    ingetauthinfo(personcode) {
      this.$ajax(
        "/team/teampersoninto/4/getauthinfo",
        {
          personcode: personcode,
          teamid: this.param.teamid,
          tpid: this.choiceObj.tpid
        },
        "1"
      )
        .then(res => {
          let result = res.result || {};
          result.isteamrz = 0;
          result.isxbrz = 0;
          result.dates = [result.teamsdate || "", result.teamedate || ""];
          let roomid = result.roomid;
          if (roomid) {
            this.ingetroomtype(roomid);
            result.roomid = this.roomidObj[roomid] || [roomid];
          } else {
            result.roomid = [];
          }
          this.defaultData = result;
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    submitForm(data) {
      delete data.dates;
      data.roomid = data.roomid[data.roomid.length - 1];
      this.$ajax(
        "/team/teampersoninto/1/saveauthbyteamperson",
        data,
        "1",
        {},
        true
      )
        .then(res => {
          this.beforeClose();
          this.$emit("onRefresh");
          this.$message({
            message: "配卡成功",
            type: "success"
          });
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    beforeClose() {
      this.defaultData = { dates: [], roomid: [], isteamrz: 0, isxbrz: 0 };
      if (this.$refs["felForm"]) {
        this.$refs["felForm"].resetForm();
      }
      this.$emit("beforeClose");
    }
  }
};
</script>