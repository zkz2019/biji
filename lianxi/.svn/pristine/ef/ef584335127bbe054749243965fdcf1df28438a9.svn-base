<!-- 推送消息管理 -->
<template>
  <el-container class="wgljjl314">
    <el-header class="elheader query_headbox">
      <com-title>{{toParam.alias}}</com-title>
      <retrieval class="query_head">
        <inpbox :inptext="'推送时间'">
          <dateSelect ref="dates" class="qh_date" v-model="dates"></dateSelect>
        </inpbox>
        <inpbox :inpb="true">
          <el-select v-model="param.msgtype" class="wid200 qh_inp">
            <el-option
              v-for="item in personnels"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            ></el-option>
          </el-select>
        </inpbox>
        <inpbox :inpb="true">
          <el-select v-model="param.sendtype" class="wid200 qh_inp">
            <el-option v-for="item in sendtypes" :key="item.id" :label="item.name" :value="item.id"></el-option>
          </el-select>
        </inpbox>
        <inpbox :inptext="'推送编号'">
          <el-input clearable class="wid200 qh_inp" v-model="param.pushid" placeholder="输入推送编号"></el-input>
        </inpbox>
        <inpbox :inptext="'请输入'">
          <el-input
            clearable
            class="wid300 qh_inp"
            v-model="param.search"
            placeholder="输入人员姓名/工号/手机号"
          ></el-input>
        </inpbox>
        <inpbox :inptext="'请输入'">
          <el-input clearable class="wid300 qh_inp" v-model="param.search2" placeholder="输入消息名称"></el-input>
        </inpbox>
        <inpbox>
          <el-button class="buta qh_btn" size="small" type="primary" @click="search">查询</el-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="pad0-10 query_main">
      <paging-table
        height="100%"
        interface="/push/log/2/getmsgpushlog"
        class="heig100"
        :param="param"
        :refresh="refresh"
        :list="list"
        @onEjectChange="onEjectChange"
      ></paging-table>
      <see :dialogVisible="dialogSee" :defaultData="defaultDataSee" @beforeClose="dialogSee=false"></see>
    </el-main>
  </el-container>
</template>

<script>
import { getDates } from "@/views/query/query.js";
import { format } from "@/utils/utils.js";
import Storages from "@/utils/Storage.js"; //缓存工具
import see from "./see.vue";
export default {
  components: {
    see
  },
  props: ["toParam"],
  data() {
    let $this = this;
    return {
      sendtypes: [
        {
          id: "",
          name: "所有推送方式"
        }
      ],
      personnels: [
        {
          id: "",
          name: "所有消息类型"
        }
      ],
      dialogSee: false,
      defaultDataSee: {},
      dates: [],
      refresh: 0,
      param: {
        pushid: "",
        search: "",
        search2: "",
        msgtype: "",
        sendtype: "",
        edate: "",
        sdate: ""
      },
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "推送编号",
          prop: "pushid"
        },
        {
          name: "推送时间",
          prop: "plcdate"
        },
        {
          name: "推送类型",
          prop: "pushtype",
          formatter(a, b, c) {
            return { "1": "定时", "2": "实时", "3": "通知" }[c];
          }
        },
        {
          name: "推送方式",
          prop: "pltype"
        },
        {
          name: "信息名称",
          prop: "pushname"
        },
        {
          name: "接收人工号",
          prop: "userlogin"
        },
        {
          name: "接收人姓名",
          prop: "username"
        },
        {
          name: "手机",
          prop: "usermobile"
        },
        {
          name: "组织",
          prop: "pgname"
        },
        {
          name: "角色",
          prop: "userrole"
        },
        {
          name: "openid",
          prop: "openid"
        },
        {
          name: "推送内容",
          width: "80px"
          // template: {
          //   props: ["scope"],
          //   methods: {
          //     onClick(key, obj) {
          //       $this.defaultDataSee = Object.assign({}, this.scope.row);
          //       $this.dialogSee = true;
          //     }
          //   },
          //   template: `<div class="operat-buts">
          //    <el-button type="text" size="small" @click.stop="onClick">查看</el-button>
          //   </div>`
          // }
        },
        {
          name: "备注",
          prop: "plremark"
        },
        {
          name: "推送状态",
          prop: "plstate",
          template: {
            props: ["scope"],
            template: `<span v-if="scope.row.plstate == 1" class="puc-pg">推送成功</span>
            <span v-else-if="scope.row.plstate == 0">等待推送</span>
            <span v-else class="puc-px">推送失败</span>`
          }
        }
      ],
      sonmenu: 0
    };
  },
  created() {
    this.inGetsonmenu();
    this.getparam();
  },
  mounted() {
    this.ingetmsgpushtype();
    this.getEject();
  },
  methods: {
    inGetsonmenu() {
      this.$ajax("/login/home/2/getsonmenu", { fatherid: this.toParam.id }, "1")
        .then(res => {
          res.result.forEach(value => {
            let id = value.entity.id;
            let alias = value.entity.alias;
          });
          this.sonmenu = 4;
        })
        .catch(err => {
          if (this.sonmenu < 3) {
            setTimeout(() => {
              this.sonmenu++;
              this.inGetsonmenu();
            }, 1000);
          }
        });
    },
    getparam(val = false) {
      let T = new Date();
      let YM = format(T, "yyyy-MM");
      let time = format(T, "dd HH:mm:ss");
      let tValue = [`${YM}-01 00:00:00`, `${YM}-${time}`];
      this.param.sdate = tValue[0];
      this.param.edate = tValue[1];
      this.dates = tValue;
    },
    //重置事件
    onReset() {
      this.dates = [];
      this.$refs.dates.value2 = new Date();
      Object.keys(this.param).forEach(key => {
        this.param[key] = "";
      });
      this.search();
    },
    ingetmsgpushtype() {
      this.$ajax("/push/log/1/getmsgpushtype", {}, "1")
        .then(res => {
          let result = res.result;
          this.personnels.push(...result.msgtype);
          this.sendtypes.push(
            ...result.sendtype.map(o => {
              return {
                id: o,
                name: o
              };
            })
          );
        })
        .catch(err => {});
    },
    search() {
      let tValue = getDates(this.dates);
      this.param.sdate = tValue[0];
      this.param.edate = tValue[1];
      this.refresh = new Date().getTime();
    },
    onEjectChange() {
      this.$common.onEjectChange(this.list, "tsrz685");
    },
    getEject() {
      this.$common.getEject(this, "list", "tsrz685");
    }
  }
};
</script>