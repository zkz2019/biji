<!-- 人员管理 -->
<template>
  <el-container>
    <el-header class="query_headbox">
      <com-title>{{toParam.alias}}</com-title>
      <retrieval class="query_head">
        <inpbox :inptext="'请选择时间'">
          <fel-date class="maR10 qh_date" v-model="dates"></fel-date>
        </inpbox>
        <inpbox :inptext="'请输入'">
          <el-input
            clearable
            class="search wid300 qh_inp"
            v-model="param.search"
            placeholder="输入操作人/操作人账号进行检索"
          ></el-input>
        </inpbox>

        <inpbox>
          <fel-button class="qh_btn" type="primary" @click="search">查询</fel-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="padt0 query_main">
      <paging-table
        class="tobleList wh100"
        height="100%"
        interface="/system/log/1/getlog"
        :list="list"
        :refresh="refresh"
        :param="param"
      >
      <!-- 日志导出 -->
      <journalExport
      :param="param"
      fatherid="450"
      url="/system/log/person/upload/1/downlog"
      ></journalExport>
      </paging-table>
    </el-main>
    <el-dialog
      title="日志详情列表"
      width="70%"
      class="grantDialog"
      :close-on-click-modal="false"
      :before-close="beforeClose"
      :visible.sync="dialogVisible"
    >
      <el-container class="dialog-table6 wh100">
        <paging-table
          interface="/system/log/2/getlogdetails"
          :param="grantParam"
          :refresh="grantRefresh"
          :list="grantList"
        />
      </el-container>
    </el-dialog>
  </el-container>
</template>

<script>
import journalExport from "./../common/journalExport"
import { mapGetters } from "vuex";
import { format } from "@/utils/utils.js";
export default {
  props: {
    toParam: null
  },
   components:{
    journalExport,
  },
  data() {
    let $this = this;
    return {
      grantParam: {},
      grantRefresh: 0,
      dialogVisible: false,
      grantList: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: this.getNumber(),
          prop: "personcode"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "卡号/指纹号",
          prop: "authcode"
        },
        // {
        //   name: "卡片授权id",
        //   prop: "rcid"
        // },
        // {
        //   name: "指纹授权id",
        //   prop: "rfid"
        // },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "下发状态",
          prop: "issend"
        },
        {
          name: "备注",
          prop: "failtype"
        }
      ],
      dates: [],
      param: { sdate: "", edate: "", search: "" },
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "日志标题",
          prop: "logtitle"
        },
        {
          name: "日志类型",
          prop: "logtype"
        },
        {
          tooltip: false,
          name: "日志内容",
          prop: "logcontent"
        },
        {
          name: "操作人",
          prop: "username"
        },
        {
          name: "详情",
          prop: "logdetailscount",
          template: {
            props: ["scope"],
            methods: {
              isNumber(num) {
                if (num) {
                  return /^[0-9]*$/.test(num);
                }
                return false;
              },
              onClick() {
                $this.grantParam.logid = this.scope.row.logid;
                $this.grantRefresh = new Date().getTime();
                $this.dialogVisible = true;
              }
            },
            template: `<div>
              <span v-if="isNumber(scope.row.logdetailscount)"><a class="a-click" @click.stop="onClick">{{scope.row.logdetailscount}}</a></span>
              <span v-else>{{scope.row.logdetailscount}}</span>
            </div>`
          }
        },
        {
          name: "操作人账号",
          prop: "userlogin"
        },
        {
          name: "操作日期",
          prop: "logdate"
        }
      ],
      refresh: 0
    };
  },
  methods: {
    //重置事件
    onReset() {
      this.dates = [];
      Object.keys(this.param).forEach(key => {
        this.param[key] = "";
      });
      this.search();
    },
    ...mapGetters(["getNumber"]),
    beforeClose() {
      this.dialogVisible = false;
    },
    search() {
      if (this.dates && this.dates.length == 2) {
        this.param.sdate = format(this.dates[0], "yyyy-MM-dd HH:mm:ss");
        this.param.edate = format(this.dates[1], "yyyy-MM-dd HH:mm:ss");
      } else {
        this.param.sdate = "";
        this.param.edate = "";
      }
      this.refresh = new Date().getTime();
    }
  }
};
</script>