<template>
  <el-dialog
    title="导出历史详情"
    width="70%"
    class="importHistory"
    append-to-body
    :close-on-click-modal="false"
    :before-close="beforeDetailed"
    :visible.sync="dialogDetailed"
  >
    <el-container class="dialog-table6 wh100">
      <el-header class="query_headbox">
        <retrieval class="query_head">
          <inpbox :inpb="true">
            <el-input
              clearable
              class="qh_w270 qh_inp maR24"
              v-model="param.search"
              placeholder="输入账号进行查询"
            ></el-input>
          </inpbox>
          <inpbox>
            <fel-button class="qh_btn" type="primary" @click="search()">查询</fel-button>
            <fel-button class="qh_btn" @click="onReset()">重置</fel-button>
          </inpbox>
        </retrieval>
      </el-header>
      <paging-table :interface="detailsUrl" :list="list" :param="param" :refresh="detailedRefresh">
        <span class="sli but-blue" @click="onDownloadAll()">全部下载</span>
      </paging-table>
    </el-container>
  </el-dialog>
</template>

<script>
import { download } from "@/utils/utils.js";
import { mapGetters } from "vuex";
export default {
  props: {
    dialogDetailed: Boolean,
    detailsUrl: String,
    failUrl: String,
    eeid: String | Number
  },
  data() {
    let $this = this;
    return {
      param: { eeid: "", search: "" },
      // failUrl: "person/upload/8/downpersonexcel",
      detailedRefresh: 0,
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "导出开始时间",
          prop: "eedsdate"
        },
        {
          name: "导出结束时间",
          prop: "eededate"
        },
        {
          name: "导出文件名",
          prop: "eedname"
        },
        {
          name: "状态",
          template: {
            props: ["scope"],
            computed: {
              name() {
                if (this.scope.row.eedstatus == "0") {
                  return "正在导出";
                } else if (this.scope.row.eedstatus == "-1") {
                  return "导出失败";
                } else {
                  return "导出成功";
                }
              }
            },
            methods: {
              getClass() {
                let value = this.scope.row.eedstatus;
                if (value == "1") {
                  return "puc-pg";
                } else if (value == "-1") {
                  return "puc-px";
                } else {
                  return "";
                }
              }
            },
            template: `<span :class='getClass()'>{{name}}</span>`
          }
        },
        {
          name: "导出备注",
          prop: "eedremark"
        },
        {
          name: "操作",
          width: "100px",
          template: {
            props: ["scope"],
            computed: {
              listBut() {
                let obj = this.scope.row;
                return [{ name: "下载", id: "1", data: obj }];
              }
            },
            methods: {
              onClick(id, obj) {
                $this.onClick(id, obj);
              }
            },
            template: `<div class="operat-buts"> 
             <el-button v-for="(v,i) of listBut" :disabled="scope.row.eedstatus!=1" :key="i" type="text" size="small" @click.stop="onClick(v.id, v)">{{v.name}}</el-button>
            </div>`
          }
        }

        // {
        //   name: "失败原因",
        //   prop: "uutremark"
        // }
      ]
    };
  },
  computed: {},
  watch: {
    dialogDetailed(val) {
      this.onRefresh1();
    },
    eeid(val) {
      if (val) {
        this.param.eeid = val;
      } else {
        this.param.eeid = "";
      }
    }
  },
  methods: {
    ...mapGetters(["getNumber"]),
    onClick(id, obj) {
      console.log("id,obj", id, obj);
      this.exportBut(obj);
    },
    beforeDetailed() {
      this.$emit("beforeDetailed");
    },
    search() {
      this.onRefresh1();
    },
    onReset() {
      this.param.search = "";
      this.onRefresh1();
    },
    onRefresh1() {
      this.detailedRefresh = new Date().getTime();
    },
    onDownloadAll() {
      this.inExport("/person/upload/9/downallexcel", "全部下载", {
        eeid: this.param.eeid
      });
    },
    //导出
    exportBut(obj) {
      let url = this.failUrl;
      let data = { eedid: obj.data.eedid };
      this.inExport(url, obj.data.eedfilename, data);
    },
    inExport(url, name, data = {}, obj = {}) {
      console.log("data,name", data, name);
      this.$ajax(url, data, "8", obj, "文件导出中...", 60000)
        .then(res => {
          if (res.size) {
            download(res, name);
            this.$notify({
              title: "成功",
              message: name + "文件导出成功！",
              type: "success"
            });
          }
        })
        .catch(err => {
          this.$message.error("文件导出失败！失败原因：" + err.resultMsg);
        });
    }
  }
};
</script>