<!-- 设置管理员 -->
<template>
  <el-dialog
    class="Participants"
    title="设置管理员"
    :visible.sync="dialogVisible"
    width="70%"
    :before-close="handleClose"
    append-to-body
  >
    <el-container class="Par_con">
      <!-- <el-header class="heig30 query_headbox">
        <retrieval class="query_head">
          <inpbox inptext>
            <el-input
              clearable
              class="search qh_w270 qh_inp"
              v-model="param.search"
              :placeholder="'输入姓名/进行检索'"
            ></el-input>
          </inpbox>
          <inpbox inptext>
            <el-button class="qh_btn" type="primary" @click="onRefresh">确定</el-button>
          </inpbox>
        </retrieval>
      </el-header>-->
      <!-- <el-main class="pad0-10 query_main"> -->
      <paging-table
        ref="pagingTable"
        height="100%"
        interface="/lock/operate/publicroom/3/getperson"
        class="heig100"
        @onSelection="onSelection"
        :list="list"
        :refresh="refresh"
        :param="param"
      >
        <span class="sli">
          <el-input clearable class="search" v-model="param.search" :placeholder="'输入姓名/'+getNumber()+'进行检索'"></el-input>
          <el-button class size type="primary" @click="onRefresh">确定</el-button>
        </span>
        <span class="sli but-blue" @click="onClick()">
          <i class="ficon-"></i>
          设置管理员
        </span>
      </paging-table>
      <!-- </el-main> -->
    </el-container>
  </el-dialog>
</template>

<script>
import { mapGetters } from "vuex";
export default {
  name: "history",
  components: {},
  props: {
    dialogVisible: Boolean,
    checkedroom: Object
  },
  data() {
    let $this = this;
    return {
      personcode: "",
      options: [
        {
          label: "备用开门人员",
          type: 1
        },
        {
          label: "与会人员",
          type: 2
        }
      ],
      value: "",
      refresh: 0,
      param: {
        roomid: "",
        search: ""
      },
      list: [
        {
          name: "学/工号",
          prop: "personcode"
        },
        {
          name: "组织",
          prop: "personlocation"
        },
        {
          name: "电话",
          prop: "personmobile"
        },
        {
          name: "姓名",
          prop: "personname"
        }
      ]
    };
  },
  computed: {
    roomid() {
      // this.param.roomid = this.$store.state.fj38.checkedroom.roomid + "";
      return this.$store.state.fj38.checkedroom.roomid + "";
    }
  },
  watch: {
    dialogVisible(val) {
      if (val == true) {
        this.param.rrid = this.rrid;
      }
    },
    rrid(val) {
      this.param.rrid = val;
    }
  },
  created() {
    this.param.roomid = this.checkedroom.roomid;
    // this.$ajax("/lock/operate/info/d/getunlockingtype", {}, "1").then(res => {
    //   this.options = res.result;
    // });
  },
  methods: {
    ...mapGetters(["getNumber"]),
    onClick() {
      if (this.personcode != "") {
        this.$confirm("确定设置该人员为锁门负责人吗？", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(() => {
          this.$ajax(
            "/lock/operate/publicroom/4/setroomlocker",
            { roomid: this.param.roomid, personcode: this.personcode },
            "1"
          )
            .then(res => {
              this.$message({
                message: "设置门锁负责人成功!",
                type: "success"
              });
            })
            .catch(err => {
              this.$message({
                message: `[${err.resultCode}] ` + err.resultMsg,
                type: "error"
              });
            });
        });
      } else {
        this.$message({
          message: "请先选择人员",
          type: "error"
        });
      }
    },
    handleClose(done) {
      this.$emit("Close");
    },
    onRefresh() {
      //刷新表格
      this.personcode = "";
      this.refresh = new Date().getTime();
    },
    onSelection(data) {
      if (data.length !== 0) {
        this.personcode = data[data.length - 1].personcode;
      }
    }
  }
};
</script>

<style lang="scss">
.Participants {
  .el-dialog {
    height: 70%;
  }
  .el-dialog__body {
    height: 88%;
    .Par_con {
      height: 100%;
    }
  }
}
</style>

