<!-- 入住历史 -->
<template>
  <el-container class="reserveInfo">
    <el-header class="heig30 query_headbox">
      <retrieval class="query_head marpadbor0">
        <inpbox :inpb="true">
          <el-date-picker
            v-model="dates"
            type="datetimerange"
            range-separator="至"
            start-placeholder="预订开始时间"
            value-format="yyyy-MM-dd HH:mm:ss"
            :default-time="['00:00:00','23:59:59']"
            size="mini"
            end-placeholder="预订结束时间"
          ></el-date-picker>
        </inpbox>
        <inpbox inptext>
          <el-input
            clearable
            class="search qh_w270 qh_inp"
            v-model="param.search"
            :placeholder="'输入姓名/'+getNumber()+'/卡号/账号进行检索'"
          ></el-input>
        </inpbox>
        <inpbox :inpb="true">
          <el-button class="buta qh_btn" size="small" type="primary" @click="onRefresh">查询</el-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="pad0-10 query_main reserveInfo_table">
      <paging-table
        height="100%"
        interface="/lock/operate/hotel/h/getteamroomhistory"
        class="heig100"
        @onSelection="onSelection"
        :list="list"
        :refresh="refresh"
        :param="param"
        :noOpera="true"
      ></paging-table>
    </el-main>
  </el-container>
</template>

<script>
import { mapGetters } from "vuex";
import { format } from "@/utils/utils.js";
export default {
  props: {
    checkedroom: Object
  },
  name: "history",
  components: {},
  data() {
    let $this = this;
    return {
      dates: [], //new Date(),new Date(new Date().getTime() + 86400000)
      rrids: [],
      value: "",
      refresh: 0,
      param: {
        search: "",
        tpetime: "",
        tpstime: "",
        roomid: ""
      },
      list: [
        {
          name: "序号",
          type: "$index",
          width: "50px"
        },
        {
          name: "入住时间段",
          formatter(row, b, c) {
            let text = "";
            if (row.tpedate == "2099-12-31 00:00:00") {
              text = "长期";
            } else {
              text = row.tpedate;
            }
            return row.tpsdate + " ~ " + text;
          }
        },
        {
          name: "入住人",
          width: "80px",
          prop: "personname"
        },
        {
          name: "性别",
          width: "60px",
          prop: "personsex"
        },
        {
          name: "入住人身份证",
          width: "165px",
          prop: "personcode"
        },
        {
          name: "团名",
          prop: "teamname"
        },
        {
          name: "团长",
          width: "80px",
          prop: "teamleader"
        },
        {
          name: "团长电话",
          width: "110px",
          prop: "teamleaderphone"
        },
        {
          name: "卡号",
          width: "80px",
          prop: "cardcode"
        },
        {
          name: "账号",
          width: "80px",
          prop: "userlogin"
        },
        {
          name: "退房押金",
          width: "80px",
          prop: "trcash"
        }
      ]
    };
  },
  computed: {
    roomid() {
      return this.checkedroom.roomid + "";
    }
  },
  watch: {
    dates(val) {
      if (val) {
        this.param.tpetime = val[1];
        this.param.tpstime = val[0];
      }
    }
  },
  created() {
    this.param.tpstime = this.dates[0];
    this.param.tpetime = this.dates[1];
    this.param.roomid = this.checkedroom.roomid;
  },
  methods: {
    ...mapGetters(["getNumber"]),
    onAdd() {},
    onDel() {
      if (this.rrids.length !== 0) {
        this.$ajax(
          "/lock/operate/publicroom/8/deleteroomreservation",
          { roomid: this.param.roomid },
          "1",
          this.rrids
        )
          .then(res => {
            this.$message({
              message: "删除预约信息成功!",
              type: "success"
            });
          })
          .catch(err => {
            this.$message({
              message: `[${err.resultCode}] ` + err.resultMsg,
              type: "error"
            });
          });
      } else {
        this.$message({
          message: "请选择需要删除的预约信息",
          type: "error"
        });
      }
    },
    onRefresh() {
      //刷新表格
      this.refresh = new Date().getTime();
    },
    onReset() {
      this.dates = [];
      Object.keys(this.param).map(item => {
        if (item != "roomid") {
          this.param[item] = "";
        }
      });
      this.onRefresh();
    },
    onSelection(data) {
      this.rrids = [];
      data.forEach(item => {
        this.rrids.push(item.rrid + "");
      });
    }
  }
};
</script>
