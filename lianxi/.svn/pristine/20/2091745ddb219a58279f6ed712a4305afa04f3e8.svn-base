<!-- 退房结账信息 -->
<template>
  <el-dialog
    title="退房结账信息"
    :visible.sync="dialogVisible"
    width="70%"
    :before-close="handleClose"
    append-to-body
  >
    <div class="heig400">
      <fel-table
        class="tobleList wh100"
        height="100%"
        :list="list"
        :queryData="queryData"
        @onRefresh="onRefresh"
      >
      </fel-table>
    </div>
    <div style="height:50px;line-height:50px;padding-right:30px;font-size:1.2em;padding-top:5px;">
      <div class="flr">
        主账房:
        <span style="display:inline-block;min-width:35px;">{{mainaccountroom}}</span>
        团折扣:
        <span style="display:inline-block;min-width:35px;">{{teamdiscount}}</span>
        应收总金额:
        <span
          style="display:inline-block;min-width:35px;margin-right:35px;"
        >{{allrtprice}}</span>
        实收总金额:
        <span style="display:inline-block;min-width:35px;margin-right:35px;">{{all}}</span>
        <fel-button class="com-but-small" type="primary" @click="onCheckout">确定退房</fel-button>
      </div>
    </div>
    <updateMorey :param="trid" :dialogVisible="updateMoreyVisible" @handleClose="updateClose" />
  </el-dialog>
</template>

<script>
import updateMorey from "./updatemorey";
export default {
  props: {
    param: Object,
    dialogVisible: Boolean
  },
  components: { updateMorey },
  data() {
    var $this = this;
    return {
      trid: {},
      all: "",
      updateMoreyVisible: false,
      mainaccountroom: "",
      teamdiscount: "",
      allrtprice: "",
      backtime:"",
      selects: {},
      queryData: [],
      list: [
        {
          name: "房间",
          prop: "roomlocation"
        },
        {
          name: "房间单价",
          prop: "rtprice"
        },
        {
          name: "押金",
          prop: "trcash"
        },
        {
          name: "入住天数",
          prop: "trdays"
        },
        {
          name: "入住开始时间",
          prop: "trsdate"
        },
        {
          name: "入住结束时间",
          prop: "tredate"
        },
        {
          name: "应收金额",
          prop: "trsmoney"
        },
        {
          name: "实收金额",
          prop: "trrmoney",
          minWidth: "100px",
          template: {
            props: ["scope"],
            methods: {
              onInput() {
                $this.calculatedAmount();
              }
            },
            template: `<div class=""> 
             <el-input type="text" @blur="onInput" v-model="scope.row.trrmoney"
              placeholder="修改实收金额"></el-input>
            </div>`
          }
        },
        {
          name: "备注",
          minWidth: "120px",
          prop: "trremark",
          template: {
            props: ["scope"],
            template: `<div class=""> 
             <el-input type="text" v-model="scope.row.trremark"
              placeholder="备注信息"></el-input>
            </div>`
          }
        }
      ]
    };
  },
  watch: {
    dialogVisible(val) {
      if (val) {
        this.getInfo();
      }
    }
  },
  created() {},
  methods: {
    onCheckout() {
      let arr = this.queryData.map(obj => {
        let trrmoney = Number(obj.trrmoney) || 0;
        return {
          trid: obj.trid,
          trremark: obj.trremark,
          trrmoney: trrmoney,
        };
      });
      let data = {...this.param,backtime:this.backtime}
      this.$ajax(
        "/lock/operate/hotel/8/savebackauth",
        data,
        "1",
        arr,
        true
      )
        .then(res => {
          this.$message({
            showClose: true,
            message: "退房成功!",
            type: "success"
          });
          this.next();
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    onClick(obj) {
      this.trid = obj;
      this.updateMoreyVisible = true;
    },
    calculatedAmount() {
      if (this.queryData && this.queryData.length > 0) {
        let acc = 0;
        this.queryData.forEach(obj => {
          let z = Number(obj.trrmoney);
          if (z) {
            acc += z;
          }
        });
        this.all = acc;
      } else {
        this.all = 0;
      }
    },
    getInfo() {
      this.$ajax("/lock/operate/hotel/7/getbackroominfo", this.param, "1")
        .then(res => {
          this.queryData = res.result.backinfos;
          this.mainaccountroom = res.result.mainaccountroom;
          this.teamdiscount = res.result.teamdiscount;
          this.backtime = res.result.backtime;
          this.allrtprice = res.result.allrtprice || 0;
          this.calculatedAmount();
        })
        .catch(err => {
          console.log("err", err);
        });
    },
    onRefresh() {
      this.getInfo();
    },
    handleClose() {
      this.$emit("handleClose");
    },
    updateClose() {
      this.getInfo();
      this.updateMoreyVisible = false;
    },
    next() {
      this.$emit("next");
    }
  }
};
</script>


