<template>
  <div class="zSelNum">
    <el-select class="zSelNumInp" v-model="state1" @change="onChange" placeholder="请选择">
      <template v-for="item in loadAll">
        <el-option
          :disabled="Boolean(state2&&item.id>state2)"
          :key="item.id"
          :label="item.label"
          :value="item.id"
        ></el-option>
      </template>
    </el-select>&nbsp;&nbsp;-&nbsp;&nbsp;
    <el-select class="zSelNumInp" v-model="state2" @change="onChange" placeholder="请选择">
      <template v-for="item in loadAll">
        <el-option
          :disabled="Boolean(state1&&item.id<state1)"
          :key="item.id"
          :label="item.label"
          :value="item.id"
        ></el-option>
      </template>
    </el-select>
    <span
      v-show="this.state1||this.state2"
      @click="onClear"
      class="el-icon-circle-close zSelNumClear"
    ></span>
  </div>
</template>

<script>
export default {
  props: {
    value: Array,
  },
  data: () => {
    return {
      state1: "",
      state2: "",
      loadAll: [
        { label: "10%", id: "1" },
        { label: "20%", id: "2" },
        { label: "30%", id: "3" },
      ],
    };
  },
  methods: {
    querySearch(queryString, cb) {
      var restaurants = this.loadAll;
      cb(restaurants);
    },
    onClear() {
      this.state1 = "";
      this.state2 = "";
      this.onChange();
    },
    onChange(key) {
      this.$emit("onChange", [this.state1, this.state2]);
    },
  },
};
</script>

<style lang="scss">
.zSelNum {
  height: 30px;
  width: 240px;
  border: 1px solid #dcdfe6;
  border-radius: 5px;
  display: inline-block;
  padding-right: 10px;
  .zSelNumInp {
    .el-input__inner {
      border: none;
      height: 28px;
      padding-right: 15px;
      line-height: 28px;
      width: 92px;
    }
    .el-input__icon {
      display: none;
    }
  }
  .zSelNumClear {
    top: 1px;
    position: relative;
  }
}
</style>