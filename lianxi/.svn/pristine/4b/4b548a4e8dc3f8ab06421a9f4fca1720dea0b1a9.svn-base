<!-- 添加卡片 修改卡片 -->
<template>
  <el-dialog
    title="指纹详情"
    width="70%"
    :close-on-click-modal="false"
    :before-close="beforeClose"
    :visible.sync="dialogVisible"
  >
    <el-container class="dialog-table6 wh100">
      <pfel-table
        ref="pfelTable"
        :refresh="refresh"
        :param="{ personcode: this.param.personcode }"
        interface="/auth/fingercenter/finger/updatefinger/1/getfinger"
        :list="list"
      >
        <span v-for="(v,k) of busName" :key="k" class="sli but-blue" @click="onClick(v.id, v)">
          <i v-if="v.icon" :class="'ficon-'+v.icon"></i>
          {{v.alias}}
        </span>
      </pfel-table>
    </el-container>
    <detailsAdd
      @success="onSuccess"
      :param="paramAdd"
      :dialogVisible="dialogAdd"
      @beforeClose="dialogAdd=false"
      interfaceUrl="/auth/fingercenter/finger/updatefinger/4/updatefinger"
    />
    <el-dialog
      width="34%"
      title="修改指纹名称"
      :before-close="beforeCloseInner"
      :visible.sync="innerVisible"
      append-to-body
    >
      <fel-form
        :formData="formData"
        :selects="selects"
        class="single-row"
        ref="felForm"
        width="100px"
        dynamic
        @closeForm="beforeCloseInner"
        @submitForm="onModify"
        :defaultData="defaultDataMoify"
      ></fel-form>
    </el-dialog>
  </el-dialog>
</template>

<script>
import detailsAdd from "./detailsAdd";
export default {
  components: {
    detailsAdd
  },
  props: {
    buss: null,
    param: Object,
    defaultData: {
      type: Object,
      default() {
        return {};
      }
    },
    dialogVisible: Boolean
  },
  data() {
    let $this = this;
    return {
      selects: {
        fingername: []
      },
      formData: [
        {
          name: "指纹名称",
          value: "fingername",
          type: "select",
          select: "fingername",
          vkey: "id",
          slabel: "name",
          svalue: ""
        }
      ],
      defaultDataMoify: {
        fingername: {}
      },
      busName: [],
      scope: {},
      innerVisible: false,
      paramAdd: {},
      dialogAdd: false,
      loadingtable: false,
      refresh: 0,
      listBut: [],
      list: [
        {
          name: "优先级",
          type: "index",
          width: "100px"
        },
        {
          name: "指纹编号",
          prop: "fingercode"
        },
        {
          name: "指纹名称",
          prop: "fingername"
        },
        {
          name: "指纹状态",
          template: {
            props: ["scope"],
            methods: {
              getClass() {
                let value = this.scope.row.fingerstate;
                if (value == "正常") {
                  return "puc-pg";
                } else if (value == "异常") {
                  return "puc-px";
                } else {
                  return "";
                }
              }
            },
            template: `<span :class='getClass()'>{{scope.row.fingerstate}}</span>`
          }
        },
        {
          name: "操作",
          minWidth: "230px",
          template: {
            computed: {
              listBut() {
                return $this.listBut;
              }
            },
            props: ["scope"],
            methods: {
              onClick(key, obj) {
                $this.onClick(key, this.scope, obj);
              }
            },
            template: `<div class="operat-buts"> 
             <el-button v-for="(v,i) of listBut" :key="i" type="text" size="small" @click.stop="onClick(v.id?v.id:v.type, v)">{{v.name||v.alias}}</el-button>
            </div>`
          }
        }
      ]
    };
  },
  watch: {
    dialogVisible(val) {
      if (val) {
        this.inGetfingertype();
      }
      if (this.dialogVisible) {
        this.onRefresh();
      }
    },
    buss() {
      this.buss.forEach(v => {
        if (v.entity.id == "551") {
          this.listBut.push(
            {
              type: "374",
              name: "上移"
            },
            {
              type: "375",
              name: "下移"
            }
          );
          this.busName = [v.entity];
        } else {
          this.listBut.push(v.entity);
        }
      });
    }
  },
  created() {},
  methods: {
    beforeCloseInner() {
      this.innerVisible = false;
    },
    onModify(data) {
      if (this.scope) {
        let fingercodes = this.scope.row.fingercode;
        this.$ajax(
          "/auth/fingercenter/finger/updatefinger/5/updatefingertype",
          { fingercodes },
          "1",
          data.fingername,
          true
        )
          .then(res => {
            this.onRefresh();
            this.innerVisible = false;
            this.$message({
              message: "修改成功",
              type: "success"
            });
          })
          .catch(err => {
            this.$message({
              showClose: true,
              message: `[${err.resultCode}] ` + err.resultMsg,
              type: "error"
            });
          });
      }
    },
    inGetfingertype() {
      this.$ajax(
        "/auth/fingercenter/finger/updatefinger/3/getfingertype",
        {},
        "1"
      )
        .then(res => {
          this.selects.fingername = res.result;
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    submitForm() {
      let queryData = this.$refs.pfelTable.queryData;
      if (queryData && queryData.length > 1) {
        this.$confirm("确定要调整优先级吗?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(() => {
          this.$ajax(
            "/auth/fingercenter/finger/updatefinger/2/changefingerpri",
            { personcode: this.param.personcode },
            "1",
            queryData,
            true
          )
            .then(res => {
              this.onRefresh();
              // this.$emit("beforeClose");
            })
            .catch(err => {
              this.$message({
                showClose: true,
                message: `[${err.resultCode}] ` + err.resultMsg,
                type: "error"
              });
            });
        });
      } else {
        this.$message({
          message: "无需调整",
          type: "warning"
        });
      }
    },
    onRefresh() {
      this.refresh = new Date().getTime();
    },
    beforeClose() {
      this.$emit("beforeClose");
    },
    onClick(key, data) {
      if (key == 374 || key == 375) {
        let queryData = this.$refs.pfelTable.queryData;
        let queryLength = queryData.length;
        if (queryLength > 1) {
          if (key == 374) {
            let index = data.$index;
            if (index == 0) {
              this.$message({
                message: "指纹优先级已经最高，无需调整",
                type: "warning"
              });
            } else {
              let arr = [];
              queryData.forEach((v, i) => {
                if (i == index) {
                  arr[i - 1] = v;
                } else if (i + 1 == index) {
                  arr[i + 1] = v;
                } else {
                  arr[i] = v;
                }
              });
              this.$refs.pfelTable.setQueryData(arr);
            }
          } else {
            let index = data.$index;
            if (index == queryLength - 1) {
              this.$message({
                message: "指纹优先级已经最低，无需调整",
                type: "warning"
              });
            } else {
              let arr = [];
              queryData.forEach((v, i) => {
                if (i == index) {
                  arr[i + 1] = v;
                } else if (i - 1 == index) {
                  arr[i - 1] = v;
                } else {
                  arr[i] = v;
                }
              });
              this.$refs.pfelTable.setQueryData(arr);
            }
          }
        } else {
          this.$message({
            message: "只有一个指纹，无需调整",
            type: "warning"
          });
        }
      } else if (key == "549") {
        this.$confirm("确定要删除当前指纹吗？", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        })
          .then(() => {
            this.updatebuild(data);
          })
          .catch(() => {});
      } else if (key == "550") {
        this.paramAdd = {
          personname: this.param.personname,
          personcode: this.param.personcode,
          fgseq: data.row.fingerseq,
          fingerseq: data.row.fingername
        };
        this.dialogAdd = true;
      } else if (key == "552") {
        this.scope = data;
        this.defaultDataMoify = {
          fingername: {
            id: data.row.fingerseq,
            name: data.row.fingername
          }
        };
        this.innerVisible = true;
      } else if (key == "551") {
        this.submitForm();
      }
    },
    updatebuild(data) {
      let fingercodes = data.row.fingercode;
      let index = data.$index;
      this.$ajax(
        "/auth/fingercenter/finger/updatefinger/6/deletefinger",
        { fingercodes },
        "1",
        {},
        true
      )
        .then(res => {
          // this.queryData.shift(index, 1);
          this.$emit("beforeClosecg");
          this.onRefresh();
          this.$message({
            message: "删除成功",
            type: "success"
          });
        })
        .catch(err => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error"
          });
        });
    },
    onSuccess() {
      this.dialogAdd = false;
      // this.onRefresh();
    }
  }
};
</script>
