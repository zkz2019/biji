<!-- 电池电量查询 -->
<template>
  <el-container>
    <el-header class="query_headbox">
      <retrieval class="query_head">
        <inpbox :inptext="'电量'">
          <el-select class="con-select qh_inp" v-model="param.quantitytype">
            <el-option
              v-for="item in quantitytypes"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            ></el-option>
          </el-select>
        </inpbox>
        <inpbox>
          <el-input
            clearable
            class="con-select qh_inp maR24"
            v-model="param.quantitylv"
            placeholder="输入电量"
          ></el-input>
        </inpbox>
        <inpbox :inptext="'选择位置'">
          <queryPosition
            ref="queryPosition"
            class="con-popover qh_inp"
            @onChoice="onChoiceWZ"
            interface="/analysis/quantityrecord/1/getbuildtree"
          ></queryPosition>
        </inpbox>
        <inpbox :inptext="'电量顺序'">
          <el-select class="con-select qh_inp" v-model="param.quantityseq">
            <el-option
              v-for="item in quantityseqs"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            ></el-option>
          </el-select>
        </inpbox>
        <inpbox :inptext="'是否在线'">
          <el-select class="con-select qh_inp" v-model="param.isonline">
            <el-option v-for="item in isonlines" :key="item.id" :label="item.name" :value="item.id"></el-option>
          </el-select>
        </inpbox>
        <inpbox :inptext="'请输入'">
          <el-input
            clearable
            class="con-search qh_inp"
            v-model="param.search"
            placeholder="输入位置/房间进行检索"
          ></el-input>
        </inpbox>
        <inpbox>
          <fel-button class="qh_btn" type="primary" @click="search">查询</fel-button>
          <fel-button class="qh_btn" @click="onReset">重置</fel-button>
        </inpbox>
      </retrieval>
    </el-header>
    <el-main class="padt0 query_main">
      <paging-table
        class="tobleList wh100"
        height="100%"
        interface="/analysis/quantityrecord/2/getquantityrecord"
        :list="list"
        :refresh="refresh"
        :param="param"
        :paramObj="paramObj"
        @onEjectChange="onEjectChange"
      >
        <span v-for="but of topButs" class="sli but-blue" @click="exportBut(but.id)">
          <i v-if="but.icon" :class="'ficon-'+but.icon"></i>
          {{but.alias}}
        </span>
      </paging-table>
    </el-main>
    <el-dialog
      title="电池电量记录"
      width="70%"
      class="grantDialog"
      :close-on-click-modal="false"
      :before-close="beforeClose"
      :visible.sync="dialogAdd"
    >
      <tjcharts class="dialog-table6 wh100" :refresh="refreshStatis" :param="statisParam"></tjcharts>
    </el-dialog>
    <exportHistory
      historyUrl="/analysis/quantityrecord/4/downquantityrecordhistory"
      :dialogVisible="iHvisible"
      @beforeClose="()=>{iHvisible=false}"
    ></exportHistory>
  </el-container>
</template>

<script>
import { timerDownload } from "../personnel/index.js";
import tjcharts from "./tjcharts";
import Storages from "../../utils/Storage.js"; //缓存工具
import exportHistory from "../personnel/export-history";
import queryPosition from "./queryPosition";
export default {
  name: "dcdlcx162",
  components: {
    queryPosition,
    exportHistory,
    tjcharts,
  },
  data() {
    let $this = this;
    return {
      isExport: false,
      isExportHistory: false,
      dialogAdd: false,
      iHvisible: false,
      refreshStatis: 0,
      statisParam: {},
      topButs: [],
      paramObj: {
        type: "1",
        arearoom: [],
        build: [],
      },
      isonlines: [
        {
          id: "",
          name: "全部",
        },
        {
          id: "1",
          name: "在线",
        },
        {
          id: "0",
          name: "离线",
        },
      ],
      quantityseqs: [
        {
          id: "0",
          name: "正序",
        },
        {
          id: "1",
          name: "逆序",
        },
      ],
      quantitytypes: [
        {
          id: "0",
          name: "小于等于",
        },
        {
          id: "1",
          name: "大于等于",
        },
      ],
      param: {
        quantitylv: "",
        search: "",
        isonline: "",
        quantityseq: "0",
        quantitytype: "0",
      },
      list: [
        {
          name: "序号",
          type: "$index",
          width: "60px",
        },
        {
          name: "房间类型",
          prop: "roomtype",
        },
        {
          name: "位置",
          prop: "roomlocation",
        },
        {
          name: "房间",
          prop: "roomname",
        },
        {
          name: "剩余电量",
          prop: "roomquantity",
        },
        {
          name: "是否在线",
          template: {
            props: ["scope"],
            methods: {
              getClass() {
                let value = this.scope.row.isonline;
                if (value == "在线") {
                  return "puc-pg";
                } else if (value == "离线") {
                  return "puc-px";
                } else {
                  return "";
                }
              },
            },
            template: `<span :class='getClass()'>{{scope.row.isonline}}</span>`,
          },
        },
        {
          name: "记录",
          template: {
            props: ["scope"],
            methods: {
              onClick() {
                $this.statisParam = Object.assign({}, this.scope.row);
                $this.refreshStatis = new Date().getTime();
                $this.dialogAdd = true;
              },
            },
            template: `<div class="operat-buts"> 
             <el-button type="text" size="small" @click.stop="onClick">查看</el-button>
            </div>`,
          },
        },
      ],
      refresh: 0,
    };
  },
  created() {
    this.inGetsonmenu();
  },
  mounted() {
    this.getEject();
  },
  activated() {
    let obj = this.$route.params;
    if (obj && obj.quantitylv) {
      this.param.quantitytype = "0";
      this.param.quantitylv = this.$route.params.quantitylv;
      this.search();
    }
  },
  methods: {
    exportBut(id) {
      if (id == "939") {
        let url = "/analysis/quantityrecord/3/exportquantityrecord";
        let name = "电池电量查询";
        this.inExportPackage(url, name, this.param, this.paramObj);
      } else if (id == "940") {
        this.exportHistory();
      }
    },

    inExportPackage(url, name, data = {}, obj = {}) {
      this.$ajax(url, data, "1", obj, true, 60000)
        .then((res) => {
          this.$message({
            message: name + "文件导出已下发，文件正在生成中",
            type: "success",
          });
          timerDownload(
            res.result,
            "/analysis/quantityrecord/4/downquantityrecordhistory",
            this,
            name
          );
        })
        .catch((err) => {
          this.$message({
            showClose: true,
            message: `[${err.resultCode}] ` + err.resultMsg,
            type: "error",
          });
        });
    },
    exportHistory() {
      this.iHvisible = true;
    },
    inGetsonmenu() {
      this.$ajax("/login/home/2/getsonmenu", { fatherid: "162" }, "1")
        .then((res) => {
          res.result.forEach((value) => {
            let entity = value.entity;
            let id = entity.id;
            if (id == "939") {
              this.topButs.push(entity);
            } else if (id == "940") {
              this.topButs.push(entity);
            }
          });
          this.sonmenu = 4;
        })
        .catch((err) => {
          if (this.sonmenu < 3) {
            setTimeout(() => {
              this.sonmenu++;
              this.inGetsonmenu();
            }, 1000);
          }
        });
    },
    beforeClose() {
      this.dialogAdd = false;
    },
    //重置事件
    onReset() {
      this.dates = [];
      Object.keys(this.param).forEach((key) => {
        this.param[key] = "";
      });
      this.$refs.queryPosition.onClear();
      this.param.quantitytype = "0";
      this.search();
    },
    onChoiceWZ(data, type) {
      if (type == "1") {
        this.paramObj.type = 2;
        this.paramObj.arearoom = data;
        this.paramObj.build = [];
      } else {
        this.paramObj.type = 1;
        this.paramObj.arearoom = [];
        this.paramObj.build = data;
      }
      // this.paramObj = data;
    },
    search() {
      this.refresh = new Date().getTime();
    },
    onEjectChange() {
      this.$common.onEjectChange(this.list, "dcdlcx162");
    },
    getEject() {
      this.$common.getEject(this, "list", "dcdlcx162");
    },
  },
};
</script>