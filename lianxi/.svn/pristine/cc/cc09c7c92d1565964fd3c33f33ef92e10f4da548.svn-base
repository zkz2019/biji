<!-- 房间管理导入导出  -->
<template>
  <el-dialog
    :title="topTitle"
    :visible.sync="dialogVisible"
    width="50%"
    :before-close="handleClose"
    :close-on-click-modal="false"
    append-to-body
    class="el-dialogs fjFile"
  >
    <div>
      <div v-if="exportButs.length >= 1">
        <h3 class="htitle">导出</h3>
        <div class="content">
          <el-button
            v-for="(v,k) of exportButs"
            :key="'e'+k"
            type="primary"
            @click.stop="onClickExport(v, k)"
          >{{v.name}}</el-button>
        </div>
      </div>
      <div v-if="importButs.length > 0">
        <div>
          <h3 class="htitle">
            导入
            <el-button class="htitle_history" type="text" @click="onClickHistory()">导入历史</el-button>
          </h3>
          <div class="content import min_h">
            <fel-upload
              :accept="wjType"
              class="disIB"
              @onChange="onChange"
              @onRemove="onRemove"
              ref="felUpload"
              listType="text"
              showFileList
              :timeout="120000"
              :intercept="intercept"
              :fileList="fileList"
              @uploadFile="uploadFile"
              @uploadError="uploadError"
              noAuto
            >
              <div class="text">
                点击此处,或将文件拖到此处
                <div slot="tip" class="el-upload__tip gui_text">只支持后缀名为{{wjType}}的文件，且文件大小不超过100MB</div>
              </div>
            </fel-upload>
            <div v-if="progressShow" class="progress_box">
              <span>{{uploadTitle}}&nbsp;&nbsp;&nbsp;{{uploadText}}</span>
              <el-progress
                class="progress"
                :percentage="percentage"
                :stroke-width="12"
                :color="prcolor"
              ></el-progress>
              <!-- <el-progress
               
                :text-inside="true"
                :stroke-width="14"
                :percentage="percentage"
                show-text
              ></el-progress>-->
            </div>
            <div v-if="textShow" class="progress_box">
              <span>{{uploadTitle}}&nbsp;&nbsp;&nbsp;导入完成!</span>
              <div>
                共:
                <span>{{uploadtotal.uploadallcount}}</span>条&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;成功:
                <span class="puc-pg">{{uploadtotal.uploadokcount}}</span>条&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;失败:
                <span class="puc-px">{{uploadtotal.uploadnocount}}</span>条&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <el-button class="progress_box_btn" type="text" size="mini" @click="onDetails">查看详情</el-button>
                <el-button
                  v-if="uploadtotal.uploadnocount>0"
                  class="progress_box_btn"
                  type="text"
                  size="mini"
                  @click="onErr"
                >失败导出</el-button>
              </div>
            </div>
            <div class="but">
              <div class="but_left">
                <el-button
                  v-for="(v,k) of exImportButs"
                  :key="k"
                  type="text"
                  @click="onClickExport(v, k)"
                >{{v.name}}</el-button>
              </div>
              <div class="but_right">
                <el-button v-for="(v,k) of importButs" :key="k" @click="onUpload(v,k)">{{v.name}}</el-button>
              </div>
              <!-- <el-button type="primary" @click="onUpload">确认导入</el-button> -->
            </div>
            <div class="errorText" v-if="errorText">
              {{errorText}}
              <el-button v-if="filepath" class="com-but-small" @click="onUploadError" type="success">下载</el-button>
            </div>
          </div>
        </div>
      </div>
    </div>
    <importHistory
      :dialogVisible="iHvisible"
      @beforeClose="()=>{iHvisible=false}"
      :uploadid="uploadId"
    ></importHistory>
    <importDetails
      :dialogDetailed="dialogDetailed"
      :uploadid="uploadtotal.uploadid"
      :listObj="{type:uploadtotal.uploadtype}"
      @beforeDetailed="beforeDetailed"
    ></importDetails>
  </el-dialog>
</template>

<script>
import importDetails from "./import-details";
import importHistory from "./import-history";
import Storages from "@/utils/Storage.js";
import { getuploadrate } from "@/utils/fjgl.js";
import { download } from "@/utils/utils.js";
export default {
  props: {
    dialogVisible: Boolean,
    title: String,
    importButs: {
      type: Array,
      default() {
        return [];
      }
    },
    exImportButs: {
      type: Array,
      default() {
        return [];
      }
    },
    exportButs: {
      type: Array,
      default() {
        return [];
      }
    }
  },
  components: { importHistory, importDetails },
  data() {
    return {
      dialogDetailed: false,
      progressShow: false,
      wjType: ".xls,.xlsx",
      isFile: 0,
      fileList: [],
      type: 0,
      errorText: "",
      filepath: "",
      format: "xxx",
      percentage: 0,
      times: null,
      iHvisible: false,
      fileName: "",
      uploadText: "文件导入中...",
      prcolor: "",
      // errcount: "",
      // okcount: "",
      // totalcount: "",
      uploadtotal: {},
      textShow: false,
      uploadTitle: ""
    };
  },
  watch: {
    dialogVisible(val) {
      this.clearFiles();
      this.onRemove();
      if (val) {
        if (this.uploadId) {
          getuploadrate(this.uploadId, this);
        }
      } else {
        this.progressShow = false;
        this.textShow = false;
        // clearTimeout(this.times);
      }
    }
  },
  computed: {
    topTitle() {
      if (this.importButs.length + this.exportButs.length > 1) {
        return "导入与导出";
      } else if (this.importButs.length != 0) {
        return this.importButs[0].name;
      } else if (this.exportButs.length != 0) {
        return this.exportButs[0].name;
      } else {
        return "导入与导出";
      }
    },
    uploadId() {
      return Storages.getStorage("uploadid");
    }
  },
  methods: {
    beforeDetailed() {
      this.dialogDetailed = false;
    },
    onDetails() {
      let obj = this.uploadtotal;
      this.dialogDetailed = true;
    },
    onErr() {
      let name = "";
      let failUrl = "";
      if (this.uploadtotal.uploadtype == "1") {
        failUrl = "/lock/upload/i/downuploadauthfail";
        name = "失败入住记录";
      } else if (this.uploadtotal.uploadtype == "2") {
        failUrl = "/lock/upload/j/downuploadauthbackfail";
        name = "失败退宿记录";
      } else {
        failUrl = "/lock/upload/k/downuploadauthcheckfail";
        name = "失败比对记录";
      }
      console.log("lls", this.uploadtotal);
      this.inExport(failUrl, name, { uploadid: this.uploadtotal.uploadid });
    },
    //导出
    inExport(url, name, data = {}, obj = {}) {
      this.$ajax(url, data, "8", obj, "文件导出中...", 60000)
        .then(res => {
          if (res.size) {
            download(res, name);
            this.$notify({
              title: "成功",
              message: name + "文件导出成功！",
              type: "success"
            });
          }
        })
        .catch(err => {
          this.$message.error("文件导出失败！失败原因：" + err.resultMsg);
        });
    },
    onClickTemp() {
      let obj = this.importButs[this.type];
      let t = this.title || "";
      this.inExport(obj.tempUrl, t + obj.name + "模板");
    },
    // onClickImport(obj, key) {
    //   this.type = key;
    // },
    onClickHistory() {
      this.iHvisible = true;
    },
    onClickExport(obj, key) {
      if (this.exportButs.length > 1) {
        if (obj.url) {
          let t = this.title || "";
          this.inExport(
            obj.url,
            obj.fileName || t + obj.name,
            obj.data,
            obj.obj
          );
        }
      } else {
        let t = this.title || "";
        this.inExport(obj.url, obj.fileName || t + obj.name, obj.data, obj.obj);
      }
    },
    inExport(url, name, data = {}, obj = {}) {
      this.$ajax(url, data, "3", obj, "文件导出中...", 60000)
        .then(res => {
          if (res.size) {
            download(res, name);
            this.$notify({
              title: "成功",
              message: name + "文件导出成功！",
              type: "success"
            });
          }
        })
        .catch(err => {
          this.$message.error("文件导出失败！失败原因：" + err.resultMsg);
        });
    },
    handleClose() {
      this.$emit("handleClose");
    },
    intercept(file) {
      const isLt2M = file.size < 100 * 1024 * 1024;
      if (!isLt2M) {
        this.$message.error("上传文件大小不能超过 100MB!");
      }
      let name = file.name;
      name = name.substr(name.lastIndexOf("."));
      const isTy = this.wjType.includes(name);
      if (!isTy) {
        this.$message.error(`只支持后缀名为${this.wjType}的文件`);
      }
      return isLt2M && isTy;
    },
    onUpload(v, k) {
      // return
      this.type = k;
      if (this.isFile == 1) {
        let obj = this.importButs[k];
        this.$refs.felUpload.submitUpload(obj.url, obj.data);
      } else if (this.isFile == 2) {
        this.$message({
          message: "文件已经上传成功状态，请重新选择",
          type: "warning"
        });
      } else {
        this.$message({
          message: "请先选择要上传的文件",
          type: "warning"
        });
      }
    },
    uploadError(content, err) {
      this.$message.error("文件上传失败！失败原因：" + err.resultMsg);
    },
    uploadFile(file, data) {
      this.fileName = file.name;
      Storages.setStorage("uploadname", file.name);
      Storages.setStorage("uploadid", data);
      this.isFile = 2;
      if (data.resultfail) {
        this.errorText = data.resultmsg;
        this.filepath = data.resultfail;
      }
      clearTimeout(this.times);
      this.prcolor = "";
      this.uploadText = "文件导入中...";
      Storages.setStorage("uploadnum", 0);
      Storages.setStorage("timesnum", 0);
      this.uploadTitle = Storages.getStorage("uploadname");
      this.progressShow = false;
      this.textShow = false;
      getuploadrate(data, this, true);
      // this.percentage=0;
    },
    // getuploadrate(val = this.uploadId) {
    //   if (val=="") {
    //     return;
    //   }
    //   this.$ajax("/lock/upload/l/getuploadrate", { uploadid: val }, "0").then(
    //     res => {
    //       let newtotal =
    //         Number(res.result.uploadnocount) + Number(res.result.uploadokcount);
    //       let total = Number(res.result.uploadallcount);
    //       this.percentage = Math.floor((newtotal / total) * 100);
    //       this.progressShow = true;
    //       if (newtotal != total) {
    //         this.times = setTimeout(() => {
    //           this.getuploadrate(val);
    //         }, 3000);
    //       } else {
    //         this.$notify({
    //           title: "成功",
    //           message: this.fileName + "导入完成！",
    //           type: "success"
    //         });
    //         Storages.setStorage("uploadid", "");
    //         clearTimeout(this.times);
    //       }
    //     }
    //   );
    // },
    onUploadError() {
      let obj = this.importButs[this.type];
      this.inExport(obj.errUrl, "导入失败数据", {
        filepath: this.filepath
      });
    },
    onRemove() {
      this.isFile = 0;
      this.errorText = "";
      this.filepath = "";
      // this.progressShow = false;
      if (this.$refs.felUpload) {
        setTimeout(() => {
          this.$refs.felUpload.showUpload(true);
        }, 600);
      }
    },
    onChange() {
      this.isFile = 1;
      // this.progressShow = false;
      // clearTimeout(this.times);
      this.$refs.felUpload.showUpload(false);
    },
    clearFiles() {
      if (this.$refs.felUpload) {
        this.$refs.felUpload.clearFiles();
      }
    }
  }
};
</script>

<style lang="scss">
.fjFile {
  .el-upload-dragger {
    min-height: 80px;
    .text {
      padding-top: 10px;
    }
  }
  .el-dialog {
    min-width: 640px;
    overflow: hidden;
  }
  .min_h {
    min-height: 130px;
  }
  .but {
    width: 30%;
    margin: 0 30px 0 0;
    .el-button {
      margin: 0;
      height: 32px;
      margin-bottom: 10px;
      line-height: 0;
    }
    .but_left {
      float: left;
      width: 50%;
    }
  }
  .content {
    position: relative;
    .disIB {
      height: 100px;
    }
    .errorText {
      position: absolute;
      bottom: 50px;
    }
    .progress_box {
      position: absolute;
      bottom: 0px;
      padding-top: 5px;
      width: 355px;
      .progress_title {
        float: left;
      }
      .progress {
        // float:left;
        min-width: 220px;
        margin-right: 10px;
      }
      .progress_box_btn {
        padding: 2px;
        font-size: 14px;
      }
    }
  }
  @media screen and (max-width: 1450px) {
    .content {
      width: 100%;
      display: flex;
      .disIB {
        flex: 1;
        .el-upload {
          width: 100%;
          .el-upload-dragger {
            width: 100%;
          }
        }
      }
      .but {
        margin: 0 30px;
        width: 200px;
      }
    }
  }
}
</style>
