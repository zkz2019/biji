<template>
  <el-dialog
    title="日志详情"
    width="70%"
    class="importHistory"
    append-to-body
    :close-on-click-modal="false"
    :before-close="beforeClose"
    :visible.sync="dialogVisible"
  >
    <el-container class="dialog-table6 wh100">
      <paging-table
        interface="/system/user/4/getlogdetails"
        :list="listInfo"
        :param="param"
        :refresh="refresh"
      ></paging-table>
    </el-container>
  </el-dialog>
</template>

<script>
export default {
  props: {
    dialogVisible: Boolean,
    logid: String | Number
  },
  data() {
    let $this = this;
    return {
      param: { logid: "" },
      refresh: 0,
      listInfo: [
        {
          name: "序号",
          type: "$index",
          width: "60px"
        },
        {
          name: "授权类型",
          prop: "authtype"
        },
        {
          name: "姓名",
          prop: "personname"
        },
        {
          name: "学/工号",
          prop: "personcode"
        },
        {
          name: "房间位置",
          prop: "roomlocation"
        },
        {
          name: "卡号/指纹号",
          prop: "authcode"
        },
        {
          name: "下发状态",
          prop: "issend",
          template: {
            props: ["scope"],
            methods: {
              getClass() {
                let value = this.scope.row.issend;
                if (value == "下发成功") {
                  return "puc-pg";
                } else if (value == "下发失败") {
                  return "puc-px";
                } else {
                  return "";
                }
              }
            },
            template: `<ul><li :class='getClass()'>{{scope.row.issend}}</li></ul>`
          }
        },
        {
          name: "备注",
          prop: "dudremark"
        }
      ]
    };
  },
  computed: {},
  watch: {
    dialogVisible(val) {
      if (val) {
        this.param.logid = this.logid;
        this.onRefresh();
      } else {
        this.param.logid = "";
      }
    }
  },
  methods: {
    beforeClose() {
      this.$emit("beforeClose");
    },
    onReset() {
      this.onRefresh();
    },
    onRefresh() {
      this.refresh = new Date().getTime();
    }
  }
};
</script>