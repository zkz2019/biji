{"ast":null,"code":"// redux-saga是一个用于管理应用程序的副作用的库，类比redux-thunk\n// 监听 takeEvery\n// 调用异步操作 call\n// 状态更新 （dispatch） put\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { UserService } from \"../service/user\"; // worker saga\n\nfunction* loginHandle(action) {\n  const res = yield call(UserService.login, {\n    name: \"小明\"\n  });\n  console.log(\"action1\", res);\n  const res2 = yield call(UserService.login, {\n    name: \"小明\"\n  });\n  console.log(\"action2\", res);\n  yield put({\n    type: \"LOGIN_SUCCESS\"\n  });\n} // watcher saga\n\n\nfunction* mySaga(props) {\n  yield takeEvery(\"login\", loginHandle);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["E:/alianxi/lesson5-pre/src/store/mySaga.js"],"names":["call","put","takeEvery","UserService","loginHandle","action","res","login","name","console","log","res2","type","mySaga","props"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AACA,SAAQC,WAAR,QAA0B,iBAA1B,C,CAEA;;AACA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,QAAMC,GAAG,GAAG,MAAMN,IAAI,CAACG,WAAW,CAACI,KAAb,EAAoB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAApB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,GAAvB;AACA,QAAMK,IAAI,GAAG,MAAMX,IAAI,CAACG,WAAW,CAACI,KAAb,EAAoB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAApB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,GAAvB;AACA,QAAML,GAAG,CAAC;AAACW,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAT;AACD,C,CAED;;;AACA,UAAUC,MAAV,CAAiBC,KAAjB,EAAwB;AACtB,QAAMZ,SAAS,CAAC,OAAD,EAAUE,WAAV,CAAf;AACD;;AAED,eAAeS,MAAf","sourcesContent":["// redux-saga是一个用于管理应用程序的副作用的库，类比redux-thunk\n// 监听 takeEvery\n// 调用异步操作 call\n// 状态更新 （dispatch） put\n\nimport {call, put, takeEvery} from \"redux-saga/effects\";\nimport {UserService} from \"../service/user\";\n\n// worker saga\nfunction* loginHandle(action) {\n  const res = yield call(UserService.login, {name: \"小明\"});\n  console.log(\"action1\", res);\n  const res2 = yield call(UserService.login, {name: \"小明\"});\n  console.log(\"action2\", res);\n  yield put({type: \"LOGIN_SUCCESS\"});\n}\n\n// watcher saga\nfunction* mySaga(props) {\n  yield takeEvery(\"login\", loginHandle);\n}\n\nexport default mySaga;\n"]},"metadata":{},"sourceType":"module"}